

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Wed Dec 18 06:24:36 2024

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	3
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	14
   109  000000                     main@T	equ	??_main+0
   110                           	global	main@T
   111  000000                     main@Z	equ	??_main+2
   112                           	global	main@Z
   113  000000                     main@TEMP	equ	??_main+4
   114                           	global	main@TEMP
   115  000000                     main@Y	equ	??_main+6
   116                           	global	main@Y
   117  000000                     main@X	equ	??_main+8
   118                           	global	main@X
   119  000000                     ___wmul@product	equ	??___wmul+0
   120                           	global	___wmul@product
   121  000000                     ___wmul@multiplier	equ	?___wmul+0
   122                           	global	___wmul@multiplier
   123  000000                     ___wmul@multiplicand	equ	?___wmul+2
   124                           	global	___wmul@multiplicand
   125  000000                     unlock@REF	equ	??_unlock+0
   126                           	global	unlock@REF
   127  000000                     unlock@i	equ	??_unlock+2
   128                           	global	unlock@i
   129  000000                     unlock@code	equ	?_unlock+0
   130                           	global	unlock@code
   131  000000                     ReadKey@Y	equ	??_ReadKey+0
   132                           	global	ReadKey@Y
   133  000000                     ReadKey@X	equ	??_ReadKey+1
   134                           	global	ReadKey@X
   135  000000                     ___awdiv@counter	equ	??___awdiv+0
   136                           	global	___awdiv@counter
   137  000000                     ___awdiv@sign	equ	??___awdiv+1
   138                           	global	___awdiv@sign
   139  000000                     ___awdiv@quotient	equ	??___awdiv+2
   140                           	global	___awdiv@quotient
   141  000000                     ___awdiv@dividend	equ	?___awdiv+0
   142                           	global	___awdiv@dividend
   143  000000                     ___awdiv@divisor	equ	?___awdiv+2
   144                           	global	___awdiv@divisor
   145  000000                     move@REF	equ	?_move+0
   146                           	global	move@REF
   147  000000                     screenClear@i	equ	??_screenClear+0
   148                           	global	screenClear@i
   149  000000                     playNote@flag	equ	?_playNote+0
   150                           	global	playNote@flag
   151  000000                     GetKey@RESULT	equ	??_GetKey+0
   152                           	global	GetKey@RESULT
   153  000000                     GetKey@i	equ	??_GetKey+1
   154                           	global	GetKey@i
   155  000000                     LCD_Move@Row	equ	?_LCD_Move+0
   156                           	global	LCD_Move@Row
   157  000000                     LCD_Move@Col	equ	?_LCD_Move+1
   158                           	global	LCD_Move@Col
   159  000000                     LCD_Out@i	equ	??_LCD_Out+0
   160                           	global	LCD_Out@i
   161  000000                     LCD_Out@A	equ	??_LCD_Out+1
   162                           	global	LCD_Out@A
   163  000000                     LCD_Out@DATA	equ	?_LCD_Out+0
   164                           	global	LCD_Out@DATA
   165  000000                     LCD_Out@D	equ	?_LCD_Out+4
   166                           	global	LCD_Out@D
   167  000000                     LCD_Out@N	equ	?_LCD_Out+5
   168                           	global	LCD_Out@N
   169  000000                     ___almod@sign	equ	??___almod+0
   170                           	global	___almod@sign
   171  000000                     ___almod@counter	equ	??___almod+1
   172                           	global	___almod@counter
   173  000000                     ___almod@dividend	equ	?___almod+0
   174                           	global	___almod@dividend
   175  000000                     ___almod@divisor	equ	?___almod+4
   176                           	global	___almod@divisor
   177  000000                     ___aldiv@counter	equ	??___aldiv+0
   178                           	global	___aldiv@counter
   179  000000                     ___aldiv@sign	equ	??___aldiv+1
   180                           	global	___aldiv@sign
   181  000000                     ___aldiv@quotient	equ	??___aldiv+2
   182                           	global	___aldiv@quotient
   183  000000                     ___aldiv@dividend	equ	?___aldiv+0
   184                           	global	___aldiv@dividend
   185  000000                     ___aldiv@divisor	equ	?___aldiv+4
   186                           	global	___aldiv@divisor
   187  000000                     LCD_Write@c	equ	?_LCD_Write+0
   188                           	global	LCD_Write@c
   189  000000                     LCD_Inst@c	equ	?_LCD_Inst+0
   190                           	global	LCD_Inst@c
   191  000000                     Wait_ms@i	equ	??_Wait_ms+0
   192                           	global	Wait_ms@i
   193  000000                     Wait_ms@j	equ	??_Wait_ms+2
   194                           	global	Wait_ms@j
   195  000000                     Wait_ms@X	equ	?_Wait_ms+0
   196                           	global	Wait_ms@X
   197  000000                     LCD_Pause@x	equ	??_LCD_Pause+0
   198                           	global	LCD_Pause@x
   199                           ;Data sizes: Strings 0, constant 107, data 4, bs
                                 s 0, persistent 0 stack 72
   200                           	global	_main
   201                           	global	??_main
   202                           	global	?_main
   203                                   psect   text0,class=CODE,space=0,reloc=2
   204                           
   205                           	opt lm
   206                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
   207                           	line	208
   208  000000                     	__size_of_main	equ	__end_of_main-_main
   209                           ;LockAnsSound.C: 207: void main(void)
   210                           ;LockAnsSound.C: 208: {
   211                           	
   212  00138A                     _main:		; BSR set to: ?
   213                           
   214                           	opt stack 30
   215                           	line	212
   216  00138A  0E00               	movlw	low(0)
   217  00138C  6E92               	movwf	((c:3986)),c	;volatile
   218                           	line	213
   219                           ;LockAnsSound.C: 213: TRISB = 0xFF;
   220  00138E  6893               	setf	((c:3987)),c	;volatile
   221                           	line	214
   222                           ;LockAnsSound.C: 214: TRISC = 0xF8;
   223  001390  0EF8               	movlw	low(0F8h)
   224  001392  6E94               	movwf	((c:3988)),c	;volatile
   225                           	line	215
   226                           ;LockAnsSound.C: 215: TRISD = 0;
   227  001394  0E00               	movlw	low(0)
   228  001396  6E95               	movwf	((c:3989)),c	;volatile
   229                           	line	216
   230                           ;LockAnsSound.C: 216: TRISE = 0;
   231  001398  0E00               	movlw	low(0)
   232  00139A  6E96               	movwf	((c:3990)),c	;volatile
   233                           	line	217
   234                           ;LockAnsSound.C: 217: TRISA = 0;
   235  00139C  0E00               	movlw	low(0)
   236  00139E  6E92               	movwf	((c:3986)),c	;volatile
   237                           	line	218
   238                           ;LockAnsSound.C: 218: ADCON1 = 15;
   239  0013A0  0101               	movlb	1	; () banked
   240  0013A2  6F0A               	movwf	(??_main+10+0)&0ffh
   241  0013A4  0E0F               	movlw	low(0Fh)
   242  0013A6  6EC1               	movwf	((c:4033)),c
   243  0013A8  0101               	movlb	1	; () banked
   244  0013AA  510A               	movf	(??_main+10+0)&0ffh,w
   245                           	line	221
   246                           ;LockAnsSound.C: 221: T0CS = 0;
   247  0013AC  9AD5               	bcf	c:(32429/8),(32429)&7
   248                           	line	222
   249                           ;LockAnsSound.C: 222: T0CON = 0x88;
   250  0013AE  0101               	movlb	1	; () banked
   251  0013B0  6F0A               	movwf	(??_main+10+0)&0ffh
   252  0013B2  0E88               	movlw	low(088h)
   253  0013B4  6ED5               	movwf	((c:4053)),c
   254  0013B6  0101               	movlb	1	; () banked
   255  0013B8  510A               	movf	(??_main+10+0)&0ffh,w
   256                           	line	223
   257                           ;LockAnsSound.C: 223: TMR0ON = 1;
   258  0013BA  8ED5               	bsf	c:(32431/8),(32431)&7
   259                           	line	224
   260                           ;LockAnsSound.C: 224: TMR0IE = 1;
   261  0013BC  8AF2               	bsf	c:(32661/8),(32661)&7
   262                           	line	225
   263                           ;LockAnsSound.C: 225: TMR0IP = 1;
   264  0013BE  84F1               	bsf	c:(32650/8),(32650)&7
   265                           	line	226
   266                           ;LockAnsSound.C: 226: PEIE = 1;
   267  0013C0  8CF2               	bsf	c:(32662/8),(32662)&7
   268                           	line	228
   269                           ;LockAnsSound.C: 228: TMR1CS = 0;
   270  0013C2  92CD               	bcf	c:(32361/8),(32361)&7
   271                           	line	229
   272                           ;LockAnsSound.C: 229: T1CON = 0x81;
   273  0013C4  0101               	movlb	1	; () banked
   274  0013C6  6F0A               	movwf	(??_main+10+0)&0ffh
   275  0013C8  0E81               	movlw	low(081h)
   276  0013CA  6ECD               	movwf	((c:4045)),c
   277  0013CC  0101               	movlb	1	; () banked
   278  0013CE  510A               	movf	(??_main+10+0)&0ffh,w
   279                           	line	230
   280                           ;LockAnsSound.C: 230: TMR1ON = 1;
   281  0013D0  80CD               	bsf	c:(32360/8),(32360)&7
   282                           	line	231
   283                           ;LockAnsSound.C: 231: TMR1IE = 1;
   284  0013D2  809D               	bsf	c:(31976/8),(31976)&7
   285                           	line	232
   286                           ;LockAnsSound.C: 232: TMR1IP = 1;
   287  0013D4  809F               	bsf	c:(31992/8),(31992)&7
   288                           	line	233
   289                           ;LockAnsSound.C: 233: PEIE = 1;
   290  0013D6  8CF2               	bsf	c:(32662/8),(32662)&7
   291                           	line	235
   292                           ;LockAnsSound.C: 235: TMR3CS = 0;
   293  0013D8  92B1               	bcf	c:(32137/8),(32137)&7
   294                           	line	236
   295                           ;LockAnsSound.C: 236: T3CON = 0x81;
   296  0013DA  0101               	movlb	1	; () banked
   297  0013DC  6F0A               	movwf	(??_main+10+0)&0ffh
   298  0013DE  0E81               	movlw	low(081h)
   299  0013E0  6EB1               	movwf	((c:4017)),c
   300  0013E2  0101               	movlb	1	; () banked
   301  0013E4  510A               	movf	(??_main+10+0)&0ffh,w
   302                           	line	237
   303                           ;LockAnsSound.C: 237: TMR3ON = 1;
   304  0013E6  80B1               	bsf	c:(32136/8),(32136)&7
   305                           	line	238
   306                           ;LockAnsSound.C: 238: TMR3IE = 1;
   307  0013E8  82A0               	bsf	c:(32001/8),(32001)&7
   308                           	line	239
   309                           ;LockAnsSound.C: 239: TMR3IP = 1;
   310  0013EA  82A2               	bsf	c:(32017/8),(32017)&7
   311                           	line	240
   312                           ;LockAnsSound.C: 240: PEIE = 1;
   313  0013EC  8CF2               	bsf	c:(32662/8),(32662)&7
   314                           	line	243
   315                           ;LockAnsSound.C: 243: GIE = 1;
   316  0013EE  8EF2               	bsf	c:(32663/8),(32663)&7
   317                           	line	245
   318                           ;LockAnsSound.C: 245: LCD_Init();
   319  0013F0  ECE2  F011         	call	_LCD_Init	;wreg free
   320                           	line	247
   321                           ;LockAnsSound.C: 247: X = 0;
   322  0013F4  0E00               	movlw	low(0)
   323  0013F6  0101               	movlb	1	; () banked
   324  0013F8  0101               	movlb	1	; () banked
   325  0013FA  6F08               	movwf	((main@X))&0ffh
   326  0013FC  0E00               	movlw	high(0)
   327  0013FE  0101               	movlb	1	; () banked
   328  001400  6F09               	movwf	((main@X+1))&0ffh
   329                           	line	248
   330                           ;LockAnsSound.C: 248: Y = 0;
   331  001402  0E00               	movlw	low(0)
   332  001404  0101               	movlb	1	; () banked
   333  001406  0101               	movlb	1	; () banked
   334  001408  6F06               	movwf	((main@Y))&0ffh
   335  00140A  0E00               	movlw	high(0)
   336  00140C  0101               	movlb	1	; () banked
   337  00140E  6F07               	movwf	((main@Y+1))&0ffh
   338                           	line	249
   339                           ;LockAnsSound.C: 249: Z = 0;
   340  001410  0E00               	movlw	low(0)
   341  001412  0101               	movlb	1	; () banked
   342  001414  0101               	movlb	1	; () banked
   343  001416  6F02               	movwf	((main@Z))&0ffh
   344  001418  0E00               	movlw	high(0)
   345  00141A  0101               	movlb	1	; () banked
   346  00141C  6F03               	movwf	((main@Z+1))&0ffh
   347                           	line	250
   348                           ;LockAnsSound.C: 250: T = 0;
   349  00141E  0E00               	movlw	low(0)
   350  001420  0101               	movlb	1	; () banked
   351  001422  0101               	movlb	1	; () banked
   352  001424  6F00               	movwf	((main@T))&0ffh
   353  001426  0E00               	movlw	high(0)
   354  001428  0101               	movlb	1	; () banked
   355  00142A  6F01               	movwf	((main@T+1))&0ffh
   356                           	line	252
   357                           ;LockAnsSound.C: 252: LCD_Move(0,0); LCD_Write('
                                 Y');
   358  00142C  0101               	movlb	1	; () banked
   359  00142E  6F0A               	movwf	(??_main+10+0)&0ffh
   360  001430  0E00               	movlw	low(0)
   361  001432  0101               	movlb	1	; () banked
   362  001434  0101               	movlb	1	; () banked
   363  001436  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   364  001438  0101               	movlb	1	; () banked
   365  00143A  510A               	movf	(??_main+10+0)&0ffh,w
   366  00143C  0101               	movlb	1	; () banked
   367  00143E  6F0B               	movwf	(??_main+11+0)&0ffh
   368  001440  0E00               	movlw	low(0)
   369  001442  0101               	movlb	1	; () banked
   370  001444  0101               	movlb	1	; () banked
   371  001446  6F18               	movwf	((?_LCD_Move))&0ffh
   372  001448  0101               	movlb	1	; () banked
   373  00144A  510B               	movf	(??_main+11+0)&0ffh,w
   374  00144C  EC2B  F012         	call	_LCD_Move	;wreg free
   375  001450  0101               	movlb	1	; () banked
   376  001452  6F0A               	movwf	(??_main+10+0)&0ffh
   377  001454  0E59               	movlw	low(059h)
   378  001456  0101               	movlb	1	; () banked
   379  001458  0101               	movlb	1	; () banked
   380  00145A  6F2A               	movwf	((?_LCD_Write))&0ffh
   381  00145C  0101               	movlb	1	; () banked
   382  00145E  510A               	movf	(??_main+10+0)&0ffh,w
   383  001460  EC2C  F013         	call	_LCD_Write	;wreg free
   384                           	line	253
   385                           ;LockAnsSound.C: 253: LCD_Move(1,0); LCD_Write('
                                 X');
   386  001464  0101               	movlb	1	; () banked
   387  001466  6F0A               	movwf	(??_main+10+0)&0ffh
   388  001468  0E00               	movlw	low(0)
   389  00146A  0101               	movlb	1	; () banked
   390  00146C  0101               	movlb	1	; () banked
   391  00146E  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   392  001470  0101               	movlb	1	; () banked
   393  001472  510A               	movf	(??_main+10+0)&0ffh,w
   394  001474  0101               	movlb	1	; () banked
   395  001476  6F0B               	movwf	(??_main+11+0)&0ffh
   396  001478  0E01               	movlw	low(01h)
   397  00147A  0101               	movlb	1	; () banked
   398  00147C  0101               	movlb	1	; () banked
   399  00147E  6F18               	movwf	((?_LCD_Move))&0ffh
   400  001480  0101               	movlb	1	; () banked
   401  001482  510B               	movf	(??_main+11+0)&0ffh,w
   402  001484  EC2B  F012         	call	_LCD_Move	;wreg free
   403  001488  0101               	movlb	1	; () banked
   404  00148A  6F0A               	movwf	(??_main+10+0)&0ffh
   405  00148C  0E58               	movlw	low(058h)
   406  00148E  0101               	movlb	1	; () banked
   407  001490  0101               	movlb	1	; () banked
   408  001492  6F2A               	movwf	((?_LCD_Write))&0ffh
   409  001494  0101               	movlb	1	; () banked
   410  001496  510A               	movf	(??_main+10+0)&0ffh,w
   411  001498  EC2C  F013         	call	_LCD_Write	;wreg free
   412                           	line	255
   413                           ;LockAnsSound.C: 255: while(1) {
   414                           	
   415  00149C                     l242:		; BSR set to: ?
   416                           
   417                           	line	257
   418                           ;LockAnsSound.C: 257: TEMP = ReadKey();
   419  00149C  EC06  F013         	call	_ReadKey	;wreg free
   420  0014A0  0101               	movlb	1	; () banked
   421  0014A2  6F0A               	movwf	(??_main+10+0)&0ffh
   422  0014A4  0101               	movlb	1	; () banked
   423  0014A6  510A               	movf	((??_main+10+0))&0ffh,w
   424  0014A8  0101               	movlb	1	; () banked
   425  0014AA  0101               	movlb	1	; () banked
   426  0014AC  6F04               	movwf	((main@TEMP))&0ffh
   427  0014AE  0101               	movlb	1	; () banked
   428  0014B0  6B05               	clrf	((main@TEMP+1))&0ffh
   429                           	line	259
   430                           ;LockAnsSound.C: 259: if (TEMP < 10) X = (X*10) 
                                 + TEMP;
   431  0014B2  0101               	movlb	1	; () banked
   432  0014B4  0101               	movlb	1	; () banked
   433  0014B6  5105               	movf	((main@TEMP+1))&0ffh,w
   434  0014B8  0A80               	xorlw	80h
   435  0014BA  0F80               	addlw	-((0)^80h)
   436  0014BC  0E0A               	movlw	0Ah
   437  0014BE  B4D8               	btfsc	status,2
   438  0014C0  5D04               	subwf	((main@TEMP))&0ffh,w
   439  0014C2  B0D8               	btfsc	status,0
   440  0014C4  D001               	goto	u3181
   441  0014C6  D001               	goto	u3180
   442  0014C8                     u3181:
   443  0014C8  D01E               	goto	l244
   444  0014CA                     u3180:
   445  0014CA  0E0A               	movlw	low(0Ah)
   446  0014CC  0101               	movlb	1	; () banked
   447  0014CE  0101               	movlb	1	; () banked
   448  0014D0  6F0E               	movwf	(0+(?___wmul+02h))&0ffh
   449  0014D2  0E00               	movlw	high(0Ah)
   450  0014D4  0101               	movlb	1	; () banked
   451  0014D6  6F0F               	movwf	(1+(?___wmul+02h))&0ffh
   452  0014D8  C108  F10C         	movff	(main@X),(?___wmul)
   453  0014DC  C109  F10D         	movff	(main@X+1),(?___wmul+1)
   454  0014E0  ECAC  F012         	call	___wmul	;wreg free
   455  0014E4  0101               	movlb	1	; () banked
   456  0014E6  0101               	movlb	1	; () banked
   457  0014E8  5104               	movf	((main@TEMP))&0ffh,w
   458  0014EA  0101               	movlb	1	; () banked
   459  0014EC  0101               	movlb	1	; () banked
   460  0014EE  250C               	addwf	(0+?___wmul)&0ffh,w
   461  0014F0  0101               	movlb	1	; () banked
   462                           	
   463  0014F2  0101               	movlb	1	; () banked
   464  0014F4  6F08               	movwf	((main@X))&0ffh
   465  0014F6  0101               	movlb	1	; () banked
   466  0014F8  0101               	movlb	1	; () banked
   467  0014FA  5105               	movf	((main@TEMP+1))&0ffh,w
   468  0014FC  0101               	movlb	1	; () banked
   469  0014FE  0101               	movlb	1	; () banked
   470  001500  210D               	addwfc	(1+?___wmul)&0ffh,w
   471  001502  0101               	movlb	1	; () banked
   472  001504  6F09               	movwf	1+((main@X))&0ffh
   473                           	
   474  001506                     l244:		; BSR set to: ?
   475                           
   476                           	line	261
   477                           ;LockAnsSound.C: 261: if (TEMP == 10) {
   478  001506  0101               	movlb	1	; () banked
   479  001508  0101               	movlb	1	; () banked
   480  00150A  5104               	movf	((main@TEMP))&0ffh,w
   481  00150C  0A0A               	xorlw	10
   482  00150E  1105               	iorwf ((main@TEMP+1))&0ffh,w
   483                           
   484  001510  A4D8               	btfss	status,2
   485  001512  D001               	goto	u3191
   486  001514  D001               	goto	u3190
   487  001516                     u3191:
   488  001516  D019               	goto	l245
   489  001518                     u3190:
   490                           	line	262
   491                           ;LockAnsSound.C: 262: T = Z;
   492  001518  C102  F100         	movff	(main@Z),(main@T)
   493  00151C  C103  F101         	movff	(main@Z+1),(main@T+1)
   494                           	line	263
   495                           ;LockAnsSound.C: 263: Z = Y;
   496  001520  C106  F102         	movff	(main@Y),(main@Z)
   497  001524  C107  F103         	movff	(main@Y+1),(main@Z+1)
   498                           	line	264
   499                           ;LockAnsSound.C: 264: Y = X;
   500  001528  C108  F106         	movff	(main@X),(main@Y)
   501  00152C  C109  F107         	movff	(main@X+1),(main@Y+1)
   502                           	line	265
   503                           ;LockAnsSound.C: 265: X = 0;
   504  001530  0E00               	movlw	low(0)
   505  001532  0101               	movlb	1	; () banked
   506  001534  0101               	movlb	1	; () banked
   507  001536  6F08               	movwf	((main@X))&0ffh
   508  001538  0E00               	movlw	high(0)
   509  00153A  0101               	movlb	1	; () banked
   510  00153C  6F09               	movwf	((main@X+1))&0ffh
   511                           	line	267
   512                           ;LockAnsSound.C: 267: unlock(Y);
   513  00153E  C106  F10C         	movff	(main@Y),(?_unlock)
   514  001542  C107  F10D         	movff	(main@Y+1),(?_unlock+1)
   515+ 001546  EC39  F008         	call	_unlock	;wreg free
   516+                          	line	268
   517+                          	
   518+ 00154A                     l245:		; BSR set to: ?
   519                           
   520                           	line	269
   521                           ;LockAnsSound.C: 268: }
   522                           ;LockAnsSound.C: 269: if (TEMP == 11) {
   523  00154A  0101               	movlb	1	; () banked
   524  00154C  0101               	movlb	1	; () banked
   525  00154E  5104               	movf	((main@TEMP))&0ffh,w
   526  001550  0A0B               	xorlw	11
   527  001552  1105               	iorwf ((main@TEMP+1))&0ffh,w
   528                           
   529  001554  A4D8               	btfss	status,2
   530  001556  D001               	goto	u3201
   531  001558  D001               	goto	u3200
   532  00155A                     u3201:
   533  00155A  D011               	goto	l246
   534  00155C                     u3200:
   535                           	line	270
   536                           ;LockAnsSound.C: 270: X = X/10;
   537  00155C  0E0A               	movlw	low(0Ah)
   538  00155E  0101               	movlb	1	; () banked
   539  001560  0101               	movlb	1	; () banked
   540  001562  6F0E               	movwf	(0+(?___awdiv+02h))&0ffh
   541  001564  0E00               	movlw	high(0Ah)
   542  001566  0101               	movlb	1	; () banked
   543  001568  6F0F               	movwf	(1+(?___awdiv+02h))&0ffh
   544  00156A  C108  F10C         	movff	(main@X),(?___awdiv)
   545  00156E  C109  F10D         	movff	(main@X+1),(?___awdiv+1)
   546  001572  EC54  F010         	call	___awdiv	;wreg free
   547  001576  C10C  F108         	movff	0+?___awdiv,(main@X)
   548  00157A  C10D  F109         	movff	1+?___awdiv,(main@X+1)
   549                           	line	271
   550                           	
   551  00157E                     l246:		; BSR set to: ?
   552                           
   553                           	line	273
   554                           ;LockAnsSound.C: 271: }
   555                           ;LockAnsSound.C: 273: LCD_Move(1,5); LCD_Out(X, 
                                 5, 0);
   556  00157E  0101               	movlb	1	; () banked
   557  001580  6F0A               	movwf	(??_main+10+0)&0ffh
   558  001582  0E05               	movlw	low(05h)
   559  001584  0101               	movlb	1	; () banked
   560  001586  0101               	movlb	1	; () banked
   561  001588  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   562  00158A  0101               	movlb	1	; () banked
   563  00158C  510A               	movf	(??_main+10+0)&0ffh,w
   564  00158E  0101               	movlb	1	; () banked
   565  001590  6F0B               	movwf	(??_main+11+0)&0ffh
   566  001592  0E01               	movlw	low(01h)
   567  001594  0101               	movlb	1	; () banked
   568  001596  0101               	movlb	1	; () banked
   569  001598  6F18               	movwf	((?_LCD_Move))&0ffh
   570  00159A  0101               	movlb	1	; () banked
   571  00159C  510B               	movf	(??_main+11+0)&0ffh,w
   572  00159E  EC2B  F012         	call	_LCD_Move	;wreg free
   573  0015A2  0101               	movlb	1	; () banked
   574  0015A4  6F0A               	movwf	(??_main+10+0)&0ffh
   575  0015A6  0E00               	movlw	low(0)
   576  0015A8  0101               	movlb	1	; () banked
   577  0015AA  0101               	movlb	1	; () banked
   578  0015AC  6F1D               	movwf	(0+(?_LCD_Out+05h))&0ffh
   579  0015AE  0101               	movlb	1	; () banked
   580  0015B0  510A               	movf	(??_main+10+0)&0ffh,w
   581  0015B2  0101               	movlb	1	; () banked
   582  0015B4  6F0B               	movwf	(??_main+11+0)&0ffh
   583  0015B6  0E05               	movlw	low(05h)
   584  0015B8  0101               	movlb	1	; () banked
   585  0015BA  0101               	movlb	1	; () banked
   586  0015BC  6F1C               	movwf	(0+(?_LCD_Out+04h))&0ffh
   587  0015BE  0101               	movlb	1	; () banked
   588  0015C0  510B               	movf	(??_main+11+0)&0ffh,w
   589  0015C2  0101               	movlb	1	; () banked
   590  0015C4  0101               	movlb	1	; () banked
   591  0015C6  C108  F118         	movff	(main@X),(?_LCD_Out)
   592  0015CA  0101               	movlb	1	; () banked
   593  0015CC  0101               	movlb	1	; () banked
   594  0015CE  C109  F119         	movff	(main@X+1),(?_LCD_Out+1)
   595  0015D2  0101               	movlb	1	; () banked
   596  0015D4  0E00               	movlw	0
   597  0015D6  0101               	movlb	1	; () banked
   598  0015D8  BF19               	btfsc	((?_LCD_Out+1))&0ffh,7
   599  0015DA  0EFF               	movlw	-1
   600  0015DC  0101               	movlb	1	; () banked
   601  0015DE  6F1A               	movwf	((?_LCD_Out+2))&0ffh
   602  0015E0  0101               	movlb	1	; () banked
   603  0015E2  6F1B               	movwf	((?_LCD_Out+3))&0ffh
   604  0015E4  ECE0  F00E         	call	_LCD_Out	;wreg free
   605                           	line	274
   606                           ;LockAnsSound.C: 274: LCD_Move(0,5); LCD_Out(Y, 
                                 5, 0);
   607  0015E8  0101               	movlb	1	; () banked
   608  0015EA  6F0A               	movwf	(??_main+10+0)&0ffh
   609  0015EC  0E05               	movlw	low(05h)
   610  0015EE  0101               	movlb	1	; () banked
   611  0015F0  0101               	movlb	1	; () banked
   612  0015F2  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   613  0015F4  0101               	movlb	1	; () banked
   614  0015F6  510A               	movf	(??_main+10+0)&0ffh,w
   615  0015F8  0101               	movlb	1	; () banked
   616  0015FA  6F0B               	movwf	(??_main+11+0)&0ffh
   617  0015FC  0E00               	movlw	low(0)
   618  0015FE  0101               	movlb	1	; () banked
   619  001600  0101               	movlb	1	; () banked
   620  001602  6F18               	movwf	((?_LCD_Move))&0ffh
   621  001604  0101               	movlb	1	; () banked
   622  001606  510B               	movf	(??_main+11+0)&0ffh,w
   623  001608  EC2B  F012         	call	_LCD_Move	;wreg free
   624  00160C  0101               	movlb	1	; () banked
   625  00160E  6F0A               	movwf	(??_main+10+0)&0ffh
   626  001610  0E00               	movlw	low(0)
   627  001612  0101               	movlb	1	; () banked
   628  001614  0101               	movlb	1	; () banked
   629  001616  6F1D               	movwf	(0+(?_LCD_Out+05h))&0ffh
   630  001618  0101               	movlb	1	; () banked
   631  00161A  510A               	movf	(??_main+10+0)&0ffh,w
   632  00161C  0101               	movlb	1	; () banked
   633  00161E  6F0B               	movwf	(??_main+11+0)&0ffh
   634  001620  0E05               	movlw	low(05h)
   635  001622  0101               	movlb	1	; () banked
   636  001624  0101               	movlb	1	; () banked
   637  001626  6F1C               	movwf	(0+(?_LCD_Out+04h))&0ffh
   638  001628  0101               	movlb	1	; () banked
   639  00162A  510B               	movf	(??_main+11+0)&0ffh,w
   640  00162C  0101               	movlb	1	; () banked
   641  00162E  0101               	movlb	1	; () banked
   642  001630  C106  F118         	movff	(main@Y),(?_LCD_Out)
   643  001634  0101               	movlb	1	; () banked
   644  001636  0101               	movlb	1	; () banked
   645  001638  C107  F119         	movff	(main@Y+1),(?_LCD_Out+1)
   646  00163C  0101               	movlb	1	; () banked
   647  00163E  0E00               	movlw	0
   648  001640  0101               	movlb	1	; () banked
   649  001642  BF19               	btfsc	((?_LCD_Out+1))&0ffh,7
   650  001644  0EFF               	movlw	-1
   651  001646  0101               	movlb	1	; () banked
   652  001648  6F1A               	movwf	((?_LCD_Out+2))&0ffh
   653  00164A  0101               	movlb	1	; () banked
   654  00164C  6F1B               	movwf	((?_LCD_Out+3))&0ffh
   655  00164E  ECE0  F00E         	call	_LCD_Out	;wreg free
   656                           	line	276
   657                           	
   658  001652                     l241:		; BSR set to: ?
   659                           
   660                           	line	255
   661  001652  D724               	goto	l242
   662                           	global	start
   663  001654  EF0C  F004         	goto	start
   664                           	opt stack 0
   665                           GLOBAL __end_of_main
   666  001658                     	__end_of_main:
   667                           	FNSIZE	_main,12,0
   668                           ; =============== function _main ends ==========
                                 ==
   669                           
   670                                   psect   text1,class=CODE,space=0,reloc=2
   671                           	line	279
   672                           
   673                           	opt lm
   674                           	signat	_main,88
   675                           	global	___wmul
   676                           	global	??___wmul
   677                           	global	?___wmul
   678                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\wmul.c"
   679                           	line	3
   680  000000                     	__size_of___wmul	equ	__end_of___wmul-___wmul
   681                           	
   682  002558                     ___wmul:		; BSR set to: ?
   683                           
   684                           	opt stack 29
   685                           	line	4
   686  002558  0E00               	movlw	low(0)
   687  00255A  0101               	movlb	1	; () banked
   688  00255C  0101               	movlb	1	; () banked
   689  00255E  6F10               	movwf	((___wmul@product))&0ffh
   690  002560  0E00               	movlw	high(0)
   691  002562  0101               	movlb	1	; () banked
   692  002564  6F11               	movwf	((___wmul@product+1))&0ffh
   693                           	line	6
   694                           	
   695  002566                     l581:		; BSR set to: ?
   696                           
   697                           	line	7
   698  002566  0101               	movlb	1	; () banked
   699                           	
   700  002568  0101               	movlb	1	; () banked
   701  00256A  A10C               	btfss	((___wmul@multiplier))&0ffh,(0)&7
   702  00256C  D001               	goto	u2391
   703  00256E  D001               	goto	u2390
   704  002570                     u2391:
   705  002570  D00C               	goto	l582
   706  002572                     u2390:
   707                           	line	8
   708  002572  0101               	movlb	1	; () banked
   709  002574  0101               	movlb	1	; () banked
   710  002576  510E               	movf	((___wmul@multiplicand))&0ffh,w
   711  002578  0101               	movlb	1	; () banked
   712  00257A  0101               	movlb	1	; () banked
   713  00257C  2710               	addwf	((___wmul@product))&0ffh
   714  00257E  0101               	movlb	1	; () banked
   715  002580  0101               	movlb	1	; () banked
   716  002582  510F               	movf	((___wmul@multiplicand+1))&0ffh,w
   717  002584  0101               	movlb	1	; () banked
   718  002586  0101               	movlb	1	; () banked
   719  002588  2311               	addwfc	((___wmul@product+1))&0ffh
   720                           
   721                           	
   722  00258A                     l582:		; BSR set to: ?
   723                           
   724                           	line	9
   725  00258A  0101               	movlb	1	; () banked
   726  00258C  90D8               	bcf	status,0
   727  00258E  0101               	movlb	1	; () banked
   728  002590  370E               	rlcf	((___wmul@multiplicand))&0ffh
   729  002592  0101               	movlb	1	; () banked
   730  002594  370F               	rlcf	((___wmul@multiplicand+1))&0ffh
   731                           	line	10
   732  002596  0101               	movlb	1	; () banked
   733  002598  90D8               	bcf	status,0
   734  00259A  0101               	movlb	1	; () banked
   735  00259C  330D               	rrcf	((___wmul@multiplier+1))&0ffh
   736  00259E  0101               	movlb	1	; () banked
   737  0025A0  330C               	rrcf	((___wmul@multiplier))&0ffh
   738                           	line	11
   739  0025A2  0101               	movlb	1	; () banked
   740  0025A4  0101               	movlb	1	; () banked
   741  0025A6  510D               	movf	((___wmul@multiplier+1))&0ffh,w
   742  0025A8  110C               	iorwf ((___wmul@multiplier))&0ffh,w
   743                           
   744  0025AA  A4D8               	btfss	status,2
   745  0025AC  D001               	goto	u2401
   746  0025AE  D001               	goto	u2400
   747  0025B0                     u2401:
   748  0025B0  D7DA               	goto	l581
   749  0025B2                     u2400:
   750                           	
   751  0025B2                     l580:		; BSR set to: ?
   752                           
   753                           	line	12
   754  0025B2  C110  F10C         	movff	(___wmul@product),(?___wmul)
   755  0025B6  C111  F10D         	movff	(___wmul@product+1),(?___wmul+1)
   756  0025BA  D000               	goto	l578
   757                           	line	13
   758  0025BC                     l578:
   759                           			; BSR set to: ?
   760                           
   761  0025BC  0012               	return
   762                           	opt stack 0
   763                           GLOBAL __end_of___wmul
   764  0025BE                     	__end_of___wmul:
   765                           	FNSIZE	___wmul,2,4
   766                           ; =============== function ___wmul ends ========
                                 ====
   767                           
   768                           	signat	___wmul,8314
   769                           	global	_unlock
   770                           	global	??_unlock
   771                           	global	?_unlock
   772                                   psect   text2,class=CODE,space=0,reloc=2
   773                           
   774                           	opt lm
   775                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
   776                           	line	171
   777  000000                     	__size_of_unlock	equ	__end_of_unlock-_unlock
   778                           ;LockAnsSound.C: 170: void unlock(int code)
   779                           ;LockAnsSound.C: 171: {
   780                           	
   781  001072                     _unlock:		; BSR set to: ?
   782                           
   783                           	opt stack 29
   784                           	line	173
   785                           ;LockAnsSound.C: 172: int i,j;
   786                           ;LockAnsSound.C: 173: int REF = 100;
   787  001072  0E64               	movlw	low(064h)
   788  001074  0101               	movlb	1	; () banked
   789  001076  0101               	movlb	1	; () banked
   790  001078  6F0E               	movwf	((unlock@REF))&0ffh
   791  00107A  0E00               	movlw	high(064h)
   792  00107C  0101               	movlb	1	; () banked
   793  00107E  6F0F               	movwf	((unlock@REF+1))&0ffh
   794                           	line	176
   795                           ;LockAnsSound.C: 176: if(code == lockCode){
   796  001080  0E6A               	movlw	low((_lockCode))
   797  001082  6EF6               	movwf	tblptrl
   798  001084  0E10               	movlw	high((_lockCode))
   799  001086  6EF7               	movwf	tblptrh
   800  001088  0E00               	movlw	low highword((_lockCode))
   801  00108A  6EF8               	movwf	tblptru
   802  00108C  0009               	tblrd	*+
   803                           	
   804  00108E  CFF5 F112          	movff	tablat,??_unlock+4+0
   805  001092  0009               	tblrd	*+
   806                           	
   807  001094  CFF5 F113          	movff	tablat,??_unlock+4+0+1
   808  001098  0101               	movlb	1	; () banked
   809  00109A  5113               	movf	(??_unlock+4+1)&0ffh,w
   810  00109C  0101               	movlb	1	; () banked
   811  00109E  0101               	movlb	1	; () banked
   812  0010A0  190D               	xorwf	((unlock@code+1))&0ffh,w
   813  0010A2  E105               	bnz	u3085
   814  0010A4  0101               	movlb	1	; () banked
   815  0010A6  5112               	movf	(??_unlock+4+0)&0ffh,w
   816  0010A8  0101               	movlb	1	; () banked
   817  0010AA  0101               	movlb	1	; () banked
   818  0010AC  190C               	xorwf	((unlock@code))&0ffh,w
   819  0010AE                     u3085:
   820                           
   821  0010AE  A4D8               	btfss	status,2
   822  0010B0  D001               	goto	u3081
   823  0010B2  D001               	goto	u3080
   824  0010B4                     u3081:
   825  0010B4  D0A0               	goto	l225
   826  0010B6                     u3080:
   827                           	line	177
   828                           ;LockAnsSound.C: 177: LCD_Move(0,0); for (i=0; i
                                 <20; i++) LCD_Write(MSG2[i]);
   829  0010B6  0101               	movlb	1	; () banked
   830  0010B8  6F12               	movwf	(??_unlock+4+0)&0ffh
   831  0010BA  0E00               	movlw	low(0)
   832  0010BC  0101               	movlb	1	; () banked
   833  0010BE  0101               	movlb	1	; () banked
   834  0010C0  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   835  0010C2  0101               	movlb	1	; () banked
   836  0010C4  5112               	movf	(??_unlock+4+0)&0ffh,w
   837  0010C6  0101               	movlb	1	; () banked
   838  0010C8  6F13               	movwf	(??_unlock+5+0)&0ffh
   839  0010CA  0E00               	movlw	low(0)
   840  0010CC  0101               	movlb	1	; () banked
   841  0010CE  0101               	movlb	1	; () banked
   842  0010D0  6F18               	movwf	((?_LCD_Move))&0ffh
   843  0010D2  0101               	movlb	1	; () banked
   844  0010D4  5113               	movf	(??_unlock+5+0)&0ffh,w
   845  0010D6  EC2B  F012         	call	_LCD_Move	;wreg free
   846  0010DA  0E00               	movlw	low(0)
   847  0010DC  0101               	movlb	1	; () banked
   848  0010DE  0101               	movlb	1	; () banked
   849  0010E0  6F10               	movwf	((unlock@i))&0ffh
   850  0010E2  0E00               	movlw	high(0)
   851  0010E4  0101               	movlb	1	; () banked
   852  0010E6  6F11               	movwf	((unlock@i+1))&0ffh
   853  0010E8  0101               	movlb	1	; () banked
   854  0010EA  0101               	movlb	1	; () banked
   855  0010EC  5111               	movf	((unlock@i+1))&0ffh,w
   856  0010EE  0A80               	xorlw	80h
   857  0010F0  0F80               	addlw	-((0)^80h)
   858  0010F2  0E14               	movlw	014h
   859  0010F4  B4D8               	btfsc	status,2
   860  0010F6  5D10               	subwf	((unlock@i))&0ffh,w
   861  0010F8  A0D8               	btfss	status,0
   862  0010FA  D001               	goto	u3091
   863  0010FC  D001               	goto	u3090
   864  0010FE                     u3091:
   865  0010FE  D001               	goto	l226
   866  001100                     u3090:
   867  001100  D021               	goto	l227
   868                           	
   869  001102                     l226:		; BSR set to: ?
   870                           
   871  001102  0E2B               	movlw	low((_MSG2))
   872  001104  0101               	movlb	1	; () banked
   873  001106  0101               	movlb	1	; () banked
   874  001108  2510               	addwf	((unlock@i))&0ffh,w
   875  00110A  6EF6               	movwf	tblptrl
   876  00110C  6AF7               	clrf	tblptrh
   877  00110E  0E10               	movlw	high((_MSG2))
   878  001110  22F7               	addwfc	tblptrh
   879  001112  6AF8               	clrf	tblptru
   880  001114  0E00               	movlw	low highword(__mediumconst)
   881  001116  22F8               	addwfc	tblptru
   882  001118  0008               	tblrd	*
   883                           	
   884  00111A  0101               	movlb	1	; () banked
   885  00111C  CFF5 F12A          	movff	tablat,(?_LCD_Write)
   886  001120  EC2C  F013         	call	_LCD_Write	;wreg free
   887  001124  0101               	movlb	1	; () banked
   888  001126  0101               	movlb	1	; () banked
   889  001128  4B10               	infsnz	((unlock@i))&0ffh
   890  00112A  2B11               	incf	((unlock@i+1))&0ffh
   891  00112C  0101               	movlb	1	; () banked
   892  00112E  0101               	movlb	1	; () banked
   893  001130  5111               	movf	((unlock@i+1))&0ffh,w
   894  001132  0A80               	xorlw	80h
   895  001134  0F80               	addlw	-((0)^80h)
   896  001136  0E14               	movlw	014h
   897  001138  B4D8               	btfsc	status,2
   898  00113A  5D10               	subwf	((unlock@i))&0ffh,w
   899  00113C  A0D8               	btfss	status,0
   900  00113E  D001               	goto	u3101
   901  001140  D001               	goto	u3100
   902  001142                     u3101:
   903  001142  D7DF               	goto	l226
   904  001144                     u3100:
   905                           	
   906  001144                     l227:		; BSR set to: ?
   907                           
   908                           	line	178
   909                           ;LockAnsSound.C: 178: LCD_Move(1,0); for (i=0; i
                                 <20; i++) LCD_Write(MSG3[i]);
   910  001144  0101               	movlb	1	; () banked
   911  001146  6F12               	movwf	(??_unlock+4+0)&0ffh
   912  001148  0E00               	movlw	low(0)
   913  00114A  0101               	movlb	1	; () banked
   914  00114C  0101               	movlb	1	; () banked
   915  00114E  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
   916  001150  0101               	movlb	1	; () banked
   917  001152  5112               	movf	(??_unlock+4+0)&0ffh,w
   918  001154  0101               	movlb	1	; () banked
   919  001156  6F13               	movwf	(??_unlock+5+0)&0ffh
   920  001158  0E01               	movlw	low(01h)
   921  00115A  0101               	movlb	1	; () banked
   922  00115C  0101               	movlb	1	; () banked
   923  00115E  6F18               	movwf	((?_LCD_Move))&0ffh
   924  001160  0101               	movlb	1	; () banked
   925  001162  5113               	movf	(??_unlock+5+0)&0ffh,w
   926  001164  EC2B  F012         	call	_LCD_Move	;wreg free
   927  001168  0E00               	movlw	low(0)
   928  00116A  0101               	movlb	1	; () banked
   929  00116C  0101               	movlb	1	; () banked
   930  00116E  6F10               	movwf	((unlock@i))&0ffh
   931  001170  0E00               	movlw	high(0)
   932  001172  0101               	movlb	1	; () banked
   933  001174  6F11               	movwf	((unlock@i+1))&0ffh
   934  001176  0101               	movlb	1	; () banked
   935  001178  0101               	movlb	1	; () banked
   936  00117A  5111               	movf	((unlock@i+1))&0ffh,w
   937  00117C  0A80               	xorlw	80h
   938  00117E  0F80               	addlw	-((0)^80h)
   939  001180  0E14               	movlw	014h
   940  001182  B4D8               	btfsc	status,2
   941  001184  5D10               	subwf	((unlock@i))&0ffh,w
   942  001186  A0D8               	btfss	status,0
   943  001188  D001               	goto	u3111
   944  00118A  D001               	goto	u3110
   945  00118C                     u3111:
   946  00118C  D001               	goto	l229
   947  00118E                     u3110:
   948  00118E  D021               	goto	l230
   949                           	
   950  001190                     l229:		; BSR set to: ?
   951                           
   952  001190  0E40               	movlw	low((_MSG3))
   953  001192  0101               	movlb	1	; () banked
   954  001194  0101               	movlb	1	; () banked
   955  001196  2510               	addwf	((unlock@i))&0ffh,w
   956  001198  6EF6               	movwf	tblptrl
   957  00119A  6AF7               	clrf	tblptrh
   958  00119C  0E10               	movlw	high((_MSG3))
   959  00119E  22F7               	addwfc	tblptrh
   960  0011A0  6AF8               	clrf	tblptru
   961  0011A2  0E00               	movlw	low highword(__mediumconst)
   962  0011A4  22F8               	addwfc	tblptru
   963  0011A6  0008               	tblrd	*
   964                           	
   965  0011A8  0101               	movlb	1	; () banked
   966  0011AA  CFF5 F12A          	movff	tablat,(?_LCD_Write)
   967  0011AE  EC2C  F013         	call	_LCD_Write	;wreg free
   968  0011B2  0101               	movlb	1	; () banked
   969  0011B4  0101               	movlb	1	; () banked
   970  0011B6  4B10               	infsnz	((unlock@i))&0ffh
   971  0011B8  2B11               	incf	((unlock@i+1))&0ffh
   972  0011BA  0101               	movlb	1	; () banked
   973  0011BC  0101               	movlb	1	; () banked
   974  0011BE  5111               	movf	((unlock@i+1))&0ffh,w
   975  0011C0  0A80               	xorlw	80h
   976  0011C2  0F80               	addlw	-((0)^80h)
   977  0011C4  0E14               	movlw	014h
   978  0011C6  B4D8               	btfsc	status,2
   979  0011C8  5D10               	subwf	((unlock@i))&0ffh,w
   980  0011CA  A0D8               	btfss	status,0
   981  0011CC  D001               	goto	u3121
   982  0011CE  D001               	goto	u3120
   983  0011D0                     u3121:
   984  0011D0  D7DF               	goto	l229
   985  0011D2                     u3120:
   986                           	
   987  0011D2                     l230:		; BSR set to: ?
   988                           
   989                           	line	181
   990                           ;LockAnsSound.C: 181: playNote(1);
   991  0011D2  0E01               	movlw	low(01h)
   992  0011D4  0101               	movlb	1	; () banked
   993  0011D6  0101               	movlb	1	; () banked
   994  0011D8  6F14               	movwf	((?_playNote))&0ffh
   995  0011DA  0E00               	movlw	high(01h)
   996  0011DC  0101               	movlb	1	; () banked
   997  0011DE  6F15               	movwf	((?_playNote+1))&0ffh
   998  0011E0  ECEC  F010         	call	_playNote	;wreg free
   999                           	line	182
  1000                           ;LockAnsSound.C: 182: screenClear();
  1001  0011E4  EC1C  F00E         	call	_screenClear	;wreg free
  1002                           	line	183
  1003                           ;LockAnsSound.C: 183: move(REF);
  1004  0011E8  C10E  F114         	movff	(unlock@REF),(?_move)
  1005  0011EC  C10F  F115         	movff	(unlock@REF+1),(?_move+1)
  1006  0011F0  ECA4  F00F         	call	_move	;wreg free
  1007                           	line	184
  1008                           ;LockAnsSound.C: 184: }
  1009  0011F4  D099               	goto	l232
  1010                           	line	187
  1011                           	
  1012  0011F6                     l225:		; BSR set to: ?
  1013                           
  1014                           	line	188
  1015                           ;LockAnsSound.C: 187: else{
  1016                           ;LockAnsSound.C: 188: LCD_Move(0,0); for (i=0; i
                                 <20; i++) LCD_Write(MSG0[i]);
  1017  0011F6  0101               	movlb	1	; () banked
  1018  0011F8  6F12               	movwf	(??_unlock+4+0)&0ffh
  1019  0011FA  0E00               	movlw	low(0)
  1020  0011FC  0101               	movlb	1	; () banked
  1021  0011FE  0101               	movlb	1	; () banked
  1022  001200  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1023  001202  0101               	movlb	1	; () banked
  1024  001204  5112               	movf	(??_unlock+4+0)&0ffh,w
  1025  001206  0101               	movlb	1	; () banked
  1026  001208  6F13               	movwf	(??_unlock+5+0)&0ffh
  1027  00120A  0E00               	movlw	low(0)
  1028  00120C  0101               	movlb	1	; () banked
  1029  00120E  0101               	movlb	1	; () banked
  1030  001210  6F18               	movwf	((?_LCD_Move))&0ffh
  1031  001212  0101               	movlb	1	; () banked
  1032  001214  5113               	movf	(??_unlock+5+0)&0ffh,w
  1033  001216  EC2B  F012         	call	_LCD_Move	;wreg free
  1034  00121A  0E00               	movlw	low(0)
  1035  00121C  0101               	movlb	1	; () banked
  1036  00121E  0101               	movlb	1	; () banked
  1037  001220  6F10               	movwf	((unlock@i))&0ffh
  1038  001222  0E00               	movlw	high(0)
  1039  001224  0101               	movlb	1	; () banked
  1040  001226  6F11               	movwf	((unlock@i+1))&0ffh
  1041  001228  0101               	movlb	1	; () banked
  1042  00122A  0101               	movlb	1	; () banked
  1043  00122C  5111               	movf	((unlock@i+1))&0ffh,w
  1044  00122E  0A80               	xorlw	80h
  1045  001230  0F80               	addlw	-((0)^80h)
  1046  001232  0E14               	movlw	014h
  1047  001234  B4D8               	btfsc	status,2
  1048  001236  5D10               	subwf	((unlock@i))&0ffh,w
  1049  001238  A0D8               	btfss	status,0
  1050  00123A  D001               	goto	u3131
  1051  00123C  D001               	goto	u3130
  1052  00123E                     u3131:
  1053  00123E  D001               	goto	l233
  1054  001240                     u3130:
  1055  001240  D021               	goto	l234
  1056                           	
  1057  001242                     l233:		; BSR set to: ?
  1058                           
  1059  001242  0E01               	movlw	low((_MSG0))
  1060  001244  0101               	movlb	1	; () banked
  1061  001246  0101               	movlb	1	; () banked
  1062  001248  2510               	addwf	((unlock@i))&0ffh,w
  1063  00124A  6EF6               	movwf	tblptrl
  1064  00124C  6AF7               	clrf	tblptrh
  1065  00124E  0E10               	movlw	high((_MSG0))
  1066  001250  22F7               	addwfc	tblptrh
  1067  001252  6AF8               	clrf	tblptru
  1068  001254  0E00               	movlw	low highword(__mediumconst)
  1069  001256  22F8               	addwfc	tblptru
  1070  001258  0008               	tblrd	*
  1071                           	
  1072  00125A  0101               	movlb	1	; () banked
  1073  00125C  CFF5 F12A          	movff	tablat,(?_LCD_Write)
  1074  001260  EC2C  F013         	call	_LCD_Write	;wreg free
  1075  001264  0101               	movlb	1	; () banked
  1076  001266  0101               	movlb	1	; () banked
  1077  001268  4B10               	infsnz	((unlock@i))&0ffh
  1078  00126A  2B11               	incf	((unlock@i+1))&0ffh
  1079  00126C  0101               	movlb	1	; () banked
  1080  00126E  0101               	movlb	1	; () banked
  1081  001270  5111               	movf	((unlock@i+1))&0ffh,w
  1082  001272  0A80               	xorlw	80h
  1083  001274  0F80               	addlw	-((0)^80h)
  1084  001276  0E14               	movlw	014h
  1085  001278  B4D8               	btfsc	status,2
  1086  00127A  5D10               	subwf	((unlock@i))&0ffh,w
  1087  00127C  A0D8               	btfss	status,0
  1088  00127E  D001               	goto	u3141
  1089  001280  D001               	goto	u3140
  1090  001282                     u3141:
  1091  001282  D7DF               	goto	l233
  1092  001284                     u3140:
  1093                           	
  1094  001284                     l234:		; BSR set to: ?
  1095                           
  1096                           	line	189
  1097                           ;LockAnsSound.C: 189: LCD_Move(1,0); for (i=0; i
                                 <20; i++) LCD_Write(MSG1[i]);
  1098  001284  0101               	movlb	1	; () banked
  1099  001286  6F12               	movwf	(??_unlock+4+0)&0ffh
  1100  001288  0E00               	movlw	low(0)
  1101  00128A  0101               	movlb	1	; () banked
  1102  00128C  0101               	movlb	1	; () banked
  1103  00128E  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1104  001290  0101               	movlb	1	; () banked
  1105  001292  5112               	movf	(??_unlock+4+0)&0ffh,w
  1106  001294  0101               	movlb	1	; () banked
  1107  001296  6F13               	movwf	(??_unlock+5+0)&0ffh
  1108  001298  0E01               	movlw	low(01h)
  1109  00129A  0101               	movlb	1	; () banked
  1110  00129C  0101               	movlb	1	; () banked
  1111  00129E  6F18               	movwf	((?_LCD_Move))&0ffh
  1112  0012A0  0101               	movlb	1	; () banked
  1113  0012A2  5113               	movf	(??_unlock+5+0)&0ffh,w
  1114  0012A4  EC2B  F012         	call	_LCD_Move	;wreg free
  1115  0012A8  0E00               	movlw	low(0)
  1116  0012AA  0101               	movlb	1	; () banked
  1117  0012AC  0101               	movlb	1	; () banked
  1118  0012AE  6F10               	movwf	((unlock@i))&0ffh
  1119  0012B0  0E00               	movlw	high(0)
  1120  0012B2  0101               	movlb	1	; () banked
  1121  0012B4  6F11               	movwf	((unlock@i+1))&0ffh
  1122  0012B6  0101               	movlb	1	; () banked
  1123  0012B8  0101               	movlb	1	; () banked
  1124  0012BA  5111               	movf	((unlock@i+1))&0ffh,w
  1125  0012BC  0A80               	xorlw	80h
  1126  0012BE  0F80               	addlw	-((0)^80h)
  1127  0012C0  0E14               	movlw	014h
  1128  0012C2  B4D8               	btfsc	status,2
  1129  0012C4  5D10               	subwf	((unlock@i))&0ffh,w
  1130  0012C6  A0D8               	btfss	status,0
  1131  0012C8  D001               	goto	u3151
  1132  0012CA  D001               	goto	u3150
  1133  0012CC                     u3151:
  1134  0012CC  D001               	goto	l236
  1135  0012CE                     u3150:
  1136  0012CE  D021               	goto	l237
  1137                           	
  1138  0012D0                     l236:		; BSR set to: ?
  1139                           
  1140  0012D0  0E16               	movlw	low((_MSG1))
  1141  0012D2  0101               	movlb	1	; () banked
  1142  0012D4  0101               	movlb	1	; () banked
  1143  0012D6  2510               	addwf	((unlock@i))&0ffh,w
  1144  0012D8  6EF6               	movwf	tblptrl
  1145  0012DA  6AF7               	clrf	tblptrh
  1146  0012DC  0E10               	movlw	high((_MSG1))
  1147  0012DE  22F7               	addwfc	tblptrh
  1148  0012E0  6AF8               	clrf	tblptru
  1149  0012E2  0E00               	movlw	low highword(__mediumconst)
  1150  0012E4  22F8               	addwfc	tblptru
  1151  0012E6  0008               	tblrd	*
  1152                           	
  1153  0012E8  0101               	movlb	1	; () banked
  1154  0012EA  CFF5 F12A          	movff	tablat,(?_LCD_Write)
  1155  0012EE  EC2C  F013         	call	_LCD_Write	;wreg free
  1156  0012F2  0101               	movlb	1	; () banked
  1157  0012F4  0101               	movlb	1	; () banked
  1158  0012F6  4B10               	infsnz	((unlock@i))&0ffh
  1159  0012F8  2B11               	incf	((unlock@i+1))&0ffh
  1160  0012FA  0101               	movlb	1	; () banked
  1161  0012FC  0101               	movlb	1	; () banked
  1162  0012FE  5111               	movf	((unlock@i+1))&0ffh,w
  1163  001300  0A80               	xorlw	80h
  1164  001302  0F80               	addlw	-((0)^80h)
  1165  001304  0E14               	movlw	014h
  1166  001306  B4D8               	btfsc	status,2
  1167  001308  5D10               	subwf	((unlock@i))&0ffh,w
  1168  00130A  A0D8               	btfss	status,0
  1169  00130C  D001               	goto	u3161
  1170  00130E  D001               	goto	u3160
  1171  001310                     u3161:
  1172  001310  D7DF               	goto	l236
  1173  001312                     u3160:
  1174                           	
  1175  001312                     l237:		; BSR set to: ?
  1176                           
  1177                           	line	191
  1178                           ;LockAnsSound.C: 191: playNote(0);
  1179  001312  0E00               	movlw	low(0)
  1180  001314  0101               	movlb	1	; () banked
  1181  001316  0101               	movlb	1	; () banked
  1182  001318  6F14               	movwf	((?_playNote))&0ffh
  1183  00131A  0E00               	movlw	high(0)
  1184  00131C  0101               	movlb	1	; () banked
  1185  00131E  6F15               	movwf	((?_playNote+1))&0ffh
  1186  001320  ECEC  F010         	call	_playNote	;wreg free
  1187                           	line	192
  1188                           ;LockAnsSound.C: 192: screenClear();
  1189  001324  EC1C  F00E         	call	_screenClear	;wreg free
  1190                           	line	193
  1191                           	
  1192  001328                     l232:		; BSR set to: ?
  1193                           
  1194                           	line	196
  1195                           ;LockAnsSound.C: 193: }
  1196                           ;LockAnsSound.C: 196: if(code == lockCode){
  1197  001328  0E6A               	movlw	low((_lockCode))
  1198  00132A  6EF6               	movwf	tblptrl
  1199  00132C  0E10               	movlw	high((_lockCode))
  1200  00132E  6EF7               	movwf	tblptrh
  1201  001330  0E00               	movlw	low highword((_lockCode))
  1202  001332  6EF8               	movwf	tblptru
  1203  001334  0009               	tblrd	*+
  1204                           	
  1205  001336  CFF5 F112          	movff	tablat,??_unlock+4+0
  1206  00133A  0009               	tblrd	*+
  1207                           	
  1208  00133C  CFF5 F113          	movff	tablat,??_unlock+4+0+1
  1209  001340  0101               	movlb	1	; () banked
  1210  001342  5113               	movf	(??_unlock+4+1)&0ffh,w
  1211  001344  0101               	movlb	1	; () banked
  1212  001346  0101               	movlb	1	; () banked
  1213  001348  190D               	xorwf	((unlock@code+1))&0ffh,w
  1214  00134A  E105               	bnz	u3175
  1215  00134C  0101               	movlb	1	; () banked
  1216  00134E  5112               	movf	(??_unlock+4+0)&0ffh,w
  1217  001350  0101               	movlb	1	; () banked
  1218  001352  0101               	movlb	1	; () banked
  1219  001354  190C               	xorwf	((unlock@code))&0ffh,w
  1220  001356                     u3175:
  1221                           
  1222  001356  A4D8               	btfss	status,2
  1223  001358  D001               	goto	u3171
  1224  00135A  D001               	goto	u3170
  1225  00135C                     u3171:
  1226  00135C  D014               	goto	l239
  1227  00135E                     u3170:
  1228                           	line	197
  1229                           ;LockAnsSound.C: 197: Wait_ms(5000);
  1230  00135E  0E88               	movlw	low(01388h)
  1231  001360  0101               	movlb	1	; () banked
  1232  001362  0101               	movlb	1	; () banked
  1233  001364  6F1C               	movwf	((?_Wait_ms))&0ffh
  1234  001366  0E13               	movlw	high(01388h)
  1235  001368  0101               	movlb	1	; () banked
  1236  00136A  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  1237  00136C  EC6D  F012         	call	_Wait_ms	;wreg free
  1238                           	line	198
  1239                           ;LockAnsSound.C: 198: move(0);
  1240  001370  0E00               	movlw	low(0)
  1241  001372  0101               	movlb	1	; () banked
  1242  001374  0101               	movlb	1	; () banked
  1243  001376  6F14               	movwf	((?_move))&0ffh
  1244  001378  0E00               	movlw	high(0)
  1245  00137A  0101               	movlb	1	; () banked
  1246  00137C  6F15               	movwf	((?_move+1))&0ffh
  1247  00137E  ECA4  F00F         	call	_move	;wreg free
  1248                           	line	199
  1249                           ;LockAnsSound.C: 199: screenClear();
  1250  001382  EC1C  F00E         	call	_screenClear	;wreg free
  1251                           	line	200
  1252                           	
  1253  001386                     l239:		; BSR set to: ?
  1254                           
  1255                           	line	202
  1256                           ;LockAnsSound.C: 200: }
  1257                           ;LockAnsSound.C: 202: return;
  1258  001386  D000               	goto	l224
  1259                           	line	203
  1260                           ;LockAnsSound.C: 203: }
  1261  001388                     l224:
  1262                           			; BSR set to: ?
  1263                           
  1264  001388  0012               	return
  1265                           	opt stack 0
  1266                           GLOBAL __end_of_unlock
  1267  00138A                     	__end_of_unlock:
  1268                           	FNSIZE	_unlock,6,2
  1269                           ; =============== function _unlock ends ========
                                 ====
  1270                           
  1271                           	signat	_unlock,4216
  1272                           	global	_ReadKey
  1273                           	global	??_ReadKey
  1274                           	global	?_ReadKey
  1275                                   psect   text3,class=CODE,space=0,reloc=2
  1276                           
  1277                           	opt lm
  1278                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
  1279                           	line	88
  1280  000000                     	__size_of_ReadKey	equ	__end_of_ReadKey-_ReadKey
  1281                           ;LockAnsSound.C: 87: char ReadKey(void)
  1282                           ;LockAnsSound.C: 88: {
  1283                           	
  1284  00260C                     _ReadKey:		; BSR set to: ?
  1285                           
  1286                           	opt stack 29
  1287                           	line	90
  1288                           	
  1289  00260C                     l203:		; BSR set to: ?
  1290                           
  1291                           	line	91
  1292                           ;LockAnsSound.C: 91: X = GetKey();
  1293  00260C  EC2C  F00B         	call	_GetKey	;wreg free
  1294  002610  0101               	movlb	1	; () banked
  1295  002612  0101               	movlb	1	; () banked
  1296  002614  6F0D               	movwf	((ReadKey@X))&0ffh
  1297                           	line	92
  1298                           ;LockAnsSound.C: 92: } while(X > 20);
  1299  002616  0E15               	movlw	(015h)&0ffh
  1300  002618  0101               	movlb	1	; () banked
  1301  00261A  0101               	movlb	1	; () banked
  1302  00261C  610D               	cpfslt	((ReadKey@X))&0ffh
  1303  00261E  D001               	goto	u3501
  1304  002620  D001               	goto	u3500
  1305  002622                     u3501:
  1306  002622  D7F4               	goto	l203
  1307  002624                     u3500:
  1308                           	
  1309  002624                     l202:		; BSR set to: ?
  1310                           
  1311                           	line	93
  1312                           ;LockAnsSound.C: 93: do {
  1313                           	
  1314  002624                     l206:		; BSR set to: ?
  1315                           
  1316                           	line	94
  1317                           ;LockAnsSound.C: 94: Y = GetKey();
  1318  002624  EC2C  F00B         	call	_GetKey	;wreg free
  1319  002628  0101               	movlb	1	; () banked
  1320  00262A  0101               	movlb	1	; () banked
  1321  00262C  6F0C               	movwf	((ReadKey@Y))&0ffh
  1322                           	line	95
  1323                           ;LockAnsSound.C: 95: } while(Y < 20);
  1324  00262E  0E13               	movlw	(014h-1)
  1325  002630  0101               	movlb	1	; () banked
  1326  002632  0101               	movlb	1	; () banked
  1327  002634  650C               	cpfsgt	((ReadKey@Y))&0ffh
  1328  002636  D001               	goto	u3511
  1329  002638  D001               	goto	u3510
  1330  00263A                     u3511:
  1331  00263A  D7F4               	goto	l206
  1332  00263C                     u3510:
  1333                           	
  1334  00263C                     l205:		; BSR set to: ?
  1335                           
  1336                           	line	96
  1337                           ;LockAnsSound.C: 96: Wait_ms(100);
  1338  00263C  0E64               	movlw	low(064h)
  1339  00263E  0101               	movlb	1	; () banked
  1340  002640  0101               	movlb	1	; () banked
  1341  002642  6F1C               	movwf	((?_Wait_ms))&0ffh
  1342  002644  0E00               	movlw	high(064h)
  1343  002646  0101               	movlb	1	; () banked
  1344  002648  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  1345  00264A  EC6D  F012         	call	_Wait_ms	;wreg free
  1346                           	line	97
  1347                           ;LockAnsSound.C: 97: return(X);
  1348  00264E  0101               	movlb	1	; () banked
  1349  002650  0101               	movlb	1	; () banked
  1350  002652  510D               	movf	((ReadKey@X))&0ffh,w
  1351  002654  D000               	goto	l200
  1352                           	line	98
  1353                           ;LockAnsSound.C: 98: }
  1354  002656                     l200:
  1355                           			; BSR set to: ?
  1356                           
  1357  002656  0012               	return
  1358                           	opt stack 0
  1359                           GLOBAL __end_of_ReadKey
  1360  002658                     	__end_of_ReadKey:
  1361                           	FNSIZE	_ReadKey,2,0
  1362                           ; =============== function _ReadKey ends =======
                                 =====
  1363                           
  1364                           	signat	_ReadKey,89
  1365                           	global	_LCD_Init
  1366                           	global	??_LCD_Init
  1367                           	global	?_LCD_Init
  1368                                   psect   text4,class=CODE,space=0,reloc=2
  1369                           
  1370                           	opt lm
  1371                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\lcd_portd.c"
  1372                           	line	73
  1373  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
  1374                           ;lcd_portd.c: 72: void LCD_Init(void)
  1375                           ;lcd_portd.c: 73: {
  1376                           	
  1377  0023C4                     _LCD_Init:		; BSR set to: ?
  1378                           
  1379                           	opt stack 29
  1380                           	line	74
  1381  0023C4  0E00               	movlw	low(0)
  1382  0023C6  6E95               	movwf	((c:3989)),c	;volatile
  1383                           	line	75
  1384                           ;lcd_portd.c: 75: RD1 = 0;
  1385  0023C8  9283               	bcf	c:(31769/8),(31769)&7	;volatile
  1386                           	line	76
  1387                           ;lcd_portd.c: 76: LCD_Inst(0x33);
  1388  0023CA  0101               	movlb	1	; () banked
  1389  0023CC  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1390  0023CE  0E33               	movlw	low(033h)
  1391  0023D0  0101               	movlb	1	; () banked
  1392  0023D2  0101               	movlb	1	; () banked
  1393  0023D4  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1394  0023D6  0101               	movlb	1	; () banked
  1395  0023D8  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1396  0023DA  ECDF  F012         	call	_LCD_Inst	;wreg free
  1397                           	line	77
  1398                           ;lcd_portd.c: 77: LCD_Inst(0x32);
  1399  0023DE  0101               	movlb	1	; () banked
  1400  0023E0  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1401  0023E2  0E32               	movlw	low(032h)
  1402  0023E4  0101               	movlb	1	; () banked
  1403  0023E6  0101               	movlb	1	; () banked
  1404  0023E8  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1405  0023EA  0101               	movlb	1	; () banked
  1406  0023EC  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1407  0023EE  ECDF  F012         	call	_LCD_Inst	;wreg free
  1408                           	line	78
  1409                           ;lcd_portd.c: 78: LCD_Inst(0x28);
  1410  0023F2  0101               	movlb	1	; () banked
  1411  0023F4  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1412  0023F6  0E28               	movlw	low(028h)
  1413  0023F8  0101               	movlb	1	; () banked
  1414  0023FA  0101               	movlb	1	; () banked
  1415  0023FC  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1416  0023FE  0101               	movlb	1	; () banked
  1417  002400  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1418  002402  ECDF  F012         	call	_LCD_Inst	;wreg free
  1419                           	line	79
  1420                           ;lcd_portd.c: 79: LCD_Inst(0x0E);
  1421  002406  0101               	movlb	1	; () banked
  1422  002408  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1423  00240A  0E0E               	movlw	low(0Eh)
  1424  00240C  0101               	movlb	1	; () banked
  1425  00240E  0101               	movlb	1	; () banked
  1426  002410  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1427  002412  0101               	movlb	1	; () banked
  1428  002414  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1429  002416  ECDF  F012         	call	_LCD_Inst	;wreg free
  1430                           	line	80
  1431                           ;lcd_portd.c: 80: LCD_Inst(0x01);
  1432  00241A  0101               	movlb	1	; () banked
  1433  00241C  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1434  00241E  0E01               	movlw	low(01h)
  1435  002420  0101               	movlb	1	; () banked
  1436  002422  0101               	movlb	1	; () banked
  1437  002424  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1438  002426  0101               	movlb	1	; () banked
  1439  002428  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1440  00242A  ECDF  F012         	call	_LCD_Inst	;wreg free
  1441                           	line	81
  1442                           ;lcd_portd.c: 81: LCD_Inst(0x06);
  1443  00242E  0101               	movlb	1	; () banked
  1444  002430  6F0C               	movwf	(??_LCD_Init+0+0)&0ffh
  1445  002432  0E06               	movlw	low(06h)
  1446  002434  0101               	movlb	1	; () banked
  1447  002436  0101               	movlb	1	; () banked
  1448  002438  6F1A               	movwf	((?_LCD_Inst))&0ffh
  1449  00243A  0101               	movlb	1	; () banked
  1450  00243C  510C               	movf	(??_LCD_Init+0+0)&0ffh,w
  1451  00243E  ECDF  F012         	call	_LCD_Inst	;wreg free
  1452                           	line	82
  1453                           ;lcd_portd.c: 82: Wait_ms(100);
  1454  002442  0E64               	movlw	low(064h)
  1455  002444  0101               	movlb	1	; () banked
  1456  002446  0101               	movlb	1	; () banked
  1457  002448  6F1C               	movwf	((?_Wait_ms))&0ffh
  1458  00244A  0E00               	movlw	high(064h)
  1459  00244C  0101               	movlb	1	; () banked
  1460  00244E  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  1461  002450  EC6D  F012         	call	_Wait_ms	;wreg free
  1462                           	line	83
  1463                           ;lcd_portd.c: 83: }
  1464  002454                     l129:
  1465                           			; BSR set to: ?
  1466                           
  1467  002454  0012               	return
  1468                           	opt stack 0
  1469                           GLOBAL __end_of_LCD_Init
  1470  002456                     	__end_of_LCD_Init:
  1471                           	FNSIZE	_LCD_Init,1,0
  1472                           ; =============== function _LCD_Init ends ======
                                 ======
  1473                           
  1474                           	signat	_LCD_Init,88
  1475                           	global	___awdiv
  1476                           	global	??___awdiv
  1477                           	global	?___awdiv
  1478                                   psect   text5,class=CODE,space=0,reloc=2
  1479                           
  1480                           	opt lm
  1481                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\awdiv.c"
  1482                           	line	5
  1483  000000                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1484                           	
  1485  0020A8                     ___awdiv:		; BSR set to: ?
  1486                           
  1487                           	opt stack 29
  1488                           	line	9
  1489  0020A8  0101               	movlb	1	; () banked
  1490  0020AA  6F14               	movwf	(??___awdiv+4+0)&0ffh
  1491  0020AC  0E00               	movlw	low(0)
  1492  0020AE  0101               	movlb	1	; () banked
  1493  0020B0  0101               	movlb	1	; () banked
  1494  0020B2  6F11               	movwf	((___awdiv@sign))&0ffh
  1495  0020B4  0101               	movlb	1	; () banked
  1496  0020B6  5114               	movf	(??___awdiv+4+0)&0ffh,w
  1497                           	line	10
  1498  0020B8  0101               	movlb	1	; () banked
  1499  0020BA  0101               	movlb	1	; () banked
  1500  0020BC  AF0F               	btfss	((___awdiv@divisor+1))&0ffh,7
  1501  0020BE  D001               	goto	u1691
  1502  0020C0  D001               	goto	u1690
  1503  0020C2                     u1691:
  1504  0020C2  D00F               	goto	l307
  1505  0020C4                     u1690:
  1506                           	line	11
  1507  0020C4  0101               	movlb	1	; () banked
  1508  0020C6  0101               	movlb	1	; () banked
  1509  0020C8  6D0E               	negf	((___awdiv@divisor))&0ffh
  1510  0020CA  0101               	movlb	1	; () banked
  1511  0020CC  1F0F               	comf	((___awdiv@divisor+1))&0ffh
  1512  0020CE  B0D8               	btfsc	status,0
  1513  0020D0  2B0F               	incf	((___awdiv@divisor+1))&0ffh
  1514                           	line	12
  1515  0020D2  0101               	movlb	1	; () banked
  1516  0020D4  6F14               	movwf	(??___awdiv+4+0)&0ffh
  1517  0020D6  0E01               	movlw	low(01h)
  1518  0020D8  0101               	movlb	1	; () banked
  1519  0020DA  0101               	movlb	1	; () banked
  1520  0020DC  6F11               	movwf	((___awdiv@sign))&0ffh
  1521  0020DE  0101               	movlb	1	; () banked
  1522  0020E0  5114               	movf	(??___awdiv+4+0)&0ffh,w
  1523                           	line	13
  1524                           	
  1525  0020E2                     l307:		; BSR set to: ?
  1526                           
  1527                           	line	14
  1528  0020E2  0101               	movlb	1	; () banked
  1529  0020E4  0101               	movlb	1	; () banked
  1530  0020E6  AF0D               	btfss	((___awdiv@dividend+1))&0ffh,7
  1531  0020E8  D001               	goto	u1701
  1532  0020EA  D001               	goto	u1700
  1533  0020EC                     u1701:
  1534  0020EC  D00B               	goto	l308
  1535  0020EE                     u1700:
  1536                           	line	15
  1537  0020EE  0101               	movlb	1	; () banked
  1538  0020F0  0101               	movlb	1	; () banked
  1539  0020F2  6D0C               	negf	((___awdiv@dividend))&0ffh
  1540  0020F4  0101               	movlb	1	; () banked
  1541  0020F6  1F0D               	comf	((___awdiv@dividend+1))&0ffh
  1542  0020F8  B0D8               	btfsc	status,0
  1543  0020FA  2B0D               	incf	((___awdiv@dividend+1))&0ffh
  1544                           	line	16
  1545  0020FC  0E01               	movlw	(01h)&0ffh
  1546  0020FE  0101               	movlb	1	; () banked
  1547  002100  0101               	movlb	1	; () banked
  1548  002102  1B11               	xorwf	((___awdiv@sign))&0ffh
  1549                           	line	17
  1550                           	
  1551  002104                     l308:		; BSR set to: ?
  1552                           
  1553                           	line	18
  1554  002104  0E00               	movlw	low(0)
  1555  002106  0101               	movlb	1	; () banked
  1556  002108  0101               	movlb	1	; () banked
  1557  00210A  6F12               	movwf	((___awdiv@quotient))&0ffh
  1558  00210C  0E00               	movlw	high(0)
  1559  00210E  0101               	movlb	1	; () banked
  1560  002110  6F13               	movwf	((___awdiv@quotient+1))&0ffh
  1561                           	line	19
  1562  002112  0101               	movlb	1	; () banked
  1563  002114  0101               	movlb	1	; () banked
  1564  002116  510F               	movf	((___awdiv@divisor+1))&0ffh,w
  1565  002118  110E               	iorwf ((___awdiv@divisor))&0ffh,w
  1566                           
  1567  00211A  B4D8               	btfsc	status,2
  1568  00211C  D001               	goto	u1711
  1569  00211E  D001               	goto	u1710
  1570  002120                     u1711:
  1571  002120  D047               	goto	l309
  1572  002122                     u1710:
  1573                           	line	20
  1574  002122  0101               	movlb	1	; () banked
  1575  002124  6F14               	movwf	(??___awdiv+4+0)&0ffh
  1576  002126  0E01               	movlw	low(01h)
  1577  002128  0101               	movlb	1	; () banked
  1578  00212A  0101               	movlb	1	; () banked
  1579  00212C  6F10               	movwf	((___awdiv@counter))&0ffh
  1580  00212E  0101               	movlb	1	; () banked
  1581  002130  5114               	movf	(??___awdiv+4+0)&0ffh,w
  1582                           	line	21
  1583  002132  D009               	goto	l310
  1584                           	
  1585  002134                     l311:		; BSR set to: ?
  1586                           
  1587                           	line	22
  1588  002134  0101               	movlb	1	; () banked
  1589  002136  90D8               	bcf	status,0
  1590  002138  0101               	movlb	1	; () banked
  1591  00213A  370E               	rlcf	((___awdiv@divisor))&0ffh
  1592  00213C  0101               	movlb	1	; () banked
  1593  00213E  370F               	rlcf	((___awdiv@divisor+1))&0ffh
  1594                           	line	23
  1595  002140  0101               	movlb	1	; () banked
  1596  002142  0101               	movlb	1	; () banked
  1597  002144  2B10               	incf	((___awdiv@counter))&0ffh
  1598                           	line	24
  1599                           	
  1600  002146                     l310:		; BSR set to: ?
  1601                           
  1602                           	line	21
  1603  002146  0101               	movlb	1	; () banked
  1604                           	
  1605  002148  0101               	movlb	1	; () banked
  1606  00214A  AF0F               	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
  1607  00214C  D001               	goto	u1721
  1608  00214E  D001               	goto	u1720
  1609  002150                     u1721:
  1610  002150  D7F1               	goto	l311
  1611  002152                     u1720:
  1612                           	
  1613  002152                     l312:		; BSR set to: ?
  1614                           
  1615                           	line	25
  1616                           	
  1617  002152                     l315:		; BSR set to: ?
  1618                           
  1619                           	line	26
  1620  002152  0101               	movlb	1	; () banked
  1621  002154  90D8               	bcf	status,0
  1622  002156  0101               	movlb	1	; () banked
  1623  002158  3712               	rlcf	((___awdiv@quotient))&0ffh
  1624  00215A  0101               	movlb	1	; () banked
  1625  00215C  3713               	rlcf	((___awdiv@quotient+1))&0ffh
  1626                           	line	27
  1627  00215E  0101               	movlb	1	; () banked
  1628  002160  0101               	movlb	1	; () banked
  1629  002162  510E               	movf	((___awdiv@divisor))&0ffh,w
  1630  002164  0101               	movlb	1	; () banked
  1631  002166  0101               	movlb	1	; () banked
  1632  002168  5D0C               	subwf	((___awdiv@dividend))&0ffh,w
  1633  00216A  0101               	movlb	1	; () banked
  1634  00216C  0101               	movlb	1	; () banked
  1635  00216E  510F               	movf	((___awdiv@divisor+1))&0ffh,w
  1636  002170  0101               	movlb	1	; () banked
  1637  002172  0101               	movlb	1	; () banked
  1638  002174  590D               	subwfb	((___awdiv@dividend+1))&0ffh,w
  1639  002176  A0D8               	btfss	status,0
  1640  002178  D001               	goto	u1731
  1641  00217A  D001               	goto	u1730
  1642  00217C                     u1731:
  1643  00217C  D00F               	goto	l316
  1644  00217E                     u1730:
  1645                           	line	28
  1646  00217E  0101               	movlb	1	; () banked
  1647  002180  0101               	movlb	1	; () banked
  1648  002182  510E               	movf	((___awdiv@divisor))&0ffh,w
  1649  002184  0101               	movlb	1	; () banked
  1650  002186  0101               	movlb	1	; () banked
  1651  002188  5F0C               	subwf	((___awdiv@dividend))&0ffh
  1652  00218A  0101               	movlb	1	; () banked
  1653  00218C  0101               	movlb	1	; () banked
  1654  00218E  510F               	movf	((___awdiv@divisor+1))&0ffh,w
  1655  002190  0101               	movlb	1	; () banked
  1656  002192  0101               	movlb	1	; () banked
  1657  002194  5B0D               	subwfb	((___awdiv@dividend+1))&0ffh
  1658                           
  1659                           	line	29
  1660  002196  0101               	movlb	1	; () banked
  1661  002198  0101               	movlb	1	; () banked
  1662  00219A  8112               	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
  1663                           	line	30
  1664                           	
  1665  00219C                     l316:		; BSR set to: ?
  1666                           
  1667                           	line	31
  1668  00219C  0101               	movlb	1	; () banked
  1669  00219E  90D8               	bcf	status,0
  1670  0021A0  0101               	movlb	1	; () banked
  1671  0021A2  330F               	rrcf	((___awdiv@divisor+1))&0ffh
  1672  0021A4  0101               	movlb	1	; () banked
  1673  0021A6  330E               	rrcf	((___awdiv@divisor))&0ffh
  1674                           	line	32
  1675  0021A8  0101               	movlb	1	; () banked
  1676  0021AA  0101               	movlb	1	; () banked
  1677  0021AC  2F10               	decfsz	((___awdiv@counter))&0ffh
  1678                           	
  1679  0021AE  D7D1               	goto	l315
  1680                           	
  1681  0021B0                     l314:		; BSR set to: ?
  1682                           
  1683                           	line	33
  1684                           	
  1685  0021B0                     l309:		; BSR set to: ?
  1686                           
  1687                           	line	34
  1688  0021B0  0101               	movlb	1	; () banked
  1689  0021B2  0101               	movlb	1	; () banked
  1690  0021B4  5111               	movf	((___awdiv@sign))&0ffh,w
  1691  0021B6  B4D8               	btfsc	status,2
  1692  0021B8  D001               	goto	u1741
  1693  0021BA  D001               	goto	u1740
  1694  0021BC                     u1741:
  1695  0021BC  D007               	goto	l317
  1696  0021BE                     u1740:
  1697                           	line	35
  1698  0021BE  0101               	movlb	1	; () banked
  1699  0021C0  0101               	movlb	1	; () banked
  1700  0021C2  6D12               	negf	((___awdiv@quotient))&0ffh
  1701  0021C4  0101               	movlb	1	; () banked
  1702  0021C6  1F13               	comf	((___awdiv@quotient+1))&0ffh
  1703  0021C8  B0D8               	btfsc	status,0
  1704  0021CA  2B13               	incf	((___awdiv@quotient+1))&0ffh
  1705                           	
  1706  0021CC                     l317:		; BSR set to: ?
  1707                           
  1708                           	line	36
  1709  0021CC  C112  F10C         	movff	(___awdiv@quotient),(?___awdiv)
  1710  0021D0  C113  F10D         	movff	(___awdiv@quotient+1),(?___awdiv+1)
  1711  0021D4  D000               	goto	l306
  1712                           	line	37
  1713  0021D6                     l306:
  1714                           			; BSR set to: ?
  1715                           
  1716  0021D6  0012               	return
  1717                           	opt stack 0
  1718                           GLOBAL __end_of___awdiv
  1719  0021D8                     	__end_of___awdiv:
  1720                           	FNSIZE	___awdiv,5,4
  1721                           ; =============== function ___awdiv ends =======
                                 =====
  1722                           
  1723                           	signat	___awdiv,8314
  1724                           	global	_move
  1725                           	global	??_move
  1726                           	global	?_move
  1727                                   psect   text6,class=CODE,space=0,reloc=2
  1728                           
  1729                           	opt lm
  1730                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
  1731                           	line	152
  1732  000000                     	__size_of_move	equ	__end_of_move-_move
  1733                           ;LockAnsSound.C: 151: void move(int REF)
  1734                           ;LockAnsSound.C: 152: {
  1735                           	
  1736  001F48                     _move:		; BSR set to: ?
  1737                           
  1738                           	opt stack 28
  1739                           	line	154
  1740                           ;LockAnsSound.C: 153: unsigned int i;
  1741                           ;LockAnsSound.C: 154: while(1) {
  1742                           	
  1743  001F48                     l219:		; BSR set to: ?
  1744                           
  1745                           	line	155
  1746                           ;LockAnsSound.C: 155: if (STEP < REF) STEP = STE
                                 P + 1;
  1747  001F48  0101               	movlb	1	; () banked
  1748  001F4A  0101               	movlb	1	; () banked
  1749  001F4C  5114               	movf	((move@REF))&0ffh,w
  1750  001F4E  5C04               	subwf	((c:4)),c,w
  1751  001F50  0101               	movlb	1	; () banked
  1752  001F52  0101               	movlb	1	; () banked
  1753  001F54  5115               	movf	((move@REF+1))&0ffh,w
  1754  001F56  5805               	subwfb	((c:4+1)),c,w
  1755  001F58  B0D8               	btfsc	status,0
  1756  001F5A  D001               	goto	u3051
  1757  001F5C  D001               	goto	u3050
  1758  001F5E                     u3051:
  1759  001F5E  D006               	goto	l221
  1760  001F60                     u3050:
  1761  001F60  0E01               	movlw	low(01h)
  1762  001F62  2404               	addwf	((c:4)),c,w
  1763                           	
  1764  001F64  6E04               	movwf	((c:4)),c
  1765  001F66  0E00               	movlw	high(01h)
  1766  001F68  2005               	addwfc	((c:4+1)),c,w
  1767  001F6A  6E05               	movwf	1+((c:4)),c
  1768                           	
  1769  001F6C                     l221:		; BSR set to: ?
  1770                           
  1771                           	line	156
  1772                           ;LockAnsSound.C: 156: if (STEP > REF) STEP = STE
                                 P - 1;
  1773  001F6C  5004               	movf	((c:4)),c,w
  1774  001F6E  0101               	movlb	1	; () banked
  1775  001F70  0101               	movlb	1	; () banked
  1776  001F72  5D14               	subwf	((move@REF))&0ffh,w
  1777  001F74  5005               	movf	((c:4+1)),c,w
  1778  001F76  0101               	movlb	1	; () banked
  1779  001F78  0101               	movlb	1	; () banked
  1780  001F7A  5915               	subwfb	((move@REF+1))&0ffh,w
  1781  001F7C  B0D8               	btfsc	status,0
  1782  001F7E  D001               	goto	u3061
  1783  001F80  D001               	goto	u3060
  1784  001F82                     u3061:
  1785  001F82  D006               	goto	l222
  1786  001F84                     u3060:
  1787  001F84  0EFF               	movlw	low(0FFFFh)
  1788  001F86  2404               	addwf	((c:4)),c,w
  1789                           	
  1790  001F88  6E04               	movwf	((c:4)),c
  1791  001F8A  0EFF               	movlw	high(0FFFFh)
  1792  001F8C  2005               	addwfc	((c:4+1)),c,w
  1793  001F8E  6E05               	movwf	1+((c:4)),c
  1794                           	
  1795  001F90                     l222:		; BSR set to: ?
  1796                           
  1797                           	line	157
  1798                           ;LockAnsSound.C: 157: if (STEP == REF) break;
  1799  001F90  0101               	movlb	1	; () banked
  1800  001F92  0101               	movlb	1	; () banked
  1801  001F94  5115               	movf	((move@REF+1))&0ffh,w
  1802  001F96  1805               	xorwf	((c:4+1)),c,w
  1803  001F98  E104               	bnz	u3075
  1804  001F9A  0101               	movlb	1	; () banked
  1805  001F9C  0101               	movlb	1	; () banked
  1806  001F9E  5114               	movf	((move@REF))&0ffh,w
  1807  001FA0  1804               	xorwf	((c:4)),c,w
  1808  001FA2                     u3075:
  1809                           
  1810  001FA2  A4D8               	btfss	status,2
  1811  001FA4  D001               	goto	u3071
  1812  001FA6  D001               	goto	u3070
  1813  001FA8                     u3071:
  1814  001FA8  D001               	goto	l223
  1815  001FAA                     u3070:
  1816  001FAA  D07C               	goto	l220
  1817                           	
  1818  001FAC                     l223:		; BSR set to: ?
  1819                           
  1820                           	line	159
  1821                           ;LockAnsSound.C: 159: PORTA = TABLE[STEP % 4];
  1822  001FAC  C004 F116          	movff	(c:4),??_move+0+0
  1823  001FB0  0E03               	movlw	03h
  1824  001FB2  0101               	movlb	1	; () banked
  1825  001FB4  1716               	andwf	(??_move+0+0)&0ffh
  1826  001FB6  0E0E               	movlw	low((c:14))
  1827  001FB8  0101               	movlb	1	; () banked
  1828  001FBA  2516               	addwf	(??_move+0+0)&0ffh,w
  1829  001FBC  6EE9               	movwf	c:fsr0l
  1830  001FBE  6AEA               	clrf	1+c:fsr0l
  1831  001FC0  0E00               	movlw	high((c:14))
  1832  001FC2  22EA               	addwfc	1+c:fsr0l
  1833  001FC4  50EF               	movf	indf0,w
  1834  001FC6  6E80               	movwf	((c:3968)),c	;volatile
  1835                           	line	160
  1836                           ;LockAnsSound.C: 160: LCD_Move(0,8); LCD_Out(REF
                                 , 5, 0);
  1837  001FC8  0101               	movlb	1	; () banked
  1838  001FCA  6F16               	movwf	(??_move+0+0)&0ffh
  1839  001FCC  0E08               	movlw	low(08h)
  1840  001FCE  0101               	movlb	1	; () banked
  1841  001FD0  0101               	movlb	1	; () banked
  1842  001FD2  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1843  001FD4  0101               	movlb	1	; () banked
  1844  001FD6  5116               	movf	(??_move+0+0)&0ffh,w
  1845  001FD8  0101               	movlb	1	; () banked
  1846  001FDA  6F17               	movwf	(??_move+1+0)&0ffh
  1847  001FDC  0E00               	movlw	low(0)
  1848  001FDE  0101               	movlb	1	; () banked
  1849  001FE0  0101               	movlb	1	; () banked
  1850  001FE2  6F18               	movwf	((?_LCD_Move))&0ffh
  1851  001FE4  0101               	movlb	1	; () banked
  1852  001FE6  5117               	movf	(??_move+1+0)&0ffh,w
  1853  001FE8  EC2B  F012         	call	_LCD_Move	;wreg free
  1854  001FEC  0101               	movlb	1	; () banked
  1855  001FEE  6F16               	movwf	(??_move+0+0)&0ffh
  1856  001FF0  0E00               	movlw	low(0)
  1857  001FF2  0101               	movlb	1	; () banked
  1858  001FF4  0101               	movlb	1	; () banked
  1859  001FF6  6F1D               	movwf	(0+(?_LCD_Out+05h))&0ffh
  1860  001FF8  0101               	movlb	1	; () banked
  1861  001FFA  5116               	movf	(??_move+0+0)&0ffh,w
  1862  001FFC  0101               	movlb	1	; () banked
  1863  001FFE  6F17               	movwf	(??_move+1+0)&0ffh
  1864  002000  0E05               	movlw	low(05h)
  1865  002002  0101               	movlb	1	; () banked
  1866  002004  0101               	movlb	1	; () banked
  1867  002006  6F1C               	movwf	(0+(?_LCD_Out+04h))&0ffh
  1868  002008  0101               	movlb	1	; () banked
  1869  00200A  5117               	movf	(??_move+1+0)&0ffh,w
  1870  00200C  0101               	movlb	1	; () banked
  1871  00200E  0101               	movlb	1	; () banked
  1872  002010  C114  F118         	movff	(move@REF),(?_LCD_Out)
  1873  002014  0101               	movlb	1	; () banked
  1874  002016  0101               	movlb	1	; () banked
  1875  002018  C115  F119         	movff	(move@REF+1),(?_LCD_Out+1)
  1876  00201C  0101               	movlb	1	; () banked
  1877  00201E  0E00               	movlw	0
  1878  002020  0101               	movlb	1	; () banked
  1879  002022  BF19               	btfsc	((?_LCD_Out+1))&0ffh,7
  1880  002024  0EFF               	movlw	-1
  1881  002026  0101               	movlb	1	; () banked
  1882  002028  6F1A               	movwf	((?_LCD_Out+2))&0ffh
  1883  00202A  0101               	movlb	1	; () banked
  1884  00202C  6F1B               	movwf	((?_LCD_Out+3))&0ffh
  1885  00202E  ECE0  F00E         	call	_LCD_Out	;wreg free
  1886                           	line	161
  1887                           ;LockAnsSound.C: 161: LCD_Move(1,8); LCD_Out(STE
                                 P, 5, 0);
  1888  002032  0101               	movlb	1	; () banked
  1889  002034  6F16               	movwf	(??_move+0+0)&0ffh
  1890  002036  0E08               	movlw	low(08h)
  1891  002038  0101               	movlb	1	; () banked
  1892  00203A  0101               	movlb	1	; () banked
  1893  00203C  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1894  00203E  0101               	movlb	1	; () banked
  1895  002040  5116               	movf	(??_move+0+0)&0ffh,w
  1896  002042  0101               	movlb	1	; () banked
  1897  002044  6F17               	movwf	(??_move+1+0)&0ffh
  1898  002046  0E01               	movlw	low(01h)
  1899  002048  0101               	movlb	1	; () banked
  1900  00204A  0101               	movlb	1	; () banked
  1901  00204C  6F18               	movwf	((?_LCD_Move))&0ffh
  1902  00204E  0101               	movlb	1	; () banked
  1903  002050  5117               	movf	(??_move+1+0)&0ffh,w
  1904  002052  EC2B  F012         	call	_LCD_Move	;wreg free
  1905  002056  0101               	movlb	1	; () banked
  1906  002058  6F16               	movwf	(??_move+0+0)&0ffh
  1907  00205A  0E00               	movlw	low(0)
  1908  00205C  0101               	movlb	1	; () banked
  1909  00205E  0101               	movlb	1	; () banked
  1910  002060  6F1D               	movwf	(0+(?_LCD_Out+05h))&0ffh
  1911  002062  0101               	movlb	1	; () banked
  1912  002064  5116               	movf	(??_move+0+0)&0ffh,w
  1913  002066  0101               	movlb	1	; () banked
  1914  002068  6F17               	movwf	(??_move+1+0)&0ffh
  1915  00206A  0E05               	movlw	low(05h)
  1916  00206C  0101               	movlb	1	; () banked
  1917  00206E  0101               	movlb	1	; () banked
  1918  002070  6F1C               	movwf	(0+(?_LCD_Out+04h))&0ffh
  1919  002072  0101               	movlb	1	; () banked
  1920  002074  5117               	movf	(??_move+1+0)&0ffh,w
  1921  002076  0101               	movlb	1	; () banked
  1922  002078  C004 F118          	movff	(c:4),(?_LCD_Out)
  1923  00207C  0101               	movlb	1	; () banked
  1924  00207E  C005 F119          	movff	(c:4+1),(?_LCD_Out+1)
  1925  002082  0101               	movlb	1	; () banked
  1926  002084  0101               	movlb	1	; () banked
  1927  002086  6B1A               	clrf	((?_LCD_Out+2))&0ffh
  1928  002088  0101               	movlb	1	; () banked
  1929  00208A  6B1B               	clrf	((?_LCD_Out+3))&0ffh
  1930                           
  1931  00208C  ECE0  F00E         	call	_LCD_Out	;wreg free
  1932                           	line	162
  1933                           ;LockAnsSound.C: 162: Wait_ms(30);
  1934  002090  0E1E               	movlw	low(01Eh)
  1935  002092  0101               	movlb	1	; () banked
  1936  002094  0101               	movlb	1	; () banked
  1937  002096  6F1C               	movwf	((?_Wait_ms))&0ffh
  1938  002098  0E00               	movlw	high(01Eh)
  1939  00209A  0101               	movlb	1	; () banked
  1940  00209C  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  1941  00209E  EC6D  F012         	call	_Wait_ms	;wreg free
  1942                           	line	163
  1943                           	
  1944  0020A2                     l218:		; BSR set to: ?
  1945                           
  1946                           	line	154
  1947  0020A2  D752               	goto	l219
  1948                           	
  1949  0020A4                     l220:		; BSR set to: ?
  1950                           
  1951                           	line	165
  1952                           ;LockAnsSound.C: 163: }
  1953                           ;LockAnsSound.C: 165: return;
  1954  0020A4  D000               	goto	l217
  1955                           	line	166
  1956                           ;LockAnsSound.C: 166: }
  1957  0020A6                     l217:
  1958                           			; BSR set to: ?
  1959                           
  1960  0020A6  0012               	return
  1961                           	opt stack 0
  1962                           GLOBAL __end_of_move
  1963  0020A8                     	__end_of_move:
  1964                           	FNSIZE	_move,2,2
  1965                           ; =============== function _move ends ==========
                                 ==
  1966                           
  1967                           	signat	_move,4216
  1968                           	global	_screenClear
  1969                           	global	??_screenClear
  1970                           	global	?_screenClear
  1971                                   psect   text7,class=CODE,space=0,reloc=2
  1972                           
  1973                           	opt lm
  1974                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
  1975                           	line	102
  1976  000000                     	__size_of_screenClear	equ	__end_of_screenClear-
                                 _screenClear
  1977                           ;LockAnsSound.C: 101: void screenClear()
  1978                           ;LockAnsSound.C: 102: {
  1979                           	
  1980  001C38                     _screenClear:		; BSR set to: ?
  1981                           
  1982                           	opt stack 28
  1983                           	line	105
  1984                           ;LockAnsSound.C: 103: unsigned int i;
  1985                           ;LockAnsSound.C: 105: LCD_Move(0,0); for (i=0; i
                                 <20; i++) LCD_Write(MSGclear[i]);
  1986  001C38  0101               	movlb	1	; () banked
  1987  001C3A  6F16               	movwf	(??_screenClear+2+0)&0ffh
  1988  001C3C  0E00               	movlw	low(0)
  1989  001C3E  0101               	movlb	1	; () banked
  1990  001C40  0101               	movlb	1	; () banked
  1991  001C42  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1992  001C44  0101               	movlb	1	; () banked
  1993  001C46  5116               	movf	(??_screenClear+2+0)&0ffh,w
  1994  001C48  0101               	movlb	1	; () banked
  1995  001C4A  6F17               	movwf	(??_screenClear+3+0)&0ffh
  1996  001C4C  0E00               	movlw	low(0)
  1997  001C4E  0101               	movlb	1	; () banked
  1998  001C50  0101               	movlb	1	; () banked
  1999  001C52  6F18               	movwf	((?_LCD_Move))&0ffh
  2000  001C54  0101               	movlb	1	; () banked
  2001  001C56  5117               	movf	(??_screenClear+3+0)&0ffh,w
  2002  001C58  EC2B  F012         	call	_LCD_Move	;wreg free
  2003  001C5C  0E00               	movlw	low(0)
  2004  001C5E  0101               	movlb	1	; () banked
  2005  001C60  0101               	movlb	1	; () banked
  2006  001C62  6F14               	movwf	((screenClear@i))&0ffh
  2007  001C64  0E00               	movlw	high(0)
  2008  001C66  0101               	movlb	1	; () banked
  2009  001C68  6F15               	movwf	((screenClear@i+1))&0ffh
  2010  001C6A  0E14               	movlw	014h
  2011  001C6C  0101               	movlb	1	; () banked
  2012  001C6E  0101               	movlb	1	; () banked
  2013  001C70  5D14               	subwf	((screenClear@i))&0ffh,w
  2014  001C72  0E00               	movlw	0
  2015  001C74  0101               	movlb	1	; () banked
  2016  001C76  5915               	subwfb	((screenClear@i+1))&0ffh,w
  2017  001C78  A0D8               	btfss	status,0
  2018  001C7A  D001               	goto	u3311
  2019  001C7C  D001               	goto	u3310
  2020  001C7E                     u3311:
  2021  001C7E  D001               	goto	l208
  2022  001C80                     u3310:
  2023  001C80  D020               	goto	l209
  2024                           	
  2025  001C82                     l208:		; BSR set to: ?
  2026                           
  2027  001C82  0E55               	movlw	low((_MSGclear))
  2028  001C84  0101               	movlb	1	; () banked
  2029  001C86  0101               	movlb	1	; () banked
  2030  001C88  2514               	addwf	((screenClear@i))&0ffh,w
  2031  001C8A  6EF6               	movwf	tblptrl
  2032  001C8C  6AF7               	clrf	tblptrh
  2033  001C8E  0E10               	movlw	high((_MSGclear))
  2034  001C90  22F7               	addwfc	tblptrh
  2035  001C92  6AF8               	clrf	tblptru
  2036  001C94  0E00               	movlw	low highword(__mediumconst)
  2037  001C96  22F8               	addwfc	tblptru
  2038  001C98  0008               	tblrd	*
  2039                           	
  2040  001C9A  0101               	movlb	1	; () banked
  2041  001C9C  CFF5 F12A          	movff	tablat,(?_LCD_Write)
  2042  001CA0  EC2C  F013         	call	_LCD_Write	;wreg free
  2043  001CA4  0101               	movlb	1	; () banked
  2044  001CA6  0101               	movlb	1	; () banked
  2045  001CA8  4B14               	infsnz	((screenClear@i))&0ffh
  2046  001CAA  2B15               	incf	((screenClear@i+1))&0ffh
  2047  001CAC  0E14               	movlw	014h
  2048  001CAE  0101               	movlb	1	; () banked
  2049  001CB0  0101               	movlb	1	; () banked
  2050  001CB2  5D14               	subwf	((screenClear@i))&0ffh,w
  2051  001CB4  0E00               	movlw	0
  2052  001CB6  0101               	movlb	1	; () banked
  2053  001CB8  5915               	subwfb	((screenClear@i+1))&0ffh,w
  2054  001CBA  A0D8               	btfss	status,0
  2055  001CBC  D001               	goto	u3321
  2056  001CBE  D001               	goto	u3320
  2057  001CC0                     u3321:
  2058  001CC0  D7E0               	goto	l208
  2059  001CC2                     u3320:
  2060                           	
  2061  001CC2                     l209:		; BSR set to: ?
  2062                           
  2063                           	line	106
  2064                           ;LockAnsSound.C: 106: LCD_Move(1,0); for (i=0; i
                                 <20; i++) LCD_Write(MSGclear[i]);
  2065  001CC2  0101               	movlb	1	; () banked
  2066  001CC4  6F16               	movwf	(??_screenClear+2+0)&0ffh
  2067  001CC6  0E00               	movlw	low(0)
  2068  001CC8  0101               	movlb	1	; () banked
  2069  001CCA  0101               	movlb	1	; () banked
  2070  001CCC  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2071  001CCE  0101               	movlb	1	; () banked
  2072  001CD0  5116               	movf	(??_screenClear+2+0)&0ffh,w
  2073  001CD2  0101               	movlb	1	; () banked
  2074  001CD4  6F17               	movwf	(??_screenClear+3+0)&0ffh
  2075  001CD6  0E01               	movlw	low(01h)
  2076  001CD8  0101               	movlb	1	; () banked
  2077  001CDA  0101               	movlb	1	; () banked
  2078  001CDC  6F18               	movwf	((?_LCD_Move))&0ffh
  2079  001CDE  0101               	movlb	1	; () banked
  2080  001CE0  5117               	movf	(??_screenClear+3+0)&0ffh,w
  2081  001CE2  EC2B  F012         	call	_LCD_Move	;wreg free
  2082  001CE6  0E00               	movlw	low(0)
  2083  001CE8  0101               	movlb	1	; () banked
  2084  001CEA  0101               	movlb	1	; () banked
  2085  001CEC  6F14               	movwf	((screenClear@i))&0ffh
  2086  001CEE  0E00               	movlw	high(0)
  2087  001CF0  0101               	movlb	1	; () banked
  2088  001CF2  6F15               	movwf	((screenClear@i+1))&0ffh
  2089  001CF4  0E14               	movlw	014h
  2090  001CF6  0101               	movlb	1	; () banked
  2091  001CF8  0101               	movlb	1	; () banked
  2092  001CFA  5D14               	subwf	((screenClear@i))&0ffh,w
  2093  001CFC  0E00               	movlw	0
  2094  001CFE  0101               	movlb	1	; () banked
  2095  001D00  5915               	subwfb	((screenClear@i+1))&0ffh,w
  2096  001D02  A0D8               	btfss	status,0
  2097  001D04  D001               	goto	u3331
  2098  001D06  D001               	goto	u3330
  2099  001D08                     u3331:
  2100  001D08  D001               	goto	l211
  2101  001D0A                     u3330:
  2102  001D0A  D020               	goto	l212
  2103                           	
  2104  001D0C                     l211:		; BSR set to: ?
  2105                           
  2106  001D0C  0E55               	movlw	low((_MSGclear))
  2107  001D0E  0101               	movlb	1	; () banked
  2108  001D10  0101               	movlb	1	; () banked
  2109  001D12  2514               	addwf	((screenClear@i))&0ffh,w
  2110  001D14  6EF6               	movwf	tblptrl
  2111  001D16  6AF7               	clrf	tblptrh
  2112  001D18  0E10               	movlw	high((_MSGclear))
  2113  001D1A  22F7               	addwfc	tblptrh
  2114  001D1C  6AF8               	clrf	tblptru
  2115  001D1E  0E00               	movlw	low highword(__mediumconst)
  2116  001D20  22F8               	addwfc	tblptru
  2117  001D22  0008               	tblrd	*
  2118                           	
  2119  001D24  0101               	movlb	1	; () banked
  2120  001D26  CFF5 F12A          	movff	tablat,(?_LCD_Write)
  2121  001D2A  EC2C  F013         	call	_LCD_Write	;wreg free
  2122  001D2E  0101               	movlb	1	; () banked
  2123  001D30  0101               	movlb	1	; () banked
  2124  001D32  4B14               	infsnz	((screenClear@i))&0ffh
  2125  001D34  2B15               	incf	((screenClear@i+1))&0ffh
  2126  001D36  0E14               	movlw	014h
  2127  001D38  0101               	movlb	1	; () banked
  2128  001D3A  0101               	movlb	1	; () banked
  2129  001D3C  5D14               	subwf	((screenClear@i))&0ffh,w
  2130  001D3E  0E00               	movlw	0
  2131  001D40  0101               	movlb	1	; () banked
  2132  001D42  5915               	subwfb	((screenClear@i+1))&0ffh,w
  2133  001D44  A0D8               	btfss	status,0
  2134  001D46  D001               	goto	u3341
  2135  001D48  D001               	goto	u3340
  2136  001D4A                     u3341:
  2137  001D4A  D7E0               	goto	l211
  2138  001D4C                     u3340:
  2139                           	
  2140  001D4C                     l212:		; BSR set to: ?
  2141                           
  2142                           	line	108
  2143                           ;LockAnsSound.C: 108: LCD_Move(0,0); LCD_Write('
                                 Y');
  2144  001D4C  0101               	movlb	1	; () banked
  2145  001D4E  6F16               	movwf	(??_screenClear+2+0)&0ffh
  2146  001D50  0E00               	movlw	low(0)
  2147  001D52  0101               	movlb	1	; () banked
  2148  001D54  0101               	movlb	1	; () banked
  2149  001D56  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2150  001D58  0101               	movlb	1	; () banked
  2151  001D5A  5116               	movf	(??_screenClear+2+0)&0ffh,w
  2152  001D5C  0101               	movlb	1	; () banked
  2153  001D5E  6F17               	movwf	(??_screenClear+3+0)&0ffh
  2154  001D60  0E00               	movlw	low(0)
  2155  001D62  0101               	movlb	1	; () banked
  2156  001D64  0101               	movlb	1	; () banked
  2157  001D66  6F18               	movwf	((?_LCD_Move))&0ffh
  2158  001D68  0101               	movlb	1	; () banked
  2159  001D6A  5117               	movf	(??_screenClear+3+0)&0ffh,w
  2160  001D6C  EC2B  F012         	call	_LCD_Move	;wreg free
  2161  001D70  0101               	movlb	1	; () banked
  2162  001D72  6F16               	movwf	(??_screenClear+2+0)&0ffh
  2163  001D74  0E59               	movlw	low(059h)
  2164  001D76  0101               	movlb	1	; () banked
  2165  001D78  0101               	movlb	1	; () banked
  2166  001D7A  6F2A               	movwf	((?_LCD_Write))&0ffh
  2167  001D7C  0101               	movlb	1	; () banked
  2168  001D7E  5116               	movf	(??_screenClear+2+0)&0ffh,w
  2169  001D80  EC2C  F013         	call	_LCD_Write	;wreg free
  2170                           	line	109
  2171                           ;LockAnsSound.C: 109: LCD_Move(1,0); LCD_Write('
                                 X');
  2172  001D84  0101               	movlb	1	; () banked
  2173  001D86  6F16               	movwf	(??_screenClear+2+0)&0ffh
  2174  001D88  0E00               	movlw	low(0)
  2175  001D8A  0101               	movlb	1	; () banked
  2176  001D8C  0101               	movlb	1	; () banked
  2177  001D8E  6F19               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2178  001D90  0101               	movlb	1	; () banked
  2179  001D92  5116               	movf	(??_screenClear+2+0)&0ffh,w
  2180  001D94  0101               	movlb	1	; () banked
  2181  001D96  6F17               	movwf	(??_screenClear+3+0)&0ffh
  2182  001D98  0E01               	movlw	low(01h)
  2183  001D9A  0101               	movlb	1	; () banked
  2184  001D9C  0101               	movlb	1	; () banked
  2185  001D9E  6F18               	movwf	((?_LCD_Move))&0ffh
  2186  001DA0  0101               	movlb	1	; () banked
  2187  001DA2  5117               	movf	(??_screenClear+3+0)&0ffh,w
  2188  001DA4  EC2B  F012         	call	_LCD_Move	;wreg free
  2189  001DA8  0101               	movlb	1	; () banked
  2190  001DAA  6F16               	movwf	(??_screenClear+2+0)&0ffh
  2191  001DAC  0E58               	movlw	low(058h)
  2192  001DAE  0101               	movlb	1	; () banked
  2193  001DB0  0101               	movlb	1	; () banked
  2194  001DB2  6F2A               	movwf	((?_LCD_Write))&0ffh
  2195  001DB4  0101               	movlb	1	; () banked
  2196  001DB6  5116               	movf	(??_screenClear+2+0)&0ffh,w
  2197  001DB8  EC2C  F013         	call	_LCD_Write	;wreg free
  2198                           	line	110
  2199                           ;LockAnsSound.C: 110: return;
  2200  001DBC  D000               	goto	l207
  2201                           	line	111
  2202                           ;LockAnsSound.C: 111: }
  2203  001DBE                     l207:
  2204                           			; BSR set to: ?
  2205                           
  2206  001DBE  0012               	return
  2207                           	opt stack 0
  2208                           GLOBAL __end_of_screenClear
  2209  001DC0                     	__end_of_screenClear:
  2210                           	FNSIZE	_screenClear,4,0
  2211                           ; =============== function _screenClear ends ===
                                 =========
  2212                           
  2213                           	signat	_screenClear,88
  2214                           	global	_playNote
  2215                           	global	??_playNote
  2216                           	global	?_playNote
  2217                                   psect   text8,class=CODE,space=0,reloc=2
  2218                           
  2219                           	opt lm
  2220                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
  2221                           	line	115
  2222  000000                     	__size_of_playNote	equ	__end_of_playNote-_playN
                                 ote
  2223                           ;LockAnsSound.C: 114: void playNote(int flag)
  2224                           ;LockAnsSound.C: 115: {
  2225                           	
  2226  0021D8                     _playNote:		; BSR set to: ?
  2227                           
  2228                           	opt stack 28
  2229                           	line	117
  2230  0021D8  0101               	movlb	1	; () banked
  2231  0021DA  0101               	movlb	1	; () banked
  2232  0021DC  0514               	decf	((playNote@flag))&0ffh,w
  2233  0021DE  1115               	iorwf ((playNote@flag+1))&0ffh,w
  2234                           
  2235  0021E0  A4D8               	btfss	status,2
  2236  0021E2  D001               	goto	u3521
  2237  0021E4  D001               	goto	u3520
  2238  0021E6                     u3521:
  2239  0021E6  D02A               	goto	l215
  2240  0021E8                     u3520:
  2241                           	line	118
  2242                           ;LockAnsSound.C: 118: N0 = 38222;
  2243  0021E8  0E4E               	movlw	low(0954Eh)
  2244  0021EA  6E08               	movwf	((c:8)),c
  2245  0021EC  0E95               	movlw	high(0954Eh)
  2246  0021EE  6E09               	movwf	((c:8+1)),c
  2247                           	line	119
  2248                           ;LockAnsSound.C: 119: N1 = 45454;
  2249  0021F0  0E8E               	movlw	low(0B18Eh)
  2250  0021F2  6E0A               	movwf	((c:10)),c
  2251  0021F4  0EB1               	movlw	high(0B18Eh)
  2252  0021F6  6E0B               	movwf	((c:10+1)),c
  2253                           	line	122
  2254                           ;LockAnsSound.C: 122: PLAY1 = 1;
  2255  0021F8  0E01               	movlw	low(01h)
  2256  0021FA  6E06               	movwf	((c:6)),c
  2257  0021FC  0E00               	movlw	high(01h)
  2258  0021FE  6E07               	movwf	((c:6+1)),c
  2259                           	line	123
  2260                           ;LockAnsSound.C: 123: Wait_ms(800);
  2261  002200  0E20               	movlw	low(0320h)
  2262  002202  0101               	movlb	1	; () banked
  2263  002204  0101               	movlb	1	; () banked
  2264  002206  6F1C               	movwf	((?_Wait_ms))&0ffh
  2265  002208  0E03               	movlw	high(0320h)
  2266  00220A  0101               	movlb	1	; () banked
  2267  00220C  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  2268  00220E  EC6D  F012         	call	_Wait_ms	;wreg free
  2269                           	line	124
  2270                           ;LockAnsSound.C: 124: PLAY1 =0;
  2271  002212  0E00               	movlw	low(0)
  2272  002214  6E06               	movwf	((c:6)),c
  2273  002216  0E00               	movlw	high(0)
  2274  002218  6E07               	movwf	((c:6+1)),c
  2275                           	line	125
  2276                           ;LockAnsSound.C: 125: PLAY2 = 1;
  2277  00221A  0E01               	movlw	low(01h)
  2278  00221C  6E00               	movwf	((c:0)),c
  2279  00221E  0E00               	movlw	high(01h)
  2280  002220  6E01               	movwf	((c:0+1)),c
  2281                           	line	126
  2282                           ;LockAnsSound.C: 126: Wait_ms(800);
  2283  002222  0E20               	movlw	low(0320h)
  2284  002224  0101               	movlb	1	; () banked
  2285  002226  0101               	movlb	1	; () banked
  2286  002228  6F1C               	movwf	((?_Wait_ms))&0ffh
  2287  00222A  0E03               	movlw	high(0320h)
  2288  00222C  0101               	movlb	1	; () banked
  2289  00222E  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  2290  002230  EC6D  F012         	call	_Wait_ms	;wreg free
  2291                           	line	127
  2292                           ;LockAnsSound.C: 127: PLAY2 =0;
  2293  002234  0E00               	movlw	low(0)
  2294  002236  6E00               	movwf	((c:0)),c
  2295  002238  0E00               	movlw	high(0)
  2296  00223A  6E01               	movwf	((c:0+1)),c
  2297                           	line	128
  2298                           	
  2299  00223C                     l215:		; BSR set to: ?
  2300                           
  2301                           	line	131
  2302                           ;LockAnsSound.C: 128: }
  2303                           ;LockAnsSound.C: 131: if(flag == 0){
  2304  00223C  0101               	movlb	1	; () banked
  2305  00223E  0101               	movlb	1	; () banked
  2306  002240  5115               	movf	((playNote@flag+1))&0ffh,w
  2307  002242  1114               	iorwf ((playNote@flag))&0ffh,w
  2308                           
  2309  002244  A4D8               	btfss	status,2
  2310  002246  D001               	goto	u3531
  2311  002248  D001               	goto	u3530
  2312  00224A                     u3531:
  2313  00224A  D03F               	goto	l216
  2314  00224C                     u3530:
  2315                           	line	132
  2316                           ;LockAnsSound.C: 132: N0 = 10726;
  2317  00224C  0EE6               	movlw	low(029E6h)
  2318  00224E  6E08               	movwf	((c:8)),c
  2319  002250  0E29               	movlw	high(029E6h)
  2320  002252  6E09               	movwf	((c:8+1)),c
  2321                           	line	133
  2322                           ;LockAnsSound.C: 133: N1 = 11363;
  2323  002254  0E63               	movlw	low(02C63h)
  2324  002256  6E0A               	movwf	((c:10)),c
  2325  002258  0E2C               	movlw	high(02C63h)
  2326  00225A  6E0B               	movwf	((c:10+1)),c
  2327                           	line	134
  2328                           ;LockAnsSound.C: 134: N2 = 6019;
  2329  00225C  0E83               	movlw	low(01783h)
  2330  00225E  6E0C               	movwf	((c:12)),c
  2331  002260  0E17               	movlw	high(01783h)
  2332  002262  6E0D               	movwf	((c:12+1)),c
  2333                           	line	137
  2334                           ;LockAnsSound.C: 137: PLAY1 = 1;
  2335  002264  0E01               	movlw	low(01h)
  2336  002266  6E06               	movwf	((c:6)),c
  2337  002268  0E00               	movlw	high(01h)
  2338  00226A  6E07               	movwf	((c:6+1)),c
  2339                           	line	138
  2340                           ;LockAnsSound.C: 138: Wait_ms(800);
  2341  00226C  0E20               	movlw	low(0320h)
  2342  00226E  0101               	movlb	1	; () banked
  2343  002270  0101               	movlb	1	; () banked
  2344  002272  6F1C               	movwf	((?_Wait_ms))&0ffh
  2345  002274  0E03               	movlw	high(0320h)
  2346  002276  0101               	movlb	1	; () banked
  2347  002278  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  2348  00227A  EC6D  F012         	call	_Wait_ms	;wreg free
  2349                           	line	139
  2350                           ;LockAnsSound.C: 139: PLAY1 = 0;
  2351  00227E  0E00               	movlw	low(0)
  2352  002280  6E06               	movwf	((c:6)),c
  2353  002282  0E00               	movlw	high(0)
  2354  002284  6E07               	movwf	((c:6+1)),c
  2355                           	line	140
  2356                           ;LockAnsSound.C: 140: PLAY2 = 1;
  2357  002286  0E01               	movlw	low(01h)
  2358  002288  6E00               	movwf	((c:0)),c
  2359  00228A  0E00               	movlw	high(01h)
  2360  00228C  6E01               	movwf	((c:0+1)),c
  2361                           	line	141
  2362                           ;LockAnsSound.C: 141: Wait_ms(800);
  2363  00228E  0E20               	movlw	low(0320h)
  2364  002290  0101               	movlb	1	; () banked
  2365  002292  0101               	movlb	1	; () banked
  2366  002294  6F1C               	movwf	((?_Wait_ms))&0ffh
  2367  002296  0E03               	movlw	high(0320h)
  2368  002298  0101               	movlb	1	; () banked
  2369  00229A  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  2370  00229C  EC6D  F012         	call	_Wait_ms	;wreg free
  2371                           	line	142
  2372                           ;LockAnsSound.C: 142: PLAY2 = 0;
  2373  0022A0  0E00               	movlw	low(0)
  2374  0022A2  6E00               	movwf	((c:0)),c
  2375  0022A4  0E00               	movlw	high(0)
  2376  0022A6  6E01               	movwf	((c:0+1)),c
  2377                           	line	143
  2378                           ;LockAnsSound.C: 143: PLAY3 = 1;
  2379  0022A8  0E01               	movlw	low(01h)
  2380  0022AA  6E02               	movwf	((c:2)),c
  2381  0022AC  0E00               	movlw	high(01h)
  2382  0022AE  6E03               	movwf	((c:2+1)),c
  2383                           	line	144
  2384                           ;LockAnsSound.C: 144: Wait_ms(1500);
  2385  0022B0  0EDC               	movlw	low(05DCh)
  2386  0022B2  0101               	movlb	1	; () banked
  2387  0022B4  0101               	movlb	1	; () banked
  2388  0022B6  6F1C               	movwf	((?_Wait_ms))&0ffh
  2389  0022B8  0E05               	movlw	high(05DCh)
  2390  0022BA  0101               	movlb	1	; () banked
  2391  0022BC  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  2392  0022BE  EC6D  F012         	call	_Wait_ms	;wreg free
  2393                           	line	145
  2394                           ;LockAnsSound.C: 145: PLAY3 = 0;
  2395  0022C2  0E00               	movlw	low(0)
  2396  0022C4  6E02               	movwf	((c:2)),c
  2397  0022C6  0E00               	movlw	high(0)
  2398  0022C8  6E03               	movwf	((c:2+1)),c
  2399                           	line	146
  2400                           	
  2401  0022CA                     l216:		; BSR set to: ?
  2402                           
  2403                           	line	147
  2404                           ;LockAnsSound.C: 146: }
  2405                           ;LockAnsSound.C: 147: return;
  2406  0022CA  D000               	goto	l214
  2407                           	line	148
  2408                           ;LockAnsSound.C: 148: }
  2409  0022CC                     l214:
  2410                           			; BSR set to: ?
  2411                           
  2412  0022CC  0012               	return
  2413                           	opt stack 0
  2414                           GLOBAL __end_of_playNote
  2415  0022CE                     	__end_of_playNote:
  2416                           	FNSIZE	_playNote,0,2
  2417                           ; =============== function _playNote ends ======
                                 ======
  2418                           
  2419                           	signat	_playNote,4216
  2420                           	global	_GetKey
  2421                           	global	??_GetKey
  2422                           	global	?_GetKey
  2423                                   psect   text9,class=CODE,space=0,reloc=2
  2424                           
  2425                           	opt lm
  2426                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\Term Project\LockAnsSound.C"
  2427                           	line	49
  2428  000000                     	__size_of_GetKey	equ	__end_of_GetKey-_GetKey
  2429                           ;LockAnsSound.C: 48: char GetKey(void)
  2430                           ;LockAnsSound.C: 49: {
  2431                           	
  2432  001658                     _GetKey:		; BSR set to: ?
  2433                           
  2434                           	opt stack 28
  2435                           	line	52
  2436                           ;LockAnsSound.C: 50: int i;
  2437                           ;LockAnsSound.C: 51: unsigned char RESULT;
  2438                           ;LockAnsSound.C: 52: TRISC = 0xF8;
  2439  001658  0EF8               	movlw	low(0F8h)
  2440  00165A  6E94               	movwf	((c:3988)),c	;volatile
  2441                           	line	53
  2442                           ;LockAnsSound.C: 53: RESULT = 0xFF;
  2443  00165C  0101               	movlb	1	; () banked
  2444  00165E  0101               	movlb	1	; () banked
  2445  001660  690E               	setf	((GetKey@RESULT))&0ffh
  2446                           	line	55
  2447                           ;LockAnsSound.C: 55: PORTC = 4;
  2448  001662  0E04               	movlw	low(04h)
  2449  001664  6E82               	movwf	((c:3970)),c	;volatile
  2450                           	line	56
  2451                           ;LockAnsSound.C: 56: for (i=0; i<100; i++);
  2452  001666  0E00               	movlw	low(0)
  2453  001668  0101               	movlb	1	; () banked
  2454  00166A  0101               	movlb	1	; () banked
  2455  00166C  6F0F               	movwf	((GetKey@i))&0ffh
  2456  00166E  0E00               	movlw	high(0)
  2457  001670  0101               	movlb	1	; () banked
  2458  001672  6F10               	movwf	((GetKey@i+1))&0ffh
  2459  001674  0101               	movlb	1	; () banked
  2460  001676  0101               	movlb	1	; () banked
  2461  001678  5110               	movf	((GetKey@i+1))&0ffh,w
  2462  00167A  0A80               	xorlw	80h
  2463  00167C  0F80               	addlw	-((0)^80h)
  2464  00167E  0E64               	movlw	064h
  2465  001680  B4D8               	btfsc	status,2
  2466  001682  5D0F               	subwf	((GetKey@i))&0ffh,w
  2467  001684  A0D8               	btfss	status,0
  2468  001686  D001               	goto	u1101
  2469  001688  D001               	goto	u1100
  2470  00168A                     u1101:
  2471  00168A  D001               	goto	l174
  2472  00168C                     u1100:
  2473  00168C  D010               	goto	l175
  2474                           	
  2475  00168E                     l174:		; BSR set to: ?
  2476                           
  2477  00168E  0101               	movlb	1	; () banked
  2478  001690  0101               	movlb	1	; () banked
  2479  001692  4B0F               	infsnz	((GetKey@i))&0ffh
  2480  001694  2B10               	incf	((GetKey@i+1))&0ffh
  2481  001696  0101               	movlb	1	; () banked
  2482  001698  0101               	movlb	1	; () banked
  2483  00169A  5110               	movf	((GetKey@i+1))&0ffh,w
  2484  00169C  0A80               	xorlw	80h
  2485  00169E  0F80               	addlw	-((0)^80h)
  2486  0016A0  0E64               	movlw	064h
  2487  0016A2  B4D8               	btfsc	status,2
  2488  0016A4  5D0F               	subwf	((GetKey@i))&0ffh,w
  2489  0016A6  A0D8               	btfss	status,0
  2490  0016A8  D001               	goto	u1111
  2491  0016AA  D001               	goto	u1110
  2492  0016AC                     u1111:
  2493  0016AC  D7F0               	goto	l174
  2494  0016AE                     u1110:
  2495                           	
  2496  0016AE                     l175:		; BSR set to: ?
  2497                           
  2498                           	line	57
  2499                           ;LockAnsSound.C: 57: if (RC6) RESULT = 1;
  2500  0016AE  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2501  0016B0  D001               	goto	u1121
  2502  0016B2  D001               	goto	u1120
  2503  0016B4                     u1121:
  2504  0016B4  D008               	goto	l177
  2505  0016B6                     u1120:
  2506  0016B6  0101               	movlb	1	; () banked
  2507  0016B8  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2508  0016BA  0E01               	movlw	low(01h)
  2509  0016BC  0101               	movlb	1	; () banked
  2510  0016BE  0101               	movlb	1	; () banked
  2511  0016C0  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2512  0016C2  0101               	movlb	1	; () banked
  2513  0016C4  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2514                           	
  2515  0016C6                     l177:		; BSR set to: ?
  2516                           
  2517                           	line	58
  2518                           ;LockAnsSound.C: 58: if (RC5) RESULT = 4;
  2519  0016C6  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2520  0016C8  D001               	goto	u1131
  2521  0016CA  D001               	goto	u1130
  2522  0016CC                     u1131:
  2523  0016CC  D008               	goto	l178
  2524  0016CE                     u1130:
  2525  0016CE  0101               	movlb	1	; () banked
  2526  0016D0  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2527  0016D2  0E04               	movlw	low(04h)
  2528  0016D4  0101               	movlb	1	; () banked
  2529  0016D6  0101               	movlb	1	; () banked
  2530  0016D8  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2531  0016DA  0101               	movlb	1	; () banked
  2532  0016DC  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2533                           	
  2534  0016DE                     l178:		; BSR set to: ?
  2535                           
  2536                           	line	59
  2537                           ;LockAnsSound.C: 59: if (RC4) RESULT = 7;
  2538  0016DE  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2539  0016E0  D001               	goto	u1141
  2540  0016E2  D001               	goto	u1140
  2541  0016E4                     u1141:
  2542  0016E4  D008               	goto	l179
  2543  0016E6                     u1140:
  2544  0016E6  0101               	movlb	1	; () banked
  2545  0016E8  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2546  0016EA  0E07               	movlw	low(07h)
  2547  0016EC  0101               	movlb	1	; () banked
  2548  0016EE  0101               	movlb	1	; () banked
  2549  0016F0  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2550  0016F2  0101               	movlb	1	; () banked
  2551  0016F4  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2552                           	
  2553  0016F6                     l179:		; BSR set to: ?
  2554                           
  2555                           	line	60
  2556                           ;LockAnsSound.C: 60: if (RC3) RESULT = 10;
  2557  0016F6  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2558  0016F8  D001               	goto	u1151
  2559  0016FA  D001               	goto	u1150
  2560  0016FC                     u1151:
  2561  0016FC  D008               	goto	l180
  2562  0016FE                     u1150:
  2563  0016FE  0101               	movlb	1	; () banked
  2564  001700  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2565  001702  0E0A               	movlw	low(0Ah)
  2566  001704  0101               	movlb	1	; () banked
  2567  001706  0101               	movlb	1	; () banked
  2568  001708  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2569  00170A  0101               	movlb	1	; () banked
  2570  00170C  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2571                           	
  2572  00170E                     l180:		; BSR set to: ?
  2573                           
  2574                           	line	62
  2575                           ;LockAnsSound.C: 62: PORTC = 2;
  2576  00170E  0E02               	movlw	low(02h)
  2577  001710  6E82               	movwf	((c:3970)),c	;volatile
  2578                           	line	63
  2579                           ;LockAnsSound.C: 63: for (i=0; i<100; i++);
  2580  001712  0E00               	movlw	low(0)
  2581  001714  0101               	movlb	1	; () banked
  2582  001716  0101               	movlb	1	; () banked
  2583  001718  6F0F               	movwf	((GetKey@i))&0ffh
  2584  00171A  0E00               	movlw	high(0)
  2585  00171C  0101               	movlb	1	; () banked
  2586  00171E  6F10               	movwf	((GetKey@i+1))&0ffh
  2587  001720  0101               	movlb	1	; () banked
  2588  001722  0101               	movlb	1	; () banked
  2589  001724  5110               	movf	((GetKey@i+1))&0ffh,w
  2590  001726  0A80               	xorlw	80h
  2591  001728  0F80               	addlw	-((0)^80h)
  2592  00172A  0E64               	movlw	064h
  2593  00172C  B4D8               	btfsc	status,2
  2594  00172E  5D0F               	subwf	((GetKey@i))&0ffh,w
  2595  001730  A0D8               	btfss	status,0
  2596  001732  D001               	goto	u1161
  2597  001734  D001               	goto	u1160
  2598  001736                     u1161:
  2599  001736  D001               	goto	l181
  2600  001738                     u1160:
  2601  001738  D010               	goto	l182
  2602                           	
  2603  00173A                     l181:		; BSR set to: ?
  2604                           
  2605  00173A  0101               	movlb	1	; () banked
  2606  00173C  0101               	movlb	1	; () banked
  2607  00173E  4B0F               	infsnz	((GetKey@i))&0ffh
  2608  001740  2B10               	incf	((GetKey@i+1))&0ffh
  2609  001742  0101               	movlb	1	; () banked
  2610  001744  0101               	movlb	1	; () banked
  2611  001746  5110               	movf	((GetKey@i+1))&0ffh,w
  2612  001748  0A80               	xorlw	80h
  2613  00174A  0F80               	addlw	-((0)^80h)
  2614  00174C  0E64               	movlw	064h
  2615  00174E  B4D8               	btfsc	status,2
  2616  001750  5D0F               	subwf	((GetKey@i))&0ffh,w
  2617  001752  A0D8               	btfss	status,0
  2618  001754  D001               	goto	u1171
  2619  001756  D001               	goto	u1170
  2620  001758                     u1171:
  2621  001758  D7F0               	goto	l181
  2622  00175A                     u1170:
  2623                           	
  2624  00175A                     l182:		; BSR set to: ?
  2625                           
  2626                           	line	64
  2627                           ;LockAnsSound.C: 64: if (RC6) RESULT = 2;
  2628  00175A  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2629  00175C  D001               	goto	u1181
  2630  00175E  D001               	goto	u1180
  2631  001760                     u1181:
  2632  001760  D008               	goto	l184
  2633  001762                     u1180:
  2634  001762  0101               	movlb	1	; () banked
  2635  001764  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2636  001766  0E02               	movlw	low(02h)
  2637  001768  0101               	movlb	1	; () banked
  2638  00176A  0101               	movlb	1	; () banked
  2639  00176C  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2640  00176E  0101               	movlb	1	; () banked
  2641  001770  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2642                           	
  2643  001772                     l184:		; BSR set to: ?
  2644                           
  2645                           	line	65
  2646                           ;LockAnsSound.C: 65: if (RC5) RESULT = 5;
  2647  001772  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2648  001774  D001               	goto	u1191
  2649  001776  D001               	goto	u1190
  2650  001778                     u1191:
  2651  001778  D008               	goto	l185
  2652  00177A                     u1190:
  2653  00177A  0101               	movlb	1	; () banked
  2654  00177C  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2655  00177E  0E05               	movlw	low(05h)
  2656  001780  0101               	movlb	1	; () banked
  2657  001782  0101               	movlb	1	; () banked
  2658  001784  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2659  001786  0101               	movlb	1	; () banked
  2660  001788  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2661                           	
  2662  00178A                     l185:		; BSR set to: ?
  2663                           
  2664                           	line	66
  2665                           ;LockAnsSound.C: 66: if (RC4) RESULT = 8;
  2666  00178A  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2667  00178C  D001               	goto	u1201
  2668  00178E  D001               	goto	u1200
  2669  001790                     u1201:
  2670  001790  D008               	goto	l186
  2671  001792                     u1200:
  2672  001792  0101               	movlb	1	; () banked
  2673  001794  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2674  001796  0E08               	movlw	low(08h)
  2675  001798  0101               	movlb	1	; () banked
  2676  00179A  0101               	movlb	1	; () banked
  2677  00179C  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2678  00179E  0101               	movlb	1	; () banked
  2679  0017A0  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2680                           	
  2681  0017A2                     l186:		; BSR set to: ?
  2682                           
  2683                           	line	67
  2684                           ;LockAnsSound.C: 67: if (RC3) RESULT = 0;
  2685  0017A2  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2686  0017A4  D001               	goto	u1211
  2687  0017A6  D001               	goto	u1210
  2688  0017A8                     u1211:
  2689  0017A8  D008               	goto	l187
  2690  0017AA                     u1210:
  2691  0017AA  0101               	movlb	1	; () banked
  2692  0017AC  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2693  0017AE  0E00               	movlw	low(0)
  2694  0017B0  0101               	movlb	1	; () banked
  2695  0017B2  0101               	movlb	1	; () banked
  2696  0017B4  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2697  0017B6  0101               	movlb	1	; () banked
  2698  0017B8  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2699                           	
  2700  0017BA                     l187:		; BSR set to: ?
  2701                           
  2702                           	line	69
  2703                           ;LockAnsSound.C: 69: PORTC = 1;
  2704  0017BA  0E01               	movlw	low(01h)
  2705  0017BC  6E82               	movwf	((c:3970)),c	;volatile
  2706                           	line	70
  2707                           ;LockAnsSound.C: 70: for (i=0; i<100; i++);
  2708  0017BE  0E00               	movlw	low(0)
  2709  0017C0  0101               	movlb	1	; () banked
  2710  0017C2  0101               	movlb	1	; () banked
  2711  0017C4  6F0F               	movwf	((GetKey@i))&0ffh
  2712  0017C6  0E00               	movlw	high(0)
  2713  0017C8  0101               	movlb	1	; () banked
  2714  0017CA  6F10               	movwf	((GetKey@i+1))&0ffh
  2715  0017CC  0101               	movlb	1	; () banked
  2716  0017CE  0101               	movlb	1	; () banked
  2717  0017D0  5110               	movf	((GetKey@i+1))&0ffh,w
  2718  0017D2  0A80               	xorlw	80h
  2719  0017D4  0F80               	addlw	-((0)^80h)
  2720  0017D6  0E64               	movlw	064h
  2721  0017D8  B4D8               	btfsc	status,2
  2722  0017DA  5D0F               	subwf	((GetKey@i))&0ffh,w
  2723  0017DC  A0D8               	btfss	status,0
  2724  0017DE  D001               	goto	u1221
  2725  0017E0  D001               	goto	u1220
  2726  0017E2                     u1221:
  2727  0017E2  D001               	goto	l188
  2728  0017E4                     u1220:
  2729  0017E4  D010               	goto	l189
  2730                           	
  2731  0017E6                     l188:		; BSR set to: ?
  2732                           
  2733  0017E6  0101               	movlb	1	; () banked
  2734+ 0017E8  0101               	movlb	1	; () banked
  2735+ 0017EA  4B0F               	infsnz	((GetKey@i))&0ffh
  2736+ 0017EC  2B10               	incf	((GetKey@i+1))&0ffh
  2737+ 0017EE  0101               	movlb	1	; () banked
  2738+ 0017F0  0101               	movlb	1	; () banked
  2739+ 0017F2  5110               	movf	((GetKey@i+1))&0ffh,w
  2740+ 0017F4  0A80               	xorlw	80h
  2741+ 0017F6  0F80               	addlw	-((0)^80h)
  2742+ 0017F8  0E64               	movlw	064h
  2743+ 0017FA  B4D8               	btfsc	status,2
  2744+ 0017FC  5D0F               	subwf	((GetKey@i))&0ffh,w
  2745+ 0017FE  A0D8               	btfss	status,0
  2746+ 001800  D001               	goto	u1231
  2747+ 001802  D001               	goto	u1230
  2748+ 001804                     u1231:
  2749+ 001804  D7F0               	goto	l188
  2750+ 001806                     u1230:
  2751+                          	
  2752+ 001806                     l189:		; BSR set to: ?
  2753+                          
  2754+                          	line	71
  2755+                          ;LockAnsSound.C: 71: if (RC6) RESULT = 3;
  2756+ 001806  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2757+ 001808  D001               	goto	u1241
  2758+ 00180A  D001               	goto	u1240
  2759+ 00180C                     u1241:
  2760+ 00180C  D008               	goto	l191
  2761+ 00180E                     u1240:
  2762+ 00180E  0101               	movlb	1	; () banked
  2763+ 001810  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2764+ 001812  0E03               	movlw	low(03h)
  2765+ 001814  0101               	movlb	1	; () banked
  2766+ 001816  0101               	movlb	1	; () banked
  2767+ 001818  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2768+ 00181A  0101               	movlb	1	; () banked
  2769+ 00181C  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2770+                          	
  2771+ 00181E                     l191:		; BSR set to: ?
  2772+                          
  2773+                          	line	72
  2774+                          ;LockAnsSound.C: 72: if (RC5) RESULT = 6;
  2775+ 00181E  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2776+ 001820  D001               	goto	u1251
  2777+ 001822  D001               	goto	u1250
  2778+ 001824                     u1251:
  2779+ 001824  D008               	goto	l192
  2780+ 001826                     u1250:
  2781+ 001826  0101               	movlb	1	; () banked
  2782+ 001828  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2783+ 00182A  0E06               	movlw	low(06h)
  2784+ 00182C  0101               	movlb	1	; () banked
  2785+ 00182E  0101               	movlb	1	; () banked
  2786+ 001830  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2787+ 001832  0101               	movlb	1	; () banked
  2788+ 001834  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2789+                          	
  2790+ 001836                     l192:		; BSR set to: ?
  2791+                          
  2792+                          	line	73
  2793+                          ;LockAnsSound.C: 73: if (RC4) RESULT = 9;
  2794+ 001836  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2795+ 001838  D001               	goto	u1261
  2796+ 00183A  D001               	goto	u1260
  2797+ 00183C                     u1261:
  2798+ 00183C  D008               	goto	l193
  2799+ 00183E                     u1260:
  2800+ 00183E  0101               	movlb	1	; () banked
  2801+ 001840  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2802+ 001842  0E09               	movlw	low(09h)
  2803+ 001844  0101               	movlb	1	; () banked
  2804+ 001846  0101               	movlb	1	; () banked
  2805+ 001848  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2806+ 00184A  0101               	movlb	1	; () banked
  2807+ 00184C  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2808+                          	
  2809+ 00184E                     l193:		; BSR set to: ?
  2810+                          
  2811+                          	line	74
  2812+                          ;LockAnsSound.C: 74: if (RC3) RESULT = 11;
  2813+ 00184E  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2814+ 001850  D001               	goto	u1271
  2815+ 001852  D001               	goto	u1270
  2816+ 001854                     u1271:
  2817+ 001854  D008               	goto	l194
  2818+ 001856                     u1270:
  2819+ 001856  0101               	movlb	1	; () banked
  2820+ 001858  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2821+ 00185A  0E0B               	movlw	low(0Bh)
  2822+ 00185C  0101               	movlb	1	; () banked
  2823+ 00185E  0101               	movlb	1	; () banked
  2824+ 001860  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2825+ 001862  0101               	movlb	1	; () banked
  2826+ 001864  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2827+                          	
  2828+ 001866                     l194:		; BSR set to: ?
  2829+                          
  2830+                          	line	76
  2831+                          ;LockAnsSound.C: 76: if (RB0) RESULT = 12;
  2832+ 001866  A081               	btfss	c:(31752/8),(31752)&7	;volatile
  2833+ 001868  D001               	goto	u1281
  2834+ 00186A  D001               	goto	u1280
  2835+ 00186C                     u1281:
  2836+ 00186C  D008               	goto	l195
  2837+ 00186E                     u1280:
  2838+ 00186E  0101               	movlb	1	; () banked
  2839+ 001870  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2840+ 001872  0E0C               	movlw	low(0Ch)
  2841+ 001874  0101               	movlb	1	; () banked
  2842+ 001876  0101               	movlb	1	; () banked
  2843+ 001878  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2844+ 00187A  0101               	movlb	1	; () banked
  2845+ 00187C  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2846+                          	
  2847+ 00187E                     l195:		; BSR set to: ?
  2848+                          
  2849+                          	line	77
  2850+                          ;LockAnsSound.C: 77: if (RB1) RESULT = 13;
  2851+ 00187E  A281               	btfss	c:(31753/8),(31753)&7	;volatile
  2852+ 001880  D001               	goto	u1291
  2853+ 001882  D001               	goto	u1290
  2854+ 001884                     u1291:
  2855+ 001884  D008               	goto	l196
  2856+ 001886                     u1290:
  2857+ 001886  0101               	movlb	1	; () banked
  2858+ 001888  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2859+ 00188A  0E0D               	movlw	low(0Dh)
  2860+ 00188C  0101               	movlb	1	; () banked
  2861+ 00188E  0101               	movlb	1	; () banked
  2862+ 001890  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2863+ 001892  0101               	movlb	1	; () banked
  2864+ 001894  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2865+                          	
  2866+ 001896                     l196:		; BSR set to: ?
  2867+                          
  2868+                          	line	78
  2869+                          ;LockAnsSound.C: 78: if (RB2) RESULT = 14;
  2870+ 001896  A481               	btfss	c:(31754/8),(31754)&7	;volatile
  2871+ 001898  D001               	goto	u1301
  2872+ 00189A  D001               	goto	u1300
  2873+ 00189C                     u1301:
  2874+ 00189C  D008               	goto	l197
  2875+ 00189E                     u1300:
  2876+ 00189E  0101               	movlb	1	; () banked
  2877+ 0018A0  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2878+ 0018A2  0E0E               	movlw	low(0Eh)
  2879+ 0018A4  0101               	movlb	1	; () banked
  2880+ 0018A6  0101               	movlb	1	; () banked
  2881+ 0018A8  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2882+ 0018AA  0101               	movlb	1	; () banked
  2883+ 0018AC  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2884+                          	
  2885+ 0018AE                     l197:		; BSR set to: ?
  2886+                          
  2887+                          	line	79
  2888+                          ;LockAnsSound.C: 79: if (RB3) RESULT = 15;
  2889+ 0018AE  A681               	btfss	c:(31755/8),(31755)&7	;volatile
  2890+ 0018B0  D001               	goto	u1311
  2891+ 0018B2  D001               	goto	u1310
  2892+ 0018B4                     u1311:
  2893+ 0018B4  D008               	goto	l198
  2894+ 0018B6                     u1310:
  2895+ 0018B6  0101               	movlb	1	; () banked
  2896+ 0018B8  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2897+ 0018BA  0E0F               	movlw	low(0Fh)
  2898+ 0018BC  0101               	movlb	1	; () banked
  2899+ 0018BE  0101               	movlb	1	; () banked
  2900+ 0018C0  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2901+ 0018C2  0101               	movlb	1	; () banked
  2902+ 0018C4  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2903+                          	
  2904+ 0018C6                     l198:		; BSR set to: ?
  2905+                          
  2906+                          	line	80
  2907+                          ;LockAnsSound.C: 80: if (RB4) RESULT = 16;
  2908+ 0018C6  A881               	btfss	c:(31756/8),(31756)&7	;volatile
  2909+ 0018C8  D001               	goto	u1321
  2910+ 0018CA  D001               	goto	u1320
  2911+ 0018CC                     u1321:
  2912+ 0018CC  D008               	goto	l199
  2913+ 0018CE                     u1320:
  2914+ 0018CE  0101               	movlb	1	; () banked
  2915+ 0018D0  6F11               	movwf	(??_GetKey+3+0)&0ffh
  2916+ 0018D2  0E10               	movlw	low(010h)
  2917+ 0018D4  0101               	movlb	1	; () banked
  2918+ 0018D6  0101               	movlb	1	; () banked
  2919+ 0018D8  6F0E               	movwf	((GetKey@RESULT))&0ffh
  2920+ 0018DA  0101               	movlb	1	; () banked
  2921+ 0018DC  5111               	movf	(??_GetKey+3+0)&0ffh,w
  2922+                          	
  2923+ 0018DE                     l199:		; BSR set to: ?
  2924+                          
  2925+                          	line	81
  2926+                          ;LockAnsSound.C: 81: PORTC = 0;
  2927+ 0018DE  0E00               	movlw	low(0)
  2928+ 0018E0  6E82               	movwf	((c:3970)),c	;volatile
  2929+                          	line	82
  2930+                          ;LockAnsSound.C: 82: return(RESULT);
  2931+ 0018E2  0101               	movlb	1	; () banked
  2932+ 0018E4  0101               	movlb	1	; () banked
  2933+ 0018E6  510E               	movf	((GetKey@RESULT))&0ffh,w
  2934+ 0018E8  D000               	goto	l173
  2935+                          	line	83
  2936+                          ;LockAnsSound.C: 83: }
  2937+ 0018EA                     l173:
  2938+                          			; BSR set to: ?
  2939+                          
  2940+ 0018EA  0012               	return
  2941+                          	opt stack 0
  2942+                          GLOBAL __end_of_GetKey
  2943+ 0018EC                     	__end_of_GetKey:
  2944+                          	FNSIZE	_GetKey,4,0
  2945+                          ; =============== function _GetKey ends ========
      +                          ====
  2946+                          
  2947+                          	signat	_GetKey,89
  2948+                          	global	_LCD_Move
  2949+                          	global	??_LCD_Move
  2950+                          	global	?_LCD_Move
  2951+                                  psect   text10,class=CODE,space=0,reloc=
      +                          2
  2952+                          
  2953+                          	opt lm
  2954+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  2955+                          	line	54
  2956+ 000000                     	__size_of_LCD_Move	equ	__end_of_LCD_Move-_LCD_M
      +                          ove
  2957+                          ;lcd_portd.c: 53: void LCD_Move(unsigned char Ro
      +                          w, unsigned char Col)
  2958+                          ;lcd_portd.c: 54: {
  2959+                          	
  2960+ 002456                     _LCD_Move:		; BSR set to: ?
  2961+                          
  2962+                          	opt stack 27
  2963+                          	line	55
  2964+                          ;lcd_portd.c: 55: if (Row == 0) LCD_Inst(0x80 + 
      +                          Col);
  2965+ 002456  0101               	movlb	1	; () banked
  2966+ 002458  0101               	movlb	1	; () banked
  2967+ 00245A  6718               	tstfsz	((LCD_Move@Row))&0ffh
  2968+ 00245C  D001               	goto	u3271
  2969+ 00245E  D001               	goto	u3270
  2970+ 002460                     u3271:
  2971+ 002460  D009               	goto	l124
  2972+ 002462                     u3270:
  2973+ 002462  0101               	movlb	1	; () banked
  2974+ 002464  0101               	movlb	1	; () banked
  2975+ 002466  5119               	movf	((LCD_Move@Col))&0ffh,w
  2976+ 002468  0F80               	addlw	low(080h)
  2977+ 00246A  0101               	movlb	1	; () banked
  2978+ 00246C  0101               	movlb	1	; () banked
  2979+ 00246E  6F1A               	movwf	((?_LCD_Inst))&0ffh
  2980+ 002470  ECDF  F012         	call	_LCD_Inst	;wreg free
  2981+                          	
  2982+ 002474                     l124:		; BSR set to: ?
  2983+                          
  2984+                          	line	56
  2985+                          ;lcd_portd.c: 56: if (Row == 1) LCD_Inst(0xC0 + 
      +                          Col);
  2986+ 002474  0101               	movlb	1	; () banked
  2987+ 002476  0101               	movlb	1	; () banked
  2988+ 002478  0518               	decf	((LCD_Move@Row))&0ffh,w
  2989+                          
  2990+ 00247A  A4D8               	btfss	status,2
  2991+ 00247C  D001               	goto	u3281
  2992+ 00247E  D001               	goto	u3280
  2993+ 002480                     u3281:
  2994+ 002480  D009               	goto	l125
  2995+ 002482                     u3280:
  2996+ 002482  0101               	movlb	1	; () banked
  2997+ 002484  0101               	movlb	1	; () banked
  2998+ 002486  5119               	movf	((LCD_Move@Col))&0ffh,w
  2999+ 002488  0FC0               	addlw	low(0C0h)
  3000+ 00248A  0101               	movlb	1	; () banked
  3001+ 00248C  0101               	movlb	1	; () banked
  3002+ 00248E  6F1A               	movwf	((?_LCD_Inst))&0ffh
  3003+ 002490  ECDF  F012         	call	_LCD_Inst	;wreg free
  3004+                          	
  3005+ 002494                     l125:		; BSR set to: ?
  3006+                          
  3007+                          	line	57
  3008+                          ;lcd_portd.c: 57: if (Row == 2) LCD_Inst(0x94 + 
      +                          Col);
  3009+ 002494  0101               	movlb	1	; () banked
  3010+ 002496  0101               	movlb	1	; () banked
  3011+ 002498  5118               	movf	((LCD_Move@Row))&0ffh,w
  3012+ 00249A  0A02               	xorlw	2
  3013+                          
  3014+ 00249C  A4D8               	btfss	status,2
  3015+ 00249E  D001               	goto	u3291
  3016+ 0024A0  D001               	goto	u3290
  3017+ 0024A2                     u3291:
  3018+ 0024A2  D009               	goto	l126
  3019+ 0024A4                     u3290:
  3020+ 0024A4  0101               	movlb	1	; () banked
  3021+ 0024A6  0101               	movlb	1	; () banked
  3022+ 0024A8  5119               	movf	((LCD_Move@Col))&0ffh,w
  3023+ 0024AA  0F94               	addlw	low(094h)
  3024+ 0024AC  0101               	movlb	1	; () banked
  3025+ 0024AE  0101               	movlb	1	; () banked
  3026+ 0024B0  6F1A               	movwf	((?_LCD_Inst))&0ffh
  3027+ 0024B2  ECDF  F012         	call	_LCD_Inst	;wreg free
  3028+                          	
  3029+ 0024B6                     l126:		; BSR set to: ?
  3030+                          
  3031+                          	line	58
  3032+                          ;lcd_portd.c: 58: if (Row == 3) LCD_Inst(0xD4 + 
      +                          Col);
  3033+ 0024B6  0101               	movlb	1	; () banked
  3034+ 0024B8  0101               	movlb	1	; () banked
  3035+ 0024BA  5118               	movf	((LCD_Move@Row))&0ffh,w
  3036+ 0024BC  0A03               	xorlw	3
  3037+                          
  3038+ 0024BE  A4D8               	btfss	status,2
  3039+ 0024C0  D001               	goto	u3301
  3040+ 0024C2  D001               	goto	u3300
  3041+ 0024C4                     u3301:
  3042+ 0024C4  D009               	goto	l127
  3043+ 0024C6                     u3300:
  3044+ 0024C6  0101               	movlb	1	; () banked
  3045+ 0024C8  0101               	movlb	1	; () banked
  3046+ 0024CA  5119               	movf	((LCD_Move@Col))&0ffh,w
  3047+ 0024CC  0FD4               	addlw	low(0D4h)
  3048+ 0024CE  0101               	movlb	1	; () banked
  3049+ 0024D0  0101               	movlb	1	; () banked
  3050+ 0024D2  6F1A               	movwf	((?_LCD_Inst))&0ffh
  3051+ 0024D4  ECDF  F012         	call	_LCD_Inst	;wreg free
  3052+                          	
  3053+ 0024D8                     l127:		; BSR set to: ?
  3054+                          
  3055+                          	line	59
  3056+                          ;lcd_portd.c: 59: }
  3057+ 0024D8                     l123:
  3058+                          			; BSR set to: ?
  3059+                          
  3060+ 0024D8  0012               	return
  3061+                          	opt stack 0
  3062+                          GLOBAL __end_of_LCD_Move
  3063+ 0024DA                     	__end_of_LCD_Move:
  3064+                          	FNSIZE	_LCD_Move,0,2
  3065+                          ; =============== function _LCD_Move ends ======
      +                          ======
  3066+                          
  3067+                          	signat	_LCD_Move,8312
  3068+                          	global	_LCD_Out
  3069+                          	global	??_LCD_Out
  3070+                          	global	?_LCD_Out
  3071+                                  psect   text11,class=CODE,space=0,reloc=
      +                          2
  3072+                          
  3073+                          	opt lm
  3074+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  3075+                          	line	87
  3076+ 000000                     	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
  3077+                          ;lcd_portd.c: 86: void LCD_Out(long int DATA, un
      +                          signed char D, unsigned char N)
  3078+                          ;lcd_portd.c: 87: {
  3079+                          	
  3080+ 001DC0                     _LCD_Out:		; BSR set to: ?
  3081+                          
  3082+                          	opt stack 27
  3083+                          	line	90
  3084+ 001DC0  0101               	movlb	1	; () banked
  3085+ 001DC2  0101               	movlb	1	; () banked
  3086+ 001DC4  AF1B               	btfss	((LCD_Out@DATA+3))&0ffh,7
  3087+ 001DC6  D001               	goto	u3211
  3088+ 001DC8  D001               	goto	u3210
  3089+ 001DCA                     u3211:
  3090+ 001DCA  D01B               	goto	l131
  3091+ 001DCC                     u3210:
  3092+                          	line	91
  3093+                          ;lcd_portd.c: 91: LCD_Write('-');
  3094+ 001DCC  0101               	movlb	1	; () banked
  3095+ 001DCE  6F29               	movwf	(??_LCD_Out+11+0)&0ffh
  3096+ 001DD0  0E2D               	movlw	low(02Dh)
  3097+ 001DD2  0101               	movlb	1	; () banked
  3098+ 001DD4  0101               	movlb	1	; () banked
  3099+ 001DD6  6F2A               	movwf	((?_LCD_Write))&0ffh
  3100+ 001DD8  0101               	movlb	1	; () banked
  3101+ 001DDA  5129               	movf	(??_LCD_Out+11+0)&0ffh,w
  3102+ 001DDC  EC2C  F013         	call	_LCD_Write	;wreg free
  3103+                          	line	92
  3104+                          ;lcd_portd.c: 92: DATA = -DATA;
  3105+ 001DE0  0101               	movlb	1	; () banked
  3106+ 001DE2  0101               	movlb	1	; () banked
  3107+ 001DE4  1F1B               	comf	((LCD_Out@DATA+3))&0ffh
  3108+ 001DE6  0101               	movlb	1	; () banked
  3109+ 001DE8  1F1A               	comf	((LCD_Out@DATA+2))&0ffh
  3110+ 001DEA  0101               	movlb	1	; () banked
  3111+ 001DEC  1F19               	comf	((LCD_Out@DATA+1))&0ffh
  3112+ 001DEE  0101               	movlb	1	; () banked
  3113+ 001DF0  6D18               	negf	((LCD_Out@DATA))&0ffh
  3114+ 001DF2  0E00               	movlw	0
  3115+ 001DF4  0101               	movlb	1	; () banked
  3116+ 001DF6  2319               	addwfc	((LCD_Out@DATA+1))&0ffh
  3117+ 001DF8  0101               	movlb	1	; () banked
  3118+ 001DFA  231A               	addwfc	((LCD_Out@DATA+2))&0ffh
  3119+ 001DFC  0101               	movlb	1	; () banked
  3120+ 001DFE  231B               	addwfc	((LCD_Out@DATA+3))&0ffh
  3121+                          	line	93
  3122+                          ;lcd_portd.c: 93: }
  3123+ 001E00  D00A               	goto	l132
  3124+                          	line	94
  3125+                          	
  3126+ 001E02                     l131:		; BSR set to: ?
  3127+                          
  3128+                          ;lcd_portd.c: 94: else LCD_Write(' ');
  3129+ 001E02  0101               	movlb	1	; () banked
  3130+ 001E04  6F29               	movwf	(??_LCD_Out+11+0)&0ffh
  3131+ 001E06  0E20               	movlw	low(020h)
  3132+ 001E08  0101               	movlb	1	; () banked
  3133+ 001E0A  0101               	movlb	1	; () banked
  3134+ 001E0C  6F2A               	movwf	((?_LCD_Write))&0ffh
  3135+ 001E0E  0101               	movlb	1	; () banked
  3136+ 001E10  5129               	movf	(??_LCD_Out+11+0)&0ffh,w
  3137+ 001E12  EC2C  F013         	call	_LCD_Write	;wreg free
  3138+                          	
  3139+ 001E16                     l132:		; BSR set to: ?
  3140+                          
  3141+                          	line	95
  3142+                          ;lcd_portd.c: 95: for (i=0; i<10; i++) {
  3143+ 001E16  0101               	movlb	1	; () banked
  3144+ 001E18  6F29               	movwf	(??_LCD_Out+11+0)&0ffh
  3145+ 001E1A  0E00               	movlw	low(0)
  3146+ 001E1C  0101               	movlb	1	; () banked
  3147+ 001E1E  0101               	movlb	1	; () banked
  3148+ 001E20  6F1E               	movwf	((LCD_Out@i))&0ffh
  3149+ 001E22  0101               	movlb	1	; () banked
  3150+ 001E24  5129               	movf	(??_LCD_Out+11+0)&0ffh,w
  3151+ 001E26  0E09               	movlw	(0Ah-1)
  3152+ 001E28  0101               	movlb	1	; () banked
  3153+ 001E2A  0101               	movlb	1	; () banked
  3154+ 001E2C  651E               	cpfsgt	((LCD_Out@i))&0ffh
  3155+ 001E2E  D001               	goto	u3221
  3156  001E30  D001               	goto	u3220
  3157  001E32                     u3221:
  3158  001E32  D001               	goto	l133
  3159  001E34                     u3220:
  3160  001E34  D04E               	goto	l134
  3161                           	
  3162  001E36                     l133:		; BSR set to: ?
  3163                           
  3164                           	line	96
  3165                           ;lcd_portd.c: 96: A[i] = DATA % 10;
  3166  001E36  0101               	movlb	1	; () banked
  3167  001E38  0E1F               	movlw	low(LCD_Out@A)
  3168  001E3A  0101               	movlb	1	; () banked
  3169  001E3C  0101               	movlb	1	; () banked
  3170  001E3E  251E               	addwf	((LCD_Out@i))&0ffh,w
  3171  001E40  6EE9               	movwf	c:fsr0l
  3172  001E42  6AEA               	clrf	1+c:fsr0l
  3173  001E44  0101               	movlb	1	; () banked
  3174  001E46  0E01               	movlw	high(LCD_Out@A)
  3175  001E48  22EA               	addwfc	1+c:fsr0l
  3176  001E4A  0E0A               	movlw	low(0Ah)
  3177  001E4C  0101               	movlb	1	; () banked
  3178  001E4E  0101               	movlb	1	; () banked
  3179  001E50  6F2E               	movwf	(0+(?___almod+04h))&0ffh
  3180  001E52  0E00               	movlw	high(0Ah)
  3181  001E54  0101               	movlb	1	; () banked
  3182  001E56  6F2F               	movwf	(1+(?___almod+04h))&0ffh
  3183  001E58  0E00               	movlw	low highword(0Ah)
  3184  001E5A  0101               	movlb	1	; () banked
  3185  001E5C  6F30               	movwf	(2+(?___almod+04h))&0ffh
  3186  001E5E  0E00               	movlw	high highword(0Ah)
  3187  001E60  0101               	movlb	1	; () banked
  3188  001E62  6F31               	movwf	(3+(?___almod+04h))&0ffh
  3189  001E64  C118  F12A         	movff	(LCD_Out@DATA),(?___almod)
  3190  001E68  C119  F12B         	movff	(LCD_Out@DATA+1),(?___almod+1)
  3191  001E6C  C11A  F12C         	movff	(LCD_Out@DATA+2),(?___almod+2)
  3192  001E70  C11B  F12D         	movff	(LCD_Out@DATA+3),(?___almod+3)
  3193  001E74  EC58  F00D         	call	___almod	;wreg free
  3194  001E78  0101               	movlb	1	; () banked
  3195  001E7A  0101               	movlb	1	; () banked
  3196  001E7C  512A               	movf	(0+?___almod)&0ffh,w
  3197  001E7E  6EEF               	movwf	indf0
  3198                           
  3199                           	line	97
  3200                           ;lcd_portd.c: 97: DATA = DATA / 10;
  3201  001E80  0E0A               	movlw	low(0Ah)
  3202  001E82  0101               	movlb	1	; () banked
  3203  001E84  0101               	movlb	1	; () banked
  3204  001E86  6F2E               	movwf	(0+(?___aldiv+04h))&0ffh
  3205  001E88  0E00               	movlw	high(0Ah)
  3206  001E8A  0101               	movlb	1	; () banked
  3207  001E8C  6F2F               	movwf	(1+(?___aldiv+04h))&0ffh
  3208  001E8E  0E00               	movlw	low highword(0Ah)
  3209  001E90  0101               	movlb	1	; () banked
  3210  001E92  6F30               	movwf	(2+(?___aldiv+04h))&0ffh
  3211  001E94  0E00               	movlw	high highword(0Ah)
  3212  001E96  0101               	movlb	1	; () banked
  3213  001E98  6F31               	movwf	(3+(?___aldiv+04h))&0ffh
  3214  001E9A  C118  F12A         	movff	(LCD_Out@DATA),(?___aldiv)
  3215  001E9E  C119  F12B         	movff	(LCD_Out@DATA+1),(?___aldiv+1)
  3216  001EA2  C11A  F12C         	movff	(LCD_Out@DATA+2),(?___aldiv+2)
  3217  001EA6  C11B  F12D         	movff	(LCD_Out@DATA+3),(?___aldiv+3)
  3218  001EAA  EC76  F00C         	call	___aldiv	;wreg free
  3219  001EAE  C12A  F118         	movff	0+?___aldiv,(LCD_Out@DATA)
  3220  001EB2  C12B  F119         	movff	1+?___aldiv,(LCD_Out@DATA+1)
  3221  001EB6  C12C  F11A         	movff	2+?___aldiv,(LCD_Out@DATA+2)
  3222  001EBA  C12D  F11B         	movff	3+?___aldiv,(LCD_Out@DATA+3)
  3223                           	line	95
  3224  001EBE  0101               	movlb	1	; () banked
  3225  001EC0  0101               	movlb	1	; () banked
  3226  001EC2  2B1E               	incf	((LCD_Out@i))&0ffh
  3227  001EC4  0E09               	movlw	(0Ah-1)
  3228  001EC6  0101               	movlb	1	; () banked
  3229  001EC8  0101               	movlb	1	; () banked
  3230  001ECA  651E               	cpfsgt	((LCD_Out@i))&0ffh
  3231  001ECC  D001               	goto	u3231
  3232  001ECE  D001               	goto	u3230
  3233  001ED0                     u3231:
  3234  001ED0  D7B2               	goto	l133
  3235  001ED2                     u3230:
  3236                           	
  3237  001ED2                     l134:		; BSR set to: ?
  3238                           
  3239                           	line	99
  3240                           ;lcd_portd.c: 98: }
  3241                           ;lcd_portd.c: 99: for (i=D; i>0; i--) {
  3242  001ED2  C11C  F11E         	movff	(LCD_Out@D),(LCD_Out@i)
  3243  001ED6  0101               	movlb	1	; () banked
  3244  001ED8  0101               	movlb	1	; () banked
  3245  001EDA  671E               	tstfsz	((LCD_Out@i))&0ffh
  3246  001EDC  D001               	goto	u3241
  3247  001EDE  D001               	goto	u3240
  3248  001EE0                     u3241:
  3249  001EE0  D001               	goto	l136
  3250  001EE2                     u3240:
  3251  001EE2  D031               	goto	l137
  3252                           	
  3253  001EE4                     l136:		; BSR set to: ?
  3254                           
  3255                           	line	100
  3256                           ;lcd_portd.c: 100: if (i == N) LCD_Write('.');
  3257  001EE4  0101               	movlb	1	; () banked
  3258  001EE6  0101               	movlb	1	; () banked
  3259  001EE8  511D               	movf	((LCD_Out@N))&0ffh,w
  3260  001EEA  0101               	movlb	1	; () banked
  3261  001EEC  0101               	movlb	1	; () banked
  3262  001EEE  631E               	cpfseq	((LCD_Out@i))&0ffh
  3263  001EF0  D001               	goto	u3251
  3264  001EF2  D001               	goto	u3250
  3265  001EF4                     u3251:
  3266  001EF4  D00A               	goto	l139
  3267  001EF6                     u3250:
  3268  001EF6  0101               	movlb	1	; () banked
  3269  001EF8  6F29               	movwf	(??_LCD_Out+11+0)&0ffh
  3270  001EFA  0E2E               	movlw	low(02Eh)
  3271  001EFC  0101               	movlb	1	; () banked
  3272  001EFE  0101               	movlb	1	; () banked
  3273  001F00  6F2A               	movwf	((?_LCD_Write))&0ffh
  3274  001F02  0101               	movlb	1	; () banked
  3275  001F04  5129               	movf	(??_LCD_Out+11+0)&0ffh,w
  3276  001F06  EC2C  F013         	call	_LCD_Write	;wreg free
  3277                           	
  3278  001F0A                     l139:		; BSR set to: ?
  3279                           
  3280                           	line	101
  3281                           ;lcd_portd.c: 101: LCD_Write(A[i-1] + '0');
  3282  001F0A  C11E  F129         	movff	(LCD_Out@i),??_LCD_Out+11+0
  3283  001F0E  0EFF               	movlw	-1
  3284  001F10  0101               	movlb	1	; () banked
  3285  001F12  2729               	addwf	(??_LCD_Out+11+0)&0ffh
  3286  001F14  0101               	movlb	1	; () banked
  3287  001F16  0E1F               	movlw	low(LCD_Out@A)
  3288  001F18  0101               	movlb	1	; () banked
  3289  001F1A  2529               	addwf	(??_LCD_Out+11+0)&0ffh,w
  3290  001F1C  6EE9               	movwf	c:fsr0l
  3291  001F1E  6AEA               	clrf	1+c:fsr0l
  3292  001F20  0101               	movlb	1	; () banked
  3293  001F22  0E01               	movlw	high(LCD_Out@A)
  3294  001F24  22EA               	addwfc	1+c:fsr0l
  3295  001F26  50EF               	movf	indf0,w
  3296  001F28  0F30               	addlw	low(030h)
  3297  001F2A  0101               	movlb	1	; () banked
  3298  001F2C  0101               	movlb	1	; () banked
  3299  001F2E  6F2A               	movwf	((?_LCD_Write))&0ffh
  3300  001F30  EC2C  F013         	call	_LCD_Write	;wreg free
  3301                           	line	99
  3302  001F34  0101               	movlb	1	; () banked
  3303  001F36  0101               	movlb	1	; () banked
  3304  001F38  071E               	decf	((LCD_Out@i))&0ffh
  3305  001F3A  0101               	movlb	1	; () banked
  3306  001F3C  0101               	movlb	1	; () banked
  3307  001F3E  671E               	tstfsz	((LCD_Out@i))&0ffh
  3308  001F40  D001               	goto	u3261
  3309  001F42  D001               	goto	u3260
  3310  001F44                     u3261:
  3311  001F44  D7CF               	goto	l136
  3312  001F46                     u3260:
  3313                           	
  3314  001F46                     l137:		; BSR set to: ?
  3315                           
  3316                           	line	103
  3317                           ;lcd_portd.c: 102: }
  3318                           ;lcd_portd.c: 103: }
  3319  001F46                     l130:
  3320                           			; BSR set to: ?
  3321                           
  3322  001F46  0012               	return
  3323                           	opt stack 0
  3324                           GLOBAL __end_of_LCD_Out
  3325  001F48                     	__end_of_LCD_Out:
  3326                           	FNSIZE	_LCD_Out,12,6
  3327                           ; =============== function _LCD_Out ends =======
                                 =====
  3328                           
  3329                           	signat	_LCD_Out,12408
  3330                           	global	___almod
  3331                           	global	??___almod
  3332                           	global	?___almod
  3333                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  3334                           
  3335                           	opt lm
  3336                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\almod.c"
  3337                           	line	5
  3338  000000                     	__size_of___almod	equ	__end_of___almod-___almod
  3339                           	
  3340  001AB0                     ___almod:		; BSR set to: ?
  3341                           
  3342                           	opt stack 26
  3343                           	line	8
  3344  001AB0  0101               	movlb	1	; () banked
  3345  001AB2  6F34               	movwf	(??___almod+2+0)&0ffh
  3346  001AB4  0E00               	movlw	low(0)
  3347  001AB6  0101               	movlb	1	; () banked
  3348  001AB8  0101               	movlb	1	; () banked
  3349  001ABA  6F32               	movwf	((___almod@sign))&0ffh
  3350  001ABC  0101               	movlb	1	; () banked
  3351  001ABE  5134               	movf	(??___almod+2+0)&0ffh,w
  3352                           	line	9
  3353  001AC0  0101               	movlb	1	; () banked
  3354  001AC2  0101               	movlb	1	; () banked
  3355  001AC4  AF2D               	btfss	((___almod@dividend+3))&0ffh,7
  3356  001AC6  D001               	goto	u3351
  3357  001AC8  D001               	goto	u3350
  3358  001ACA                     u3351:
  3359  001ACA  D018               	goto	l284
  3360  001ACC                     u3350:
  3361                           	line	10
  3362  001ACC  0101               	movlb	1	; () banked
  3363  001ACE  0101               	movlb	1	; () banked
  3364  001AD0  1F2D               	comf	((___almod@dividend+3))&0ffh
  3365  001AD2  0101               	movlb	1	; () banked
  3366  001AD4  1F2C               	comf	((___almod@dividend+2))&0ffh
  3367  001AD6  0101               	movlb	1	; () banked
  3368  001AD8  1F2B               	comf	((___almod@dividend+1))&0ffh
  3369  001ADA  0101               	movlb	1	; () banked
  3370  001ADC  6D2A               	negf	((___almod@dividend))&0ffh
  3371  001ADE  0E00               	movlw	0
  3372  001AE0  0101               	movlb	1	; () banked
  3373  001AE2  232B               	addwfc	((___almod@dividend+1))&0ffh
  3374  001AE4  0101               	movlb	1	; () banked
  3375  001AE6  232C               	addwfc	((___almod@dividend+2))&0ffh
  3376  001AE8  0101               	movlb	1	; () banked
  3377  001AEA  232D               	addwfc	((___almod@dividend+3))&0ffh
  3378                           	line	11
  3379  001AEC  0101               	movlb	1	; () banked
  3380  001AEE  6F34               	movwf	(??___almod+2+0)&0ffh
  3381  001AF0  0E01               	movlw	low(01h)
  3382  001AF2  0101               	movlb	1	; () banked
  3383  001AF4  0101               	movlb	1	; () banked
  3384  001AF6  6F32               	movwf	((___almod@sign))&0ffh
  3385  001AF8  0101               	movlb	1	; () banked
  3386  001AFA  5134               	movf	(??___almod+2+0)&0ffh,w
  3387                           	line	12
  3388                           	
  3389  001AFC                     l284:		; BSR set to: ?
  3390                           
  3391                           	line	13
  3392  001AFC  0101               	movlb	1	; () banked
  3393  001AFE  0101               	movlb	1	; () banked
  3394  001B00  AF31               	btfss	((___almod@divisor+3))&0ffh,7
  3395  001B02  D001               	goto	u3361
  3396  001B04  D001               	goto	u3360
  3397  001B06                     u3361:
  3398  001B06  D010               	goto	l285
  3399  001B08                     u3360:
  3400                           	line	14
  3401  001B08  0101               	movlb	1	; () banked
  3402  001B0A  0101               	movlb	1	; () banked
  3403  001B0C  1F31               	comf	((___almod@divisor+3))&0ffh
  3404  001B0E  0101               	movlb	1	; () banked
  3405  001B10  1F30               	comf	((___almod@divisor+2))&0ffh
  3406  001B12  0101               	movlb	1	; () banked
  3407  001B14  1F2F               	comf	((___almod@divisor+1))&0ffh
  3408  001B16  0101               	movlb	1	; () banked
  3409  001B18  6D2E               	negf	((___almod@divisor))&0ffh
  3410  001B1A  0E00               	movlw	0
  3411  001B1C  0101               	movlb	1	; () banked
  3412  001B1E  232F               	addwfc	((___almod@divisor+1))&0ffh
  3413  001B20  0101               	movlb	1	; () banked
  3414  001B22  2330               	addwfc	((___almod@divisor+2))&0ffh
  3415  001B24  0101               	movlb	1	; () banked
  3416  001B26  2331               	addwfc	((___almod@divisor+3))&0ffh
  3417                           	
  3418  001B28                     l285:		; BSR set to: ?
  3419                           
  3420                           	line	15
  3421  001B28  0101               	movlb	1	; () banked
  3422  001B2A  5131               	movf	((___almod@divisor+3))&0ffh,w
  3423  001B2C  112E               	iorwf ((___almod@divisor))&0ffh,w
  3424  001B2E  112F               	iorwf ((___almod@divisor+1))&0ffh,w
  3425  001B30  1130               	iorwf ((___almod@divisor+2))&0ffh,w
  3426                           
  3427  001B32  B4D8               	btfsc	status,2
  3428  001B34  D001               	goto	u3371
  3429  001B36  D001               	goto	u3370
  3430  001B38                     u3371:
  3431  001B38  D05E               	goto	l286
  3432  001B3A                     u3370:
  3433                           	line	16
  3434  001B3A  0101               	movlb	1	; () banked
  3435  001B3C  6F34               	movwf	(??___almod+2+0)&0ffh
  3436  001B3E  0E01               	movlw	low(01h)
  3437  001B40  0101               	movlb	1	; () banked
  3438  001B42  0101               	movlb	1	; () banked
  3439  001B44  6F33               	movwf	((___almod@counter))&0ffh
  3440  001B46  0101               	movlb	1	; () banked
  3441  001B48  5134               	movf	(??___almod+2+0)&0ffh,w
  3442                           	line	17
  3443  001B4A  D00D               	goto	l287
  3444                           	
  3445  001B4C                     l288:		; BSR set to: ?
  3446                           
  3447                           	line	18
  3448  001B4C  0101               	movlb	1	; () banked
  3449  001B4E  90D8               	bcf	status,0
  3450  001B50  0101               	movlb	1	; () banked
  3451  001B52  372E               	rlcf	((___almod@divisor))&0ffh
  3452  001B54  0101               	movlb	1	; () banked
  3453  001B56  372F               	rlcf	((___almod@divisor+1))&0ffh
  3454  001B58  0101               	movlb	1	; () banked
  3455  001B5A  3730               	rlcf	((___almod@divisor+2))&0ffh
  3456  001B5C  0101               	movlb	1	; () banked
  3457  001B5E  3731               	rlcf	((___almod@divisor+3))&0ffh
  3458                           	line	19
  3459  001B60  0101               	movlb	1	; () banked
  3460  001B62  0101               	movlb	1	; () banked
  3461  001B64  2B33               	incf	((___almod@counter))&0ffh
  3462                           	line	20
  3463                           	
  3464  001B66                     l287:		; BSR set to: ?
  3465                           
  3466                           	line	17
  3467  001B66  0101               	movlb	1	; () banked
  3468                           	
  3469  001B68  0101               	movlb	1	; () banked
  3470  001B6A  AF31               	btfss	((___almod@divisor+3))&0ffh,(31)&7
  3471  001B6C  D001               	goto	u3381
  3472  001B6E  D001               	goto	u3380
  3473  001B70                     u3381:
  3474  001B70  D7ED               	goto	l288
  3475  001B72                     u3380:
  3476                           	
  3477  001B72                     l289:		; BSR set to: ?
  3478                           
  3479                           	line	21
  3480                           	
  3481  001B72                     l292:		; BSR set to: ?
  3482                           
  3483                           	line	22
  3484  001B72  0101               	movlb	1	; () banked
  3485  001B74  0101               	movlb	1	; () banked
  3486  001B76  512E               	movf	((___almod@divisor))&0ffh,w
  3487  001B78  0101               	movlb	1	; () banked
  3488  001B7A  0101               	movlb	1	; () banked
  3489  001B7C  5D2A               	subwf	((___almod@dividend))&0ffh,w
  3490  001B7E  0101               	movlb	1	; () banked
  3491  001B80  0101               	movlb	1	; () banked
  3492  001B82  512F               	movf	((___almod@divisor+1))&0ffh,w
  3493  001B84  0101               	movlb	1	; () banked
  3494  001B86  0101               	movlb	1	; () banked
  3495  001B88  592B               	subwfb	((___almod@dividend+1))&0ffh,w
  3496  001B8A  0101               	movlb	1	; () banked
  3497  001B8C  0101               	movlb	1	; () banked
  3498  001B8E  5130               	movf	((___almod@divisor+2))&0ffh,w
  3499  001B90  0101               	movlb	1	; () banked
  3500  001B92  0101               	movlb	1	; () banked
  3501  001B94  592C               	subwfb	((___almod@dividend+2))&0ffh,w
  3502  001B96  0101               	movlb	1	; () banked
  3503  001B98  0101               	movlb	1	; () banked
  3504  001B9A  5131               	movf	((___almod@divisor+3))&0ffh,w
  3505  001B9C  0101               	movlb	1	; () banked
  3506  001B9E  0101               	movlb	1	; () banked
  3507  001BA0  592D               	subwfb	((___almod@dividend+3))&0ffh,w
  3508  001BA2  A0D8               	btfss	status,0
  3509  001BA4  D001               	goto	u3391
  3510  001BA6  D001               	goto	u3390
  3511  001BA8                     u3391:
  3512  001BA8  D018               	goto	l293
  3513  001BAA                     u3390:
  3514                           	line	23
  3515  001BAA  0101               	movlb	1	; () banked
  3516  001BAC  0101               	movlb	1	; () banked
  3517  001BAE  512E               	movf	((___almod@divisor))&0ffh,w
  3518  001BB0  0101               	movlb	1	; () banked
  3519  001BB2  0101               	movlb	1	; () banked
  3520  001BB4  5F2A               	subwf	((___almod@dividend))&0ffh
  3521  001BB6  0101               	movlb	1	; () banked
  3522  001BB8  0101               	movlb	1	; () banked
  3523  001BBA  512F               	movf	((___almod@divisor+1))&0ffh,w
  3524  001BBC  0101               	movlb	1	; () banked
  3525  001BBE  0101               	movlb	1	; () banked
  3526  001BC0  5B2B               	subwfb	((___almod@dividend+1))&0ffh
  3527  001BC2  0101               	movlb	1	; () banked
  3528  001BC4  0101               	movlb	1	; () banked
  3529  001BC6  5130               	movf	((___almod@divisor+2))&0ffh,w
  3530  001BC8  0101               	movlb	1	; () banked
  3531  001BCA  0101               	movlb	1	; () banked
  3532  001BCC  5B2C               	subwfb	((___almod@dividend+2))&0ffh
  3533  001BCE  0101               	movlb	1	; () banked
  3534  001BD0  0101               	movlb	1	; () banked
  3535  001BD2  5131               	movf	((___almod@divisor+3))&0ffh,w
  3536  001BD4  0101               	movlb	1	; () banked
  3537  001BD6  0101               	movlb	1	; () banked
  3538  001BD8  5B2D               	subwfb	((___almod@dividend+3))&0ffh
  3539                           	
  3540  001BDA                     l293:		; BSR set to: ?
  3541                           
  3542                           	line	24
  3543  001BDA  0101               	movlb	1	; () banked
  3544  001BDC  90D8               	bcf	status,0
  3545  001BDE  0101               	movlb	1	; () banked
  3546  001BE0  3331               	rrcf	((___almod@divisor+3))&0ffh
  3547  001BE2  0101               	movlb	1	; () banked
  3548  001BE4  3330               	rrcf	((___almod@divisor+2))&0ffh
  3549  001BE6  0101               	movlb	1	; () banked
  3550  001BE8  332F               	rrcf	((___almod@divisor+1))&0ffh
  3551  001BEA  0101               	movlb	1	; () banked
  3552  001BEC  332E               	rrcf	((___almod@divisor))&0ffh
  3553                           	line	25
  3554  001BEE  0101               	movlb	1	; () banked
  3555  001BF0  0101               	movlb	1	; () banked
  3556  001BF2  2F33               	decfsz	((___almod@counter))&0ffh
  3557                           	
  3558  001BF4  D7BE               	goto	l292
  3559                           	
  3560  001BF6                     l291:		; BSR set to: ?
  3561                           
  3562                           	line	26
  3563                           	
  3564  001BF6                     l286:		; BSR set to: ?
  3565                           
  3566                           	line	27
  3567  001BF6  0101               	movlb	1	; () banked
  3568  001BF8  0101               	movlb	1	; () banked
  3569  001BFA  5132               	movf	((___almod@sign))&0ffh,w
  3570  001BFC  B4D8               	btfsc	status,2
  3571  001BFE  D001               	goto	u3401
  3572  001C00  D001               	goto	u3400
  3573  001C02                     u3401:
  3574  001C02  D010               	goto	l294
  3575  001C04                     u3400:
  3576                           	line	28
  3577  001C04  0101               	movlb	1	; () banked
  3578  001C06  0101               	movlb	1	; () banked
  3579  001C08  1F2D               	comf	((___almod@dividend+3))&0ffh
  3580  001C0A  0101               	movlb	1	; () banked
  3581  001C0C  1F2C               	comf	((___almod@dividend+2))&0ffh
  3582  001C0E  0101               	movlb	1	; () banked
  3583  001C10  1F2B               	comf	((___almod@dividend+1))&0ffh
  3584  001C12  0101               	movlb	1	; () banked
  3585  001C14  6D2A               	negf	((___almod@dividend))&0ffh
  3586  001C16  0E00               	movlw	0
  3587  001C18  0101               	movlb	1	; () banked
  3588  001C1A  232B               	addwfc	((___almod@dividend+1))&0ffh
  3589  001C1C  0101               	movlb	1	; () banked
  3590  001C1E  232C               	addwfc	((___almod@dividend+2))&0ffh
  3591  001C20  0101               	movlb	1	; () banked
  3592  001C22  232D               	addwfc	((___almod@dividend+3))&0ffh
  3593                           	
  3594  001C24                     l294:		; BSR set to: ?
  3595                           
  3596                           	line	29
  3597  001C24  C12A  F12A         	movff	(___almod@dividend),(?___almod)
  3598  001C28  C12B  F12B         	movff	(___almod@dividend+1),(?___almod+1)
  3599  001C2C  C12C  F12C         	movff	(___almod@dividend+2),(?___almod+2)
  3600  001C30  C12D  F12D         	movff	(___almod@dividend+3),(?___almod+3)
  3601  001C34  D000               	goto	l283
  3602                           	line	30
  3603  001C36                     l283:
  3604                           			; BSR set to: ?
  3605                           
  3606  001C36  0012               	return
  3607                           	opt stack 0
  3608                           GLOBAL __end_of___almod
  3609  001C38                     	__end_of___almod:
  3610                           	FNSIZE	___almod,3,8
  3611                           ; =============== function ___almod ends =======
                                 =====
  3612                           
  3613                           	signat	___almod,8316
  3614                           	global	___aldiv
  3615                           	global	??___aldiv
  3616                           	global	?___aldiv
  3617                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  3618                           
  3619                           	opt lm
  3620                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\aldiv.c"
  3621                           	line	5
  3622  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3623                           	
  3624  0018EC                     ___aldiv:		; BSR set to: ?
  3625                           
  3626                           	opt stack 26
  3627                           	line	9
  3628  0018EC  0101               	movlb	1	; () banked
  3629  0018EE  6F38               	movwf	(??___aldiv+6+0)&0ffh
  3630  0018F0  0E00               	movlw	low(0)
  3631  0018F2  0101               	movlb	1	; () banked
  3632  0018F4  0101               	movlb	1	; () banked
  3633  0018F6  6F33               	movwf	((___aldiv@sign))&0ffh
  3634  0018F8  0101               	movlb	1	; () banked
  3635  0018FA  5138               	movf	(??___aldiv+6+0)&0ffh,w
  3636                           	line	10
  3637  0018FC  0101               	movlb	1	; () banked
  3638  0018FE  0101               	movlb	1	; () banked
  3639  001900  AF31               	btfss	((___aldiv@divisor+3))&0ffh,7
  3640  001902  D001               	goto	u3411
  3641  001904  D001               	goto	u3410
  3642  001906                     u3411:
  3643  001906  D018               	goto	l272
  3644  001908                     u3410:
  3645                           	line	11
  3646  001908  0101               	movlb	1	; () banked
  3647  00190A  0101               	movlb	1	; () banked
  3648  00190C  1F31               	comf	((___aldiv@divisor+3))&0ffh
  3649  00190E  0101               	movlb	1	; () banked
  3650  001910  1F30               	comf	((___aldiv@divisor+2))&0ffh
  3651  001912  0101               	movlb	1	; () banked
  3652  001914  1F2F               	comf	((___aldiv@divisor+1))&0ffh
  3653  001916  0101               	movlb	1	; () banked
  3654  001918  6D2E               	negf	((___aldiv@divisor))&0ffh
  3655  00191A  0E00               	movlw	0
  3656  00191C  0101               	movlb	1	; () banked
  3657  00191E  232F               	addwfc	((___aldiv@divisor+1))&0ffh
  3658  001920  0101               	movlb	1	; () banked
  3659  001922  2330               	addwfc	((___aldiv@divisor+2))&0ffh
  3660  001924  0101               	movlb	1	; () banked
  3661  001926  2331               	addwfc	((___aldiv@divisor+3))&0ffh
  3662                           	line	12
  3663  001928  0101               	movlb	1	; () banked
  3664  00192A  6F38               	movwf	(??___aldiv+6+0)&0ffh
  3665  00192C  0E01               	movlw	low(01h)
  3666  00192E  0101               	movlb	1	; () banked
  3667  001930  0101               	movlb	1	; () banked
  3668  001932  6F33               	movwf	((___aldiv@sign))&0ffh
  3669  001934  0101               	movlb	1	; () banked
  3670  001936  5138               	movf	(??___aldiv+6+0)&0ffh,w
  3671                           	line	13
  3672                           	
  3673  001938                     l272:		; BSR set to: ?
  3674                           
  3675                           	line	14
  3676  001938  0101               	movlb	1	; () banked
  3677  00193A  0101               	movlb	1	; () banked
  3678  00193C  AF2D               	btfss	((___aldiv@dividend+3))&0ffh,7
  3679  00193E  D001               	goto	u3421
  3680  001940  D001               	goto	u3420
  3681  001942                     u3421:
  3682  001942  D014               	goto	l273
  3683  001944                     u3420:
  3684                           	line	15
  3685  001944  0101               	movlb	1	; () banked
  3686  001946  0101               	movlb	1	; () banked
  3687  001948  1F2D               	comf	((___aldiv@dividend+3))&0ffh
  3688  00194A  0101               	movlb	1	; () banked
  3689  00194C  1F2C               	comf	((___aldiv@dividend+2))&0ffh
  3690  00194E  0101               	movlb	1	; () banked
  3691  001950  1F2B               	comf	((___aldiv@dividend+1))&0ffh
  3692  001952  0101               	movlb	1	; () banked
  3693  001954  6D2A               	negf	((___aldiv@dividend))&0ffh
  3694  001956  0E00               	movlw	0
  3695  001958  0101               	movlb	1	; () banked
  3696  00195A  232B               	addwfc	((___aldiv@dividend+1))&0ffh
  3697  00195C  0101               	movlb	1	; () banked
  3698  00195E  232C               	addwfc	((___aldiv@dividend+2))&0ffh
  3699  001960  0101               	movlb	1	; () banked
  3700  001962  232D               	addwfc	((___aldiv@dividend+3))&0ffh
  3701                           	line	16
  3702  001964  0E01               	movlw	(01h)&0ffh
  3703  001966  0101               	movlb	1	; () banked
  3704  001968  0101               	movlb	1	; () banked
  3705  00196A  1B33               	xorwf	((___aldiv@sign))&0ffh
  3706                           	line	17
  3707                           	
  3708  00196C                     l273:		; BSR set to: ?
  3709                           
  3710                           	line	18
  3711  00196C  0E00               	movlw	low(0)
  3712  00196E  0101               	movlb	1	; () banked
  3713  001970  0101               	movlb	1	; () banked
  3714  001972  6F34               	movwf	((___aldiv@quotient))&0ffh
  3715  001974  0E00               	movlw	high(0)
  3716  001976  0101               	movlb	1	; () banked
  3717  001978  6F35               	movwf	((___aldiv@quotient+1))&0ffh
  3718  00197A  0E00               	movlw	low highword(0)
  3719  00197C  0101               	movlb	1	; () banked
  3720  00197E  6F36               	movwf	((___aldiv@quotient+2))&0ffh
  3721  001980  0E00               	movlw	high highword(0)
  3722  001982  0101               	movlb	1	; () banked
  3723  001984  6F37               	movwf	((___aldiv@quotient+3))&0ffh
  3724                           	line	19
  3725  001986  0101               	movlb	1	; () banked
  3726  001988  5131               	movf	((___aldiv@divisor+3))&0ffh,w
  3727  00198A  112E               	iorwf ((___aldiv@divisor))&0ffh,w
  3728  00198C  112F               	iorwf ((___aldiv@divisor+1))&0ffh,w
  3729  00198E  1130               	iorwf ((___aldiv@divisor+2))&0ffh,w
  3730                           
  3731  001990  B4D8               	btfsc	status,2
  3732  001992  D001               	goto	u3431
  3733  001994  D001               	goto	u3430
  3734  001996                     u3431:
  3735  001996  D06B               	goto	l274
  3736  001998                     u3430:
  3737                           	line	20
  3738  001998  0101               	movlb	1	; () banked
  3739  00199A  6F38               	movwf	(??___aldiv+6+0)&0ffh
  3740  00199C  0E01               	movlw	low(01h)
  3741  00199E  0101               	movlb	1	; () banked
  3742  0019A0  0101               	movlb	1	; () banked
  3743  0019A2  6F32               	movwf	((___aldiv@counter))&0ffh
  3744  0019A4  0101               	movlb	1	; () banked
  3745  0019A6  5138               	movf	(??___aldiv+6+0)&0ffh,w
  3746                           	line	21
  3747  0019A8  D00D               	goto	l275
  3748                           	
  3749  0019AA                     l276:		; BSR set to: ?
  3750                           
  3751                           	line	22
  3752  0019AA  0101               	movlb	1	; () banked
  3753  0019AC  90D8               	bcf	status,0
  3754  0019AE  0101               	movlb	1	; () banked
  3755  0019B0  372E               	rlcf	((___aldiv@divisor))&0ffh
  3756  0019B2  0101               	movlb	1	; () banked
  3757  0019B4  372F               	rlcf	((___aldiv@divisor+1))&0ffh
  3758  0019B6  0101               	movlb	1	; () banked
  3759  0019B8  3730               	rlcf	((___aldiv@divisor+2))&0ffh
  3760  0019BA  0101               	movlb	1	; () banked
  3761  0019BC  3731               	rlcf	((___aldiv@divisor+3))&0ffh
  3762                           	line	23
  3763  0019BE  0101               	movlb	1	; () banked
  3764  0019C0  0101               	movlb	1	; () banked
  3765  0019C2  2B32               	incf	((___aldiv@counter))&0ffh
  3766                           	line	24
  3767                           	
  3768  0019C4                     l275:		; BSR set to: ?
  3769                           
  3770                           	line	21
  3771  0019C4  0101               	movlb	1	; () banked
  3772                           	
  3773  0019C6  0101               	movlb	1	; () banked
  3774  0019C8  AF31               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  3775  0019CA  D001               	goto	u3441
  3776  0019CC  D001               	goto	u3440
  3777  0019CE                     u3441:
  3778  0019CE  D7ED               	goto	l276
  3779  0019D0                     u3440:
  3780                           	
  3781  0019D0                     l277:		; BSR set to: ?
  3782                           
  3783                           	line	25
  3784                           	
  3785  0019D0                     l280:		; BSR set to: ?
  3786                           
  3787                           	line	26
  3788  0019D0  0101               	movlb	1	; () banked
  3789  0019D2  90D8               	bcf	status,0
  3790  0019D4  0101               	movlb	1	; () banked
  3791  0019D6  3734               	rlcf	((___aldiv@quotient))&0ffh
  3792  0019D8  0101               	movlb	1	; () banked
  3793  0019DA  3735               	rlcf	((___aldiv@quotient+1))&0ffh
  3794  0019DC  0101               	movlb	1	; () banked
  3795  0019DE  3736               	rlcf	((___aldiv@quotient+2))&0ffh
  3796  0019E0  0101               	movlb	1	; () banked
  3797  0019E2  3737               	rlcf	((___aldiv@quotient+3))&0ffh
  3798                           	line	27
  3799  0019E4  0101               	movlb	1	; () banked
  3800  0019E6  0101               	movlb	1	; () banked
  3801  0019E8  512E               	movf	((___aldiv@divisor))&0ffh,w
  3802  0019EA  0101               	movlb	1	; () banked
  3803  0019EC  0101               	movlb	1	; () banked
  3804  0019EE  5D2A               	subwf	((___aldiv@dividend))&0ffh,w
  3805  0019F0  0101               	movlb	1	; () banked
  3806  0019F2  0101               	movlb	1	; () banked
  3807  0019F4  512F               	movf	((___aldiv@divisor+1))&0ffh,w
  3808  0019F6  0101               	movlb	1	; () banked
  3809  0019F8  0101               	movlb	1	; () banked
  3810  0019FA  592B               	subwfb	((___aldiv@dividend+1))&0ffh,w
  3811  0019FC  0101               	movlb	1	; () banked
  3812  0019FE  0101               	movlb	1	; () banked
  3813  001A00  5130               	movf	((___aldiv@divisor+2))&0ffh,w
  3814  001A02  0101               	movlb	1	; () banked
  3815  001A04  0101               	movlb	1	; () banked
  3816  001A06  592C               	subwfb	((___aldiv@dividend+2))&0ffh,w
  3817  001A08  0101               	movlb	1	; () banked
  3818  001A0A  0101               	movlb	1	; () banked
  3819  001A0C  5131               	movf	((___aldiv@divisor+3))&0ffh,w
  3820  001A0E  0101               	movlb	1	; () banked
  3821  001A10  0101               	movlb	1	; () banked
  3822  001A12  592D               	subwfb	((___aldiv@dividend+3))&0ffh,w
  3823  001A14  A0D8               	btfss	status,0
  3824  001A16  D001               	goto	u3451
  3825  001A18  D001               	goto	u3450
  3826  001A1A                     u3451:
  3827  001A1A  D01B               	goto	l281
  3828  001A1C                     u3450:
  3829                           	line	28
  3830  001A1C  0101               	movlb	1	; () banked
  3831  001A1E  0101               	movlb	1	; () banked
  3832  001A20  512E               	movf	((___aldiv@divisor))&0ffh,w
  3833  001A22  0101               	movlb	1	; () banked
  3834  001A24  0101               	movlb	1	; () banked
  3835  001A26  5F2A               	subwf	((___aldiv@dividend))&0ffh
  3836  001A28  0101               	movlb	1	; () banked
  3837  001A2A  0101               	movlb	1	; () banked
  3838  001A2C  512F               	movf	((___aldiv@divisor+1))&0ffh,w
  3839  001A2E  0101               	movlb	1	; () banked
  3840  001A30  0101               	movlb	1	; () banked
  3841  001A32  5B2B               	subwfb	((___aldiv@dividend+1))&0ffh
  3842  001A34  0101               	movlb	1	; () banked
  3843  001A36  0101               	movlb	1	; () banked
  3844  001A38  5130               	movf	((___aldiv@divisor+2))&0ffh,w
  3845  001A3A  0101               	movlb	1	; () banked
  3846  001A3C  0101               	movlb	1	; () banked
  3847  001A3E  5B2C               	subwfb	((___aldiv@dividend+2))&0ffh
  3848  001A40  0101               	movlb	1	; () banked
  3849  001A42  0101               	movlb	1	; () banked
  3850  001A44  5131               	movf	((___aldiv@divisor+3))&0ffh,w
  3851  001A46  0101               	movlb	1	; () banked
  3852  001A48  0101               	movlb	1	; () banked
  3853  001A4A  5B2D               	subwfb	((___aldiv@dividend+3))&0ffh
  3854                           	line	29
  3855  001A4C  0101               	movlb	1	; () banked
  3856  001A4E  0101               	movlb	1	; () banked
  3857  001A50  8134               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  3858                           	line	30
  3859                           	
  3860  001A52                     l281:		; BSR set to: ?
  3861                           
  3862                           	line	31
  3863  001A52  0101               	movlb	1	; () banked
  3864  001A54  90D8               	bcf	status,0
  3865  001A56  0101               	movlb	1	; () banked
  3866  001A58  3331               	rrcf	((___aldiv@divisor+3))&0ffh
  3867  001A5A  0101               	movlb	1	; () banked
  3868  001A5C  3330               	rrcf	((___aldiv@divisor+2))&0ffh
  3869  001A5E  0101               	movlb	1	; () banked
  3870  001A60  332F               	rrcf	((___aldiv@divisor+1))&0ffh
  3871  001A62  0101               	movlb	1	; () banked
  3872  001A64  332E               	rrcf	((___aldiv@divisor))&0ffh
  3873                           	line	32
  3874  001A66  0101               	movlb	1	; () banked
  3875  001A68  0101               	movlb	1	; () banked
  3876  001A6A  2F32               	decfsz	((___aldiv@counter))&0ffh
  3877                           	
  3878  001A6C  D7B1               	goto	l280
  3879                           	
  3880  001A6E                     l279:		; BSR set to: ?
  3881                           
  3882                           	line	33
  3883                           	
  3884  001A6E                     l274:		; BSR set to: ?
  3885                           
  3886                           	line	34
  3887  001A6E  0101               	movlb	1	; () banked
  3888  001A70  0101               	movlb	1	; () banked
  3889  001A72  5133               	movf	((___aldiv@sign))&0ffh,w
  3890  001A74  B4D8               	btfsc	status,2
  3891  001A76  D001               	goto	u3461
  3892  001A78  D001               	goto	u3460
  3893  001A7A                     u3461:
  3894  001A7A  D010               	goto	l282
  3895  001A7C                     u3460:
  3896                           	line	35
  3897  001A7C  0101               	movlb	1	; () banked
  3898  001A7E  0101               	movlb	1	; () banked
  3899  001A80  1F37               	comf	((___aldiv@quotient+3))&0ffh
  3900  001A82  0101               	movlb	1	; () banked
  3901  001A84  1F36               	comf	((___aldiv@quotient+2))&0ffh
  3902  001A86  0101               	movlb	1	; () banked
  3903  001A88  1F35               	comf	((___aldiv@quotient+1))&0ffh
  3904  001A8A  0101               	movlb	1	; () banked
  3905  001A8C  6D34               	negf	((___aldiv@quotient))&0ffh
  3906  001A8E  0E00               	movlw	0
  3907  001A90  0101               	movlb	1	; () banked
  3908  001A92  2335               	addwfc	((___aldiv@quotient+1))&0ffh
  3909  001A94  0101               	movlb	1	; () banked
  3910  001A96  2336               	addwfc	((___aldiv@quotient+2))&0ffh
  3911  001A98  0101               	movlb	1	; () banked
  3912  001A9A  2337               	addwfc	((___aldiv@quotient+3))&0ffh
  3913                           	
  3914  001A9C                     l282:		; BSR set to: ?
  3915                           
  3916                           	line	36
  3917  001A9C  C134  F12A         	movff	(___aldiv@quotient),(?___aldiv)
  3918  001AA0  C135  F12B         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  3919  001AA4  C136  F12C         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  3920+ 001AA8  C137  F12D         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  3921+ 001AAC  D000               	goto	l271
  3922+                          	line	37
  3923+ 001AAE                     l271:
  3924+                          			; BSR set to: ?
  3925+                          
  3926+ 001AAE  0012               	return
  3927+                          	opt stack 0
  3928+                          GLOBAL __end_of___aldiv
  3929+ 001AB0                     	__end_of___aldiv:
  3930+                          	FNSIZE	___aldiv,7,8
  3931+                          ; =============== function ___aldiv ends =======
      +                          =====
  3932+                          
  3933+                          	signat	___aldiv,8316
  3934+                          	global	_LCD_Write
  3935+                          	global	??_LCD_Write
  3936+                          	global	?_LCD_Write
  3937+                                  psect   text14,class=CODE,space=0,reloc=
      +                          2
  3938+                          
  3939+                          	opt lm
  3940+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  3941+                          	line	62
  3942+ 000000                     	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD
      +                          _Write
  3943+                          ;lcd_portd.c: 61: void LCD_Write(unsigned char c
      +                          )
  3944+                          ;lcd_portd.c: 62: {
  3945+                          	
  3946+ 002658                     _LCD_Write:		; BSR set to: ?
  3947+                          
  3948+                          	opt stack 26
  3949+                          	line	63
  3950+ 002658  8483               	bsf	c:(31770/8),(31770)&7	;volatile
  3951+                          	line	64
  3952+                          ;lcd_portd.c: 64: PORTD = (PORTD & 0x0F) | (c & 
      +                          0xF0);
  3953+ 00265A  C12A  F12B         	movff	(LCD_Write@c),??_LCD_Write+0+0
  3954+ 00265E  0EF0               	movlw	0F0h
  3955+ 002660  0101               	movlb	1	; () banked
  3956+ 002662  172B               	andwf	(??_LCD_Write+0+0)&0ffh
  3957+ 002664  5083               	movf	((c:3971)),c,w	;volatile
  3958+ 002666  0B0F               	andlw	low(0Fh)
  3959+ 002668  0101               	movlb	1	; () banked
  3960+ 00266A  112B               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  3961+ 00266C  6E83               	movwf	((c:3971)),c	;volatile
  3962+                          	line	65
  3963+                          ;lcd_portd.c: 65: LCD_Strobe();
  3964+ 00266E  EC65  F013         	call	_LCD_Strobe	;wreg free
  3965+                          	line	66
  3966+                          ;lcd_portd.c: 66: PORTD = (PORTD & 0x0F) | ((c<<
      +                          4) & 0xF0);
  3967+ 002672  C12A  F12B         	movff	(LCD_Write@c),??_LCD_Write+0+0
  3968+ 002676  0101               	movlb	1	; () banked
  3969+ 002678  3B2B               	swapf	(??_LCD_Write+0+0)&0ffh
  3970+ 00267A  0EF0               	movlw	(0ffh shl 4) & 0ffh
  3971+ 00267C  172B               	andwf	(??_LCD_Write+0+0)&0ffh
  3972+ 00267E  0EF0               	movlw	0F0h
  3973+ 002680  0101               	movlb	1	; () banked
  3974+ 002682  172B               	andwf	(??_LCD_Write+0+0)&0ffh
  3975+ 002684  5083               	movf	((c:3971)),c,w	;volatile
  3976+ 002686  0B0F               	andlw	low(0Fh)
  3977+ 002688  0101               	movlb	1	; () banked
  3978+ 00268A  112B               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  3979+ 00268C  6E83               	movwf	((c:3971)),c	;volatile
  3980+                          	line	67
  3981+                          ;lcd_portd.c: 67: LCD_Strobe();
  3982+ 00268E  EC65  F013         	call	_LCD_Strobe	;wreg free
  3983+                          	line	69
  3984+                          ;lcd_portd.c: 69: }
  3985+ 002692                     l128:
  3986+                          			; BSR set to: ?
  3987+                          
  3988+ 002692  0012               	return
  3989+                          	opt stack 0
  3990+                          GLOBAL __end_of_LCD_Write
  3991+ 002694                     	__end_of_LCD_Write:
  3992+                          	FNSIZE	_LCD_Write,1,1
  3993+                          ; =============== function _LCD_Write ends =====
      +                          =======
  3994+                          
  3995+                          	signat	_LCD_Write,4216
  3996+                          	global	_LCD_Inst
  3997+                          	global	??_LCD_Inst
  3998+                          	global	?_LCD_Inst
  3999+                                  psect   text15,class=CODE,space=0,reloc=
      +                          2
  4000+                          
  4001+                          	opt lm
  4002+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  4003+                          	line	44
  4004+ 000000                     	__size_of_LCD_Inst	equ	__end_of_LCD_Inst-_LCD_I
      +                          nst
  4005+                          ;lcd_portd.c: 43: void LCD_Inst(unsigned char c)
  4006+                          ;lcd_portd.c: 44: {
  4007+                          	
  4008+ 0025BE                     _LCD_Inst:		; BSR set to: ?
  4009+                          
  4010+                          	opt stack 26
  4011+                          	line	45
  4012+                          ;lcd_portd.c: 45: RD2 = 0;
  4013+ 0025BE  9483               	bcf	c:(31770/8),(31770)&7	;volatile
  4014+                          	line	46
  4015+                          ;lcd_portd.c: 46: PORTD = (PORTD & 0x0F) | (c & 
      +                          0xF0);
  4016+ 0025C0  C11A  F11B         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  4017+ 0025C4  0EF0               	movlw	0F0h
  4018+ 0025C6  0101               	movlb	1	; () banked
  4019+ 0025C8  171B               	andwf	(??_LCD_Inst+0+0)&0ffh
  4020+ 0025CA  5083               	movf	((c:3971)),c,w	;volatile
  4021+ 0025CC  0B0F               	andlw	low(0Fh)
  4022+ 0025CE  0101               	movlb	1	; () banked
  4023+ 0025D0  111B               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  4024+ 0025D2  6E83               	movwf	((c:3971)),c	;volatile
  4025+                          	line	47
  4026+                          ;lcd_portd.c: 47: LCD_Strobe();
  4027+ 0025D4  EC65  F013         	call	_LCD_Strobe	;wreg free
  4028+                          	line	48
  4029+                          ;lcd_portd.c: 48: PORTD = (PORTD & 0x0F) | ((c<<
      +                          4) & 0xF0);
  4030+ 0025D8  C11A  F11B         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  4031+ 0025DC  0101               	movlb	1	; () banked
  4032+ 0025DE  3B1B               	swapf	(??_LCD_Inst+0+0)&0ffh
  4033+ 0025E0  0EF0               	movlw	(0ffh shl 4) & 0ffh
  4034+ 0025E2  171B               	andwf	(??_LCD_Inst+0+0)&0ffh
  4035+ 0025E4  0EF0               	movlw	0F0h
  4036+ 0025E6  0101               	movlb	1	; () banked
  4037+ 0025E8  171B               	andwf	(??_LCD_Inst+0+0)&0ffh
  4038+ 0025EA  5083               	movf	((c:3971)),c,w	;volatile
  4039+ 0025EC  0B0F               	andlw	low(0Fh)
  4040+ 0025EE  0101               	movlb	1	; () banked
  4041+ 0025F0  111B               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  4042+ 0025F2  6E83               	movwf	((c:3971)),c	;volatile
  4043+                          	line	49
  4044+                          ;lcd_portd.c: 49: LCD_Strobe();
  4045+ 0025F4  EC65  F013         	call	_LCD_Strobe	;wreg free
  4046+                          	line	50
  4047+                          ;lcd_portd.c: 50: Wait_ms(10);
  4048+ 0025F8  0E0A               	movlw	low(0Ah)
  4049+ 0025FA  0101               	movlb	1	; () banked
  4050+ 0025FC  0101               	movlb	1	; () banked
  4051+ 0025FE  6F1C               	movwf	((?_Wait_ms))&0ffh
  4052+ 002600  0E00               	movlw	high(0Ah)
  4053+ 002602  0101               	movlb	1	; () banked
  4054+ 002604  6F1D               	movwf	((?_Wait_ms+1))&0ffh
  4055+ 002606  EC6D  F012         	call	_Wait_ms	;wreg free
  4056+                          	line	51
  4057+                          ;lcd_portd.c: 51: }
  4058+ 00260A                     l122:
  4059+                          			; BSR set to: ?
  4060+                          
  4061+ 00260A  0012               	return
  4062+                          	opt stack 0
  4063+                          GLOBAL __end_of_LCD_Inst
  4064+ 00260C                     	__end_of_LCD_Inst:
  4065+                          	FNSIZE	_LCD_Inst,1,1
  4066+                          ; =============== function _LCD_Inst ends ======
      +                          ======
  4067+                          
  4068+                          	signat	_LCD_Inst,4216
  4069+                          	global	_Wait_ms
  4070+                          	global	??_Wait_ms
  4071+                          	global	?_Wait_ms
  4072+                                  psect   text16,class=CODE,space=0,reloc=
      +                          2
  4073+                          
  4074+                          	opt lm
  4075+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  4076+                          	line	16
  4077+ 000000                     	__size_of_Wait_ms	equ	__end_of_Wait_ms-_Wait_ms
  4078+                          ;lcd_portd.c: 15: void Wait_ms(unsigned int X)
  4079+                          ;lcd_portd.c: 16: {
  4080+                          	
  4081+ 0024DA                     _Wait_ms:		; BSR set to: ?
  4082+                          
  4083+                          	opt stack 25
  4084+                          	line	19
  4085+                          ;lcd_portd.c: 17: unsigned int i, j;
  4086+                          ;lcd_portd.c: 19: for (i=0; i<X; i++)
  4087+ 0024DA  0E00               	movlw	low(0)
  4088+ 0024DC  0101               	movlb	1	; () banked
  4089+ 0024DE  0101               	movlb	1	; () banked
  4090+ 0024E0  6F1E               	movwf	((Wait_ms@i))&0ffh
  4091+ 0024E2  0E00               	movlw	high(0)
  4092+ 0024E4  0101               	movlb	1	; () banked
  4093+ 0024E6  6F1F               	movwf	((Wait_ms@i+1))&0ffh
  4094+ 0024E8  D026               	goto	l113
  4095+                          	line	20
  4096+                          	
  4097+ 0024EA                     l110:		; BSR set to: ?
  4098+                          
  4099+                          ;lcd_portd.c: 20: for (j=0; j<617; j++);
  4100+ 0024EA  0E00               	movlw	low(0)
  4101+ 0024EC  0101               	movlb	1	; () banked
  4102+ 0024EE  0101               	movlb	1	; () banked
  4103+ 0024F0  6F20               	movwf	((Wait_ms@j))&0ffh
  4104+ 0024F2  0E00               	movlw	high(0)
  4105+ 0024F4  0101               	movlb	1	; () banked
  4106+ 0024F6  6F21               	movwf	((Wait_ms@j+1))&0ffh
  4107+ 0024F8  0E69               	movlw	069h
  4108+ 0024FA  0101               	movlb	1	; () banked
  4109+ 0024FC  0101               	movlb	1	; () banked
  4110+ 0024FE  5D20               	subwf	((Wait_ms@j))&0ffh,w
  4111+ 002500  0E02               	movlw	02h
  4112+ 002502  0101               	movlb	1	; () banked
  4113+ 002504  5921               	subwfb	((Wait_ms@j+1))&0ffh,w
  4114+ 002506  A0D8               	btfss	status,0
  4115+ 002508  D001               	goto	u3471
  4116+ 00250A  D001               	goto	u3470
  4117+ 00250C                     u3471:
  4118+ 00250C  D001               	goto	l114
  4119+ 00250E                     u3470:
  4120+ 00250E  D00F               	goto	l115
  4121+                          	
  4122+ 002510                     l114:		; BSR set to: ?
  4123+                          
  4124+ 002510  0101               	movlb	1	; () banked
  4125+ 002512  0101               	movlb	1	; () banked
  4126+ 002514  4B20               	infsnz	((Wait_ms@j))&0ffh
  4127+ 002516  2B21               	incf	((Wait_ms@j+1))&0ffh
  4128+ 002518  0E69               	movlw	069h
  4129+ 00251A  0101               	movlb	1	; () banked
  4130+ 00251C  0101               	movlb	1	; () banked
  4131+ 00251E  5D20               	subwf	((Wait_ms@j))&0ffh,w
  4132+ 002520  0E02               	movlw	02h
  4133+ 002522  0101               	movlb	1	; () banked
  4134+ 002524  5921               	subwfb	((Wait_ms@j+1))&0ffh,w
  4135+ 002526  A0D8               	btfss	status,0
  4136+ 002528  D001               	goto	u3481
  4137+ 00252A  D001               	goto	u3480
  4138+ 00252C                     u3481:
  4139+ 00252C  D7F1               	goto	l114
  4140+ 00252E                     u3480:
  4141+                          	
  4142+ 00252E                     l115:		; BSR set to: ?
  4143+                          
  4144+                          	line	19
  4145+ 00252E  0101               	movlb	1	; () banked
  4146+ 002530  0101               	movlb	1	; () banked
  4147+ 002532  4B1E               	infsnz	((Wait_ms@i))&0ffh
  4148+ 002534  2B1F               	incf	((Wait_ms@i+1))&0ffh
  4149+                          	
  4150+ 002536                     l113:		; BSR set to: ?
  4151+                          
  4152+ 002536  0101               	movlb	1	; () banked
  4153+ 002538  0101               	movlb	1	; () banked
  4154+ 00253A  511C               	movf	((Wait_ms@X))&0ffh,w
  4155+ 00253C  0101               	movlb	1	; () banked
  4156+ 00253E  0101               	movlb	1	; () banked
  4157+ 002540  5D1E               	subwf	((Wait_ms@i))&0ffh,w
  4158+ 002542  0101               	movlb	1	; () banked
  4159+ 002544  0101               	movlb	1	; () banked
  4160+ 002546  511D               	movf	((Wait_ms@X+1))&0ffh,w
  4161+ 002548  0101               	movlb	1	; () banked
  4162+ 00254A  0101               	movlb	1	; () banked
  4163+ 00254C  591F               	subwfb	((Wait_ms@i+1))&0ffh,w
  4164+ 00254E  A0D8               	btfss	status,0
  4165+ 002550  D001               	goto	u3491
  4166+ 002552  D001               	goto	u3490
  4167+ 002554                     u3491:
  4168+ 002554  D7CA               	goto	l110
  4169+ 002556                     u3490:
  4170+                          	
  4171+ 002556                     l111:		; BSR set to: ?
  4172+                          
  4173+                          	line	21
  4174+                          ;lcd_portd.c: 21: }
  4175+ 002556                     l109:
  4176+                          			; BSR set to: ?
  4177+                          
  4178+ 002556  0012               	return
  4179+                          	opt stack 0
  4180+                          GLOBAL __end_of_Wait_ms
  4181+ 002558                     	__end_of_Wait_ms:
  4182+                          	FNSIZE	_Wait_ms,4,2
  4183+                          ; =============== function _Wait_ms ends =======
      +                          =====
  4184+                          
  4185+                          	signat	_Wait_ms,4216
  4186+                          	global	_LCD_Strobe
  4187+                          	global	??_LCD_Strobe
  4188+                          	global	?_LCD_Strobe
  4189+                                  psect   text17,class=CODE,space=0,reloc=
      +                          2
  4190+                          
  4191+                          	opt lm
  4192+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  4193+                          	line	32
  4194+ 000000                     	__size_of_LCD_Strobe	equ	__end_of_LCD_Strobe-_L
      +                          CD_Strobe
  4195+                          ;lcd_portd.c: 31: void LCD_Strobe(void)
  4196+                          ;lcd_portd.c: 32: {
  4197+                          	
  4198+ 0026CA                     _LCD_Strobe:		; BSR set to: ?
  4199+                          
  4200+                          	opt stack 25
  4201+                          	line	33
  4202+                          ;lcd_portd.c: 33: RD3 = 0;
  4203+ 0026CA  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  4204+                          	line	34
  4205+                          ;lcd_portd.c: 34: LCD_Pause();
  4206+ 0026CC  EC4A  F013         	call	_LCD_Pause	;wreg free
  4207+                          	line	35
  4208+                          ;lcd_portd.c: 35: RD3 = 1;
  4209+ 0026D0  8683               	bsf	c:(31771/8),(31771)&7	;volatile
  4210+                          	line	36
  4211+                          ;lcd_portd.c: 36: LCD_Pause();
  4212+ 0026D2  EC4A  F013         	call	_LCD_Pause	;wreg free
  4213+                          	line	37
  4214+                          ;lcd_portd.c: 37: RD3 = 0;
  4215+ 0026D6  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  4216+                          	line	38
  4217+                          ;lcd_portd.c: 38: LCD_Pause();
  4218+ 0026D8  EC4A  F013         	call	_LCD_Pause	;wreg free
  4219+                          	line	39
  4220+                          ;lcd_portd.c: 39: }
  4221+ 0026DC                     l121:
  4222+                          			; BSR set to: ?
  4223+                          
  4224+ 0026DC  0012               	return
  4225+                          	opt stack 0
  4226+                          GLOBAL __end_of_LCD_Strobe
  4227+ 0026DE                     	__end_of_LCD_Strobe:
  4228+                          	FNSIZE	_LCD_Strobe,0,0
  4229+                          ; =============== function _LCD_Strobe ends ====
      +                          ========
  4230+                          
  4231+                          	signat	_LCD_Strobe,88
  4232+                          	global	_LCD_Pause
  4233+                          	global	??_LCD_Pause
  4234+                          	global	?_LCD_Pause
  4235+                                  psect   text18,class=CODE,space=0,reloc=
      +                          2
  4236+                          
  4237+                          	opt lm
  4238+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\lcd_portd.c"
  4239+                          	line	25
  4240+ 000000                     	__size_of_LCD_Pause	equ	__end_of_LCD_Pause-_LCD
      +                          _Pause
  4241+                          ;lcd_portd.c: 24: void LCD_Pause(void)
  4242+                          ;lcd_portd.c: 25: {
  4243+                          	
  4244+ 002694                     _LCD_Pause:		; BSR set to: ?
  4245+                          
  4246+                          	opt stack 24
  4247+                          	line	27
  4248+                          ;lcd_portd.c: 26: unsigned char x;
  4249+                          ;lcd_portd.c: 27: for (x=0; x<20; x++);
  4250+ 002694  0101               	movlb	1	; () banked
  4251+ 002696  6F2D               	movwf	(??_LCD_Pause+1+0)&0ffh
  4252+ 002698  0E00               	movlw	low(0)
  4253+ 00269A  0101               	movlb	1	; () banked
  4254+ 00269C  0101               	movlb	1	; () banked
  4255+ 00269E  6F2C               	movwf	((LCD_Pause@x))&0ffh
  4256+ 0026A0  0101               	movlb	1	; () banked
  4257+ 0026A2  512D               	movf	(??_LCD_Pause+1+0)&0ffh,w
  4258+ 0026A4  0E13               	movlw	(014h-1)
  4259+ 0026A6  0101               	movlb	1	; () banked
  4260+ 0026A8  0101               	movlb	1	; () banked
  4261+ 0026AA  652C               	cpfsgt	((LCD_Pause@x))&0ffh
  4262+ 0026AC  D001               	goto	u3541
  4263+ 0026AE  D001               	goto	u3540
  4264+ 0026B0                     u3541:
  4265+ 0026B0  D001               	goto	l118
  4266+ 0026B2                     u3540:
  4267+ 0026B2  D00A               	goto	l119
  4268+                          	
  4269+ 0026B4                     l118:		; BSR set to: ?
  4270+                          
  4271+ 0026B4  0101               	movlb	1	; () banked
  4272+ 0026B6  0101               	movlb	1	; () banked
  4273+ 0026B8  2B2C               	incf	((LCD_Pause@x))&0ffh
  4274+ 0026BA  0E13               	movlw	(014h-1)
  4275+ 0026BC  0101               	movlb	1	; () banked
  4276+ 0026BE  0101               	movlb	1	; () banked
  4277+ 0026C0  652C               	cpfsgt	((LCD_Pause@x))&0ffh
  4278+ 0026C2  D001               	goto	u3551
  4279+ 0026C4  D001               	goto	u3550
  4280+ 0026C6                     u3551:
  4281+ 0026C6  D7F6               	goto	l118
  4282+ 0026C8                     u3550:
  4283+                          	
  4284+ 0026C8                     l119:		; BSR set to: ?
  4285+                          
  4286+                          	line	28
  4287+                          ;lcd_portd.c: 28: }
  4288+ 0026C8                     l117:
  4289+                          			; BSR set to: ?
  4290+                          
  4291+ 0026C8  0012               	return
  4292+                          	opt stack 0
  4293+                          GLOBAL __end_of_LCD_Pause
  4294+ 0026CA                     	__end_of_LCD_Pause:
  4295+                          	FNSIZE	_LCD_Pause,2,0
  4296+                          ; =============== function _LCD_Pause ends =====
      +                          =======
  4297+                          
  4298+                          	signat	_LCD_Pause,88
  4299+                          	global	_IntServe
  4300+                          	global	??_IntServe
  4301+                          	global	?_IntServe
  4302+                                  psect   text19,class=CODE,space=0,reloc=
      +                          2
  4303+                          
  4304+                          	opt lm
  4305+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\Term Project\LockAnsSound.C"
  4306+                          	line	30
  4307+ 000000                     	__size_of_IntServe	equ	__end_of_IntServe-_IntSe
      +                          rve
  4308+                          ;LockAnsSound.C: 29: void interrupt IntServe(voi
      +                          d)
  4309+                          ;LockAnsSound.C: 30: {
  4310+                          	
  4311+ 0022CE                     _IntServe:		; BSR set to: ?
  4312+                          
  4313+ 0022CE  0006               	pop	; remove dummy address from shadow register
      +                           refresh
  4314+                          
  4315+                          	opt stack 31
  4316+                                  psect   intcode,class=CODE,space=0,reloc
      +                          =2
  4317+                          	global	int_func
  4318+ 000808                     int_func:
  4319+                                  psect   intcode
  4320+ 000808  CFFA F13B          	movff	pclat+0,??_IntServe+2
  4321+ 00080C  CFFB F13C          	movff	pclat+1,??_IntServe+3
  4322+ 000810  CFE9 F13D          	movff	fsr0l+0,??_IntServe+4
  4323+ 000814  ED67  F011         	call	_IntServe,f	;refresh shadow registers
  4324+                                  psect   text19
  4325+ 0022D0  CFEA F13E          	movff	fsr0h+0,??_IntServe+5
  4326+ 0022D4  CFE1 F13F          	movff	fsr1l+0,??_IntServe+6
  4327+ 0022D8  CFE2 F140          	movff	fsr1h+0,??_IntServe+7
  4328+ 0022DC  CFD9 F141          	movff	fsr2l+0,??_IntServe+8
  4329+ 0022E0  CFDA F142          	movff	fsr2h+0,??_IntServe+9
  4330+ 0022E4  CFF3 F143          	movff	prodl+0,??_IntServe+10
  4331+ 0022E8  CFF4 F144          	movff	prodh+0,??_IntServe+11
  4332+ 0022EC  CFF6 F145          	movff	tblptrl+0,??_IntServe+12
  4333+ 0022F0  CFF7 F146          	movff	tblptrh+0,??_IntServe+13
  4334+ 0022F4  CFF8 F147          	movff	tblptru+0,??_IntServe+14
  4335+                          	line	31
  4336+                          ;LockAnsSound.C: 31: if (TMR0IF) {
  4337+ 0022F8  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  4338+ 0022FA  D001               	goto	i2u2991
  4339+ 0022FC  D001               	goto	i2u2990
  4340+ 0022FE                     i2u2991:
  4341+ 0022FE  D015               	goto	i2l167
  4342+ 002300                     i2u2990:
  4343+                          	line	32
  4344+                          ;LockAnsSound.C: 32: TMR0 = -N0;
  4345+ 002300  C008 F139          	movff	(c:8),??_IntServe+0+0
  4346+ 002304  C009 F13A          	movff	(c:8+1),??_IntServe+0+0+1
  4347+ 002308  0101               	movlb	1	; () banked
  4348+ 00230A  1F39               	comf	(??_IntServe+0+0)&0ffh
  4349+ 00230C  1F3A               	comf	(??_IntServe+0+1)&0ffh
  4350+ 00230E  4B39               	infsnz	(??_IntServe+0+0)&0ffh
  4351+ 002310  2B3A               	incf	(??_IntServe+0+1)&0ffh
  4352+ 002312  C139  FFD6         	movff	??_IntServe+0+0,(c:4054)	;volatile
  4353+ 002316  C13A  FFD7         	movff	??_IntServe+0+1,(c:4054+1)	;volatile
  4354+                          	line	33
  4355+                          ;LockAnsSound.C: 33: if (PLAY1) RD0 = !RD0;
  4356+ 00231A  5007               	movf	((c:6+1)),c,w
  4357+ 00231C  1006               	iorwf ((c:6)),c,w
  4358+                          
  4359+ 00231E  B4D8               	btfsc	status,2
  4360+ 002320  D001               	goto	i2u3001
  4361+ 002322  D001               	goto	i2u3000
  4362+ 002324                     i2u3001:
  4363+ 002324  D001               	goto	i2l168
  4364+ 002326                     i2u3000:
  4365+ 002326  7083               	btg	c:(31768/8),(31768)&7	;volatile
  4366+                          	
  4367+ 002328                     i2l168:		; BSR set to: ?
  4368+                          
  4369+                          	line	34
  4370+                          ;LockAnsSound.C: 34: TMR0IF = 0;
  4371+ 002328  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  4372+                          	line	35
  4373+                          	
  4374+ 00232A                     i2l167:		; BSR set to: ?
  4375+                          
  4376+                          	line	36
  4377+                          ;LockAnsSound.C: 35: }
  4378+                          ;LockAnsSound.C: 36: if (TMR1IF) {
  4379+ 00232A  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  4380+ 00232C  D001               	goto	i2u3011
  4381+ 00232E  D001               	goto	i2u3010
  4382+ 002330                     i2u3011:
  4383+ 002330  D015               	goto	i2l169
  4384+ 002332                     i2u3010:
  4385+                          	line	37
  4386+                          ;LockAnsSound.C: 37: TMR1 = -N1;
  4387+ 002332  C00A F139          	movff	(c:10),??_IntServe+0+0
  4388+ 002336  C00B F13A          	movff	(c:10+1),??_IntServe+0+0+1
  4389+ 00233A  0101               	movlb	1	; () banked
  4390+ 00233C  1F39               	comf	(??_IntServe+0+0)&0ffh
  4391+ 00233E  1F3A               	comf	(??_IntServe+0+1)&0ffh
  4392+ 002340  4B39               	infsnz	(??_IntServe+0+0)&0ffh
  4393+ 002342  2B3A               	incf	(??_IntServe+0+1)&0ffh
  4394+ 002344  C139  FFCE         	movff	??_IntServe+0+0,(c:4046)	;volatile
  4395+ 002348  C13A  FFCF         	movff	??_IntServe+0+1,(c:4046+1)	;volatile
  4396+                          	line	38
  4397+                          ;LockAnsSound.C: 38: if (PLAY2) RD0 = !RD0;
  4398+ 00234C  5001               	movf	((c:0+1)),c,w
  4399+ 00234E  1000               	iorwf ((c:0)),c,w
  4400+                          
  4401+ 002350  B4D8               	btfsc	status,2
  4402+ 002352  D001               	goto	i2u3021
  4403+ 002354  D001               	goto	i2u3020
  4404+ 002356                     i2u3021:
  4405+ 002356  D001               	goto	i2l170
  4406+ 002358                     i2u3020:
  4407+ 002358  7083               	btg	c:(31768/8),(31768)&7	;volatile
  4408+                          	
  4409+ 00235A                     i2l170:		; BSR set to: ?
  4410+                          
  4411+                          	line	39
  4412+                          ;LockAnsSound.C: 39: TMR1IF = 0;
  4413+ 00235A  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  4414+                          	line	40
  4415+                          	
  4416+ 00235C                     i2l169:		; BSR set to: ?
  4417+                          
  4418+                          	line	41
  4419+                          ;LockAnsSound.C: 40: }
  4420+                          ;LockAnsSound.C: 41: if (TMR3IF) {
  4421+ 00235C  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  4422+ 00235E  D001               	goto	i2u3031
  4423+ 002360  D001               	goto	i2u3030
  4424+ 002362                     i2u3031:
  4425+ 002362  D015               	goto	i2l171
  4426+ 002364                     i2u3030:
  4427+                          	line	42
  4428+                          ;LockAnsSound.C: 42: TMR3 = -N2;
  4429+ 002364  C00C F139          	movff	(c:12),??_IntServe+0+0
  4430+ 002368  C00D F13A          	movff	(c:12+1),??_IntServe+0+0+1
  4431+ 00236C  0101               	movlb	1	; () banked
  4432+ 00236E  1F39               	comf	(??_IntServe+0+0)&0ffh
  4433+ 002370  1F3A               	comf	(??_IntServe+0+1)&0ffh
  4434+ 002372  4B39               	infsnz	(??_IntServe+0+0)&0ffh
  4435+ 002374  2B3A               	incf	(??_IntServe+0+1)&0ffh
  4436+ 002376  C139  FFB2         	movff	??_IntServe+0+0,(c:4018)	;volatile
  4437+ 00237A  C13A  FFB3         	movff	??_IntServe+0+1,(c:4018+1)	;volatile
  4438+                          	line	43
  4439+                          ;LockAnsSound.C: 43: if (PLAY3) RD0 = !RD0;
  4440+ 00237E  5003               	movf	((c:2+1)),c,w
  4441+ 002380  1002               	iorwf ((c:2)),c,w
  4442+                          
  4443+ 002382  B4D8               	btfsc	status,2
  4444+ 002384  D001               	goto	i2u3041
  4445+ 002386  D001               	goto	i2u3040
  4446+ 002388                     i2u3041:
  4447+ 002388  D001               	goto	i2l172
  4448+ 00238A                     i2u3040:
  4449+ 00238A  7083               	btg	c:(31768/8),(31768)&7	;volatile
  4450+                          	
  4451+ 00238C                     i2l172:		; BSR set to: ?
  4452+                          
  4453+                          	line	44
  4454+                          ;LockAnsSound.C: 44: TMR3IF = 0;
  4455+ 00238C  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  4456+                          	line	45
  4457+                          	
  4458+ 00238E                     i2l171:		; BSR set to: ?
  4459+                          
  4460+                          	line	46
  4461+                          ;LockAnsSound.C: 45: }
  4462+                          ;LockAnsSound.C: 46: }
  4463+ 00238E                     i2l166:
  4464+                          			; BSR set to: ?
  4465+                          
  4466+ 00238E  C147  FFF8         	movff	??_IntServe+14,tblptru+0
  4467+ 002392  C146  FFF7         	movff	??_IntServe+13,tblptrh+0
  4468+ 002396  C145  FFF6         	movff	??_IntServe+12,tblptrl+0
  4469+ 00239A  C144  FFF4         	movff	??_IntServe+11,prodh+0
  4470+ 00239E  C143  FFF3         	movff	??_IntServe+10,prodl+0
  4471+ 0023A2  C142  FFDA         	movff	??_IntServe+9,fsr2h+0
  4472+ 0023A6  C141  FFD9         	movff	??_IntServe+8,fsr2l+0
  4473+ 0023AA  C140  FFE2         	movff	??_IntServe+7,fsr1h+0
  4474+ 0023AE  C13F  FFE1         	movff	??_IntServe+6,fsr1l+0
  4475+ 0023B2  C13E  FFEA         	movff	??_IntServe+5,fsr0h+0
  4476+ 0023B6  C13D  FFE9         	movff	??_IntServe+4,fsr0l+0
  4477+ 0023BA  C13C  FFFB         	movff	??_IntServe+3,pclat+1
  4478+ 0023BE  C13B  FFFA         	movff	??_IntServe+2,pclat+0
  4479+ 0023C2  0011               	retfie f
  4480+                          	opt stack 0
  4481+                          GLOBAL __end_of_IntServe
  4482+ 0023C4                     	__end_of_IntServe:
  4483+                          	FNSIZE	_IntServe,15,0
  4484+                          ; =============== function _IntServe ends ======
      +                          ======
  4485+                          
  4486+                          	signat	_IntServe,88
  4487+                          	FNCALL	_main,_LCD_Init
  4488+                          	FNCALL	_main,_LCD_Move
  4489+                          	FNCALL	_main,_LCD_Write
  4490+                          	FNCALL	_main,_ReadKey
  4491+                          	FNCALL	_main,___wmul
  4492+                          	FNCALL	_main,_unlock
  4493+                          	FNCALL	_main,___awdiv
  4494+                          	FNCALL	_main,_LCD_Out
  4495+                          	FNCALL	_unlock,_LCD_Move
  4496+                          	FNCALL	_unlock,_LCD_Write
  4497+                          	FNCALL	_unlock,_playNote
  4498+                          	FNCALL	_unlock,_screenClear
  4499+                          	FNCALL	_unlock,_move
  4500+                          	FNCALL	_unlock,_Wait_ms
  4501+                          	FNCALL	_ReadKey,_GetKey
  4502+                          	FNCALL	_ReadKey,_Wait_ms
  4503+                          	FNCALL	_LCD_Init,_LCD_Inst
  4504+                          	FNCALL	_LCD_Init,_Wait_ms
  4505+                          	FNCALL	_move,_LCD_Move
  4506+                          	FNCALL	_move,_LCD_Out
  4507+                          	FNCALL	_move,_Wait_ms
  4508+                          	FNCALL	_screenClear,_LCD_Move
  4509+                          	FNCALL	_screenClear,_LCD_Write
  4510+                          	FNCALL	_playNote,_Wait_ms
  4511+                          	FNCALL	_LCD_Move,_LCD_Inst
  4512+                          	FNCALL	_LCD_Out,_LCD_Write
  4513+                          	FNCALL	_LCD_Out,___almod
  4514+                          	FNCALL	_LCD_Out,___aldiv
  4515+                          	FNCALL	_LCD_Write,_LCD_Strobe
  4516+                          	FNCALL	_LCD_Inst,_LCD_Strobe
  4517+                          	FNCALL	_LCD_Inst,_Wait_ms
  4518+                          	FNCALL	_LCD_Strobe,_LCD_Pause
  4519+                          	FNROOT	_main
  4520+                          	FNCALL	intlevel2,_IntServe
  4521+                          	global	intlevel2
  4522+                          	FNROOT	intlevel2
  4523+                          	global	_TABLE
  4524+                          	global	_TABLE
  4525+                                  psect   text20,class=CODE,space=0,reloc=
      +                          2
  4526+ 000000                     _TABLE  equ     14
  4527+                          
  4528+                          	opt lm
  4529+                          
  4530+                          	DABS	1,14,4	;_TABLE
  4531+                                  psect   idata,class=CODE,space=0
  4532+                          	line	20
  4533+                          
  4534+                          ;initializer for _TABLE
  4535+ 00106E  01                 	db	low(01h)
  4536+ 00106F  02                 	db	low(02h)
  4537+ 001070  04                 	db	low(04h)
  4538+ 001071  08                 	db	low(08h)
  4539+                                  psect   smallconst,class=SMALLCONST,spac
      +                          e=0,reloc=2
  4540+ 001000  00                 	db	0	;reserve
  4541+                          	global	_MSG0
  4542+                          	line	11
  4543+ 001001                     _MSG0:
  4544+ 001001  20                 	db	low(020h)
  4545+ 001002  20                 	db	low(020h)
  4546+ 001003  20                 	db	low(020h)
  4547+ 001004  20                 	db	low(020h)
  4548+ 001005  57                 	db	low(057h)
  4549+ 001006  72                 	db	low(072h)
  4550+ 001007  6F                 	db	low(06Fh)
  4551+ 001008  6E                 	db	low(06Eh)
  4552+ 001009  67                 	db	low(067h)
  4553+ 00100A  20                 	db	low(020h)
  4554+ 00100B  63                 	db	low(063h)
  4555+ 00100C  6F                 	db	low(06Fh)
  4556+ 00100D  64                 	db	low(064h)
  4557+ 00100E  65                 	db	low(065h)
  4558+ 00100F  20                 	db	low(020h)
  4559+ 001010  20                 	db	low(020h)
  4560+ 001011  20                 	db	low(020h)
  4561+ 001012  20                 	db	low(020h)
  4562+ 001013  20                 	db	low(020h)
  4563+ 001014  20                 	db	low(020h)
  4564+ 001015  00                 	db	low(0)
  4565+                          	global	_MSG1
  4566+                          	line	12
  4567+ 001016                     _MSG1:
  4568+ 001016  20                 	db	low(020h)
  4569+ 001017  20                 	db	low(020h)
  4570+ 001018  57                 	db	low(057h)
  4571+ 001019  4F                 	db	low(04Fh)
  4572+ 00101A  4D                 	db	low(04Dh)
  4573+ 00101B  50                 	db	low(050h)
  4574+ 00101C  20                 	db	low(020h)
  4575+ 00101D  57                 	db	low(057h)
  4576+ 00101E  4F                 	db	low(04Fh)
  4577+ 00101F  4D                 	db	low(04Dh)
  4578+ 001020  50                 	db	low(050h)
  4579+ 001021  20                 	db	low(020h)
  4580+ 001022  57                 	db	low(057h)
  4581+ 001023  4F                 	db	low(04Fh)
  4582+ 001024  4D                 	db	low(04Dh)
  4583+ 001025  50                 	db	low(050h)
  4584+ 001026  20                 	db	low(020h)
  4585+ 001027  20                 	db	low(020h)
  4586+ 001028  20                 	db	low(020h)
  4587+ 001029  20                 	db	low(020h)
  4588+ 00102A  00                 	db	low(0)
  4589+                          	global	_MSG2
  4590+                          	line	13
  4591+ 00102B                     _MSG2:
  4592+ 00102B  20                 	db	low(020h)
  4593+ 00102C  20                 	db	low(020h)
  4594+ 00102D  20                 	db	low(020h)
  4595+ 00102E  20                 	db	low(020h)
  4596+ 00102F  20                 	db	low(020h)
  4597+ 001030  20                 	db	low(020h)
  4598+ 001031  20                 	db	low(020h)
  4599+ 001032  59                 	db	low(059h)
  4600+ 001033  61                 	db	low(061h)
  4601+ 001034  79                 	db	low(079h)
  4602+ 001035  20                 	db	low(020h)
  4603+ 001036  20                 	db	low(020h)
  4604+ 001037  20                 	db	low(020h)
  4605+ 001038  20                 	db	low(020h)
  4606+ 001039  20                 	db	low(020h)
  4607+ 00103A  20                 	db	low(020h)
  4608+ 00103B  20                 	db	low(020h)
  4609+ 00103C  20                 	db	low(020h)
  4610+ 00103D  20                 	db	low(020h)
  4611+ 00103E  20                 	db	low(020h)
  4612+ 00103F  00                 	db	low(0)
  4613+                          	global	_MSG3
  4614+                          	line	14
  4615+ 001040                     _MSG3:
  4616+ 001040  20                 	db	low(020h)
  4617+ 001041  20                 	db	low(020h)
  4618+ 001042  20                 	db	low(020h)
  4619+ 001043  20                 	db	low(020h)
  4620+ 001044  55                 	db	low(055h)
  4621+ 001045  6E                 	db	low(06Eh)
  4622+ 001046  6C                 	db	low(06Ch)
  4623+ 001047  6F                 	db	low(06Fh)
  4624+ 001048  63                 	db	low(063h)
  4625+ 001049  6B                 	db	low(06Bh)
  4626+ 00104A  69                 	db	low(069h)
  4627+ 00104B  6E                 	db	low(06Eh)
  4628+ 00104C  67                 	db	low(067h)
  4629+ 00104D  20                 	db	low(020h)
  4630+ 00104E  20                 	db	low(020h)
  4631+ 00104F  20                 	db	low(020h)
  4632+ 001050  20                 	db	low(020h)
  4633+ 001051  20                 	db	low(020h)
  4634+ 001052  20                 	db	low(020h)
  4635+ 001053  20                 	db	low(020h)
  4636+ 001054  00                 	db	low(0)
  4637+                          	global	_MSGclear
  4638+                          	line	15
  4639+ 001055                     _MSGclear:
  4640+ 001055  20                 	db	low(020h)
  4641+ 001056  20                 	db	low(020h)
  4642+ 001057  20                 	db	low(020h)
  4643+ 001058  20                 	db	low(020h)
  4644+ 001059  20                 	db	low(020h)
  4645+ 00105A  20                 	db	low(020h)
  4646+ 00105B  20                 	db	low(020h)
  4647+ 00105C  20                 	db	low(020h)
  4648+ 00105D  20                 	db	low(020h)
  4649+ 00105E  20                 	db	low(020h)
  4650+ 00105F  20                 	db	low(020h)
  4651+ 001060  20                 	db	low(020h)
  4652+ 001061  20                 	db	low(020h)
  4653+ 001062  20                 	db	low(020h)
  4654+ 001063  20                 	db	low(020h)
  4655+ 001064  20                 	db	low(020h)
  4656+ 001065  20                 	db	low(020h)
  4657+ 001066  20                 	db	low(020h)
  4658+ 001067  20                 	db	low(020h)
  4659+ 001068  20                 	db	low(020h)
  4660+ 001069  00                 	db	low(0)
  4661+                          	global	_lockCode
  4662+                          	line	17
  4663+ 00106A                     _lockCode:
  4664+ 00106A  04D2               	dw	(04D2h)&0ffffh
  4665+                          	global	_MSG0
  4666+                          	global	_MSG1
  4667+                          	global	_MSG2
  4668+                          	global	_MSG3
  4669+                          	global	_MSGclear
  4670+                          	global	_lockCode
  4671+                          	global	_N0
  4672+                          	global	_N0
  4673+ 000000                     _N0  equ     8
  4674+                          
  4675+                          	DABS	1,8,2	;_N0
  4676+                          	global	_N1
  4677+                          	global	_N1
  4678+ 000000                     _N1  equ     10
  4679+                          
  4680+                          	DABS	1,10,2	;_N1
  4681+                          	global	_N2
  4682+                          	global	_N2
  4683+ 000000                     _N2  equ     12
  4684+                          
  4685+                          	DABS	1,12,2	;_N2
  4686+                          	global	_PLAY1
  4687+                          	global	_PLAY1
  4688+ 000000                     _PLAY1  equ     6
  4689+                          
  4690+                          	DABS	1,6,2	;_PLAY1
  4691+                          	global	_PLAY2
  4692+                          	global	_PLAY2
  4693+ 000000                     _PLAY2  equ     0
  4694+                          
  4695+                          	DABS	1,0,2	;_PLAY2
  4696+                          	global	_PLAY3
  4697+                          	global	_PLAY3
  4698+ 000000                     _PLAY3  equ     2
  4699+                          
  4700+                          	DABS	1,2,2	;_PLAY3
  4701+                          	global	_STEP
  4702+                          	global	_STEP
  4703+ 000000                     _STEP  equ     4
  4704+                          
  4705+                          	DABS	1,4,2	;_STEP
  4706+                          	global	_TMR0
  4707+ 000000                     _TMR0	equ	0xFD6
  4708+                          	global	_TMR1
  4709+ 000000                     _TMR1	equ	0xFCE
  4710+                          	global	_TMR3
  4711+ 000000                     _TMR3	equ	0xFB2
  4712+                          	global	_ADCON1
  4713+ 000000                     _ADCON1	equ	0xFC1
  4714+                          	global	_PORTA
  4715+ 000000                     _PORTA	equ	0xF80
  4716+                          	global	_PORTC
  4717+ 000000                     _PORTC	equ	0xF82
  4718+                          	global	_PORTD
  4719+ 000000                     _PORTD	equ	0xF83
  4720+                          	global	_T0CON
  4721+ 000000                     _T0CON	equ	0xFD5
  4722+                          	global	_T1CON
  4723+ 000000                     _T1CON	equ	0xFCD
  4724+                          	global	_T3CON
  4725+ 000000                     _T3CON	equ	0xFB1
  4726+                          	global	_TRISA
  4727+ 000000                     _TRISA	equ	0xF92
  4728+                          	global	_TRISB
  4729+ 000000                     _TRISB	equ	0xF93
  4730+                          	global	_TRISC
  4731+ 000000                     _TRISC	equ	0xF94
  4732+                          	global	_TRISD
  4733+ 000000                     _TRISD	equ	0xF95
  4734+                          	global	_TRISE
  4735+ 000000                     _TRISE	equ	0xF96
  4736+                          	global	_TXREG
  4737+ 000000                     _TXREG	equ	0xFAD
  4738+                          	global	_GIE
  4739+ 000000                     _GIE	equ	0x7F97
  4740+                          	global	_PEIE
  4741+ 000000                     _PEIE	equ	0x7F96
  4742+                          	global	_RB0
  4743+ 000000                     _RB0	equ	0x7C08
  4744+                          	global	_RB1
  4745+ 000000                     _RB1	equ	0x7C09
  4746+                          	global	_RB2
  4747+ 000000                     _RB2	equ	0x7C0A
  4748+                          	global	_RB3
  4749+ 000000                     _RB3	equ	0x7C0B
  4750+                          	global	_RB4
  4751+ 000000                     _RB4	equ	0x7C0C
  4752+                          	global	_RC3
  4753+ 000000                     _RC3	equ	0x7C13
  4754+                          	global	_RC4
  4755+ 000000                     _RC4	equ	0x7C14
  4756+                          	global	_RC5
  4757+ 000000                     _RC5	equ	0x7C15
  4758+                          	global	_RC6
  4759+ 000000                     _RC6	equ	0x7C16
  4760+                          	global	_RD0
  4761+ 000000                     _RD0	equ	0x7C18
  4762+                          	global	_RD1
  4763+ 000000                     _RD1	equ	0x7C19
  4764+                          	global	_RD2
  4765+ 000000                     _RD2	equ	0x7C1A
  4766+                          	global	_RD3
  4767+ 000000                     _RD3	equ	0x7C1B
  4768+                          	global	_T0CS
  4769+ 000000                     _T0CS	equ	0x7EAD
  4770+                          	global	_TMR0IE
  4771+ 000000                     _TMR0IE	equ	0x7F95
  4772+                          	global	_TMR0IF
  4773+ 000000                     _TMR0IF	equ	0x7F92
  4774+                          	global	_TMR0IP
  4775+ 000000                     _TMR0IP	equ	0x7F8A
  4776+                          	global	_TMR0ON
  4777+ 000000                     _TMR0ON	equ	0x7EAF
  4778+                          	global	_TMR1CS
  4779+ 000000                     _TMR1CS	equ	0x7E69
  4780+                          	global	_TMR1IE
  4781+ 000000                     _TMR1IE	equ	0x7CE8
  4782+                          	global	_TMR1IF
  4783+ 000000                     _TMR1IF	equ	0x7CF0
  4784+                          	global	_TMR1IP
  4785+ 000000                     _TMR1IP	equ	0x7CF8
  4786+                          	global	_TMR1ON
  4787+ 000000                     _TMR1ON	equ	0x7E68
  4788+                          	global	_TMR3CS
  4789+ 000000                     _TMR3CS	equ	0x7D89
  4790+                          	global	_TMR3IE
  4791+ 000000                     _TMR3IE	equ	0x7D01
  4792+                          	global	_TMR3IF
  4793+ 000000                     _TMR3IF	equ	0x7D09
  4794+                          	global	_TMR3IP
  4795+ 000000                     _TMR3IP	equ	0x7D11
  4796+                          	global	_TMR3ON
  4797+ 000000                     _TMR3ON	equ	0x7D88
  4798+                          	global	_TRMT
  4799+ 000000                     _TRMT	equ	0x7D61
  4800+ 00106C  00                 	db 0	; dummy byte at the end
  4801+                          	psect	intsave_regs,class=BIGRAM,space=1
  4802+                          	PSECT	param1,class=BANK1,space=1
  4803+                          	GLOBAL	__Lparam1
  4804+                          	FNCONF	param1,??,?
  4805+                          	GLOBAL	__Labsbss0
  4806+ 000000                     __Labsbss0	EQU	0
  4807+                          	GLOBAL	__Habsbss0
  4808+ 000000                     __Habsbss0	EQU	14
  4809+                          	GLOBAL	__Ldata0
  4810+ 000000                     __Ldata0	EQU	14
  4811+                          	GLOBAL	__Hdata0
  4812+ 000000                     __Hdata0	EQU	18
  4813+                          GLOBAL	__Lparam, __Hparam
  4814+                          GLOBAL	__Lparam1, __Hparam1
  4815+ 000000                     __Lparam	EQU	__Lparam1
  4816+ 000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Wed Dec 18 06:24:36 2024

                  _N0 000008                    _N1 00000A  
                  _N2 00000C          ___awdiv@sign 0111  
 ___wmul@multiplicand 010E           ?_LCD_Strobe 012C  
                 l110 24EA                   l111 2556  
                 l200 2656                   l121 26DC  
                 l113 2536                   l114 2510  
                 l122 260A                   l130 1F46  
                 l202 2624                   l115 252E  
                 l131 1E02                   l123 24D8  
                 l211 1D0C                   l203 260C  
                 l132 1E16                   l124 2474  
                 l212 1D4C                   l220 20A4  
                 l117 26C8                   l109 2556  
                 l133 1E36                   l125 2494  
                 l221 1F6C                   l205 263C  
                 l118 26B4                   l134 1ED2  
                 l126 24B6                   l214 22CC  
                 l222 1F90                   l310 2146  
                 l206 2624                   l230 11D2  
                 l119 26C8                   l127 24D8  
                 l215 223C                   l207 1DBE  
                 l223 1FAC                   l311 2134  
                 l128 2692                   l136 1EE4  
                 l216 22CA                   l208 1C82  
                 l312 2152                   l224 1388  
                 l232 1328                   l137 1F46  
                 l209 1CC2                   l217 20A6  
                 l129 2454                   l233 1242  
                 l225 11F6                   l241 1652  
                 l218 20A2                   l306 21D6  
                 l314 21B0                   l234 1284  
                 l226 1102                   l242 149C  
                 l139 1F0A                   l219 1F48  
                 l315 2152                   l307 20E2  
                 l227 1144                   l180 170E  
                 l316 219C                   l308 2104  
                 l236 12D0                   l244 1506  
                 l173 18EA                   l181 173A  
                 l317 21CC                   l309 21B0  
                 l237 1312                   l229 1190  
                 l245 154A                   l182 175A  
                 l174 168E                   l246 157E  
                 l271 1AAE                   l191 181E  
                 l175 16AE                   l239 1386  
                 l280 19D0                   l272 1938  
                 l192 1836                   l184 1772  
                 l281 1A52                   l273 196C  
                 l193 184E                   l185 178A  
                 l177 16C6                   l282 1A9C  
                 l274 1A6E                   l194 1866  
                 l186 17A2                   l178 16DE  
                 l275 19C4                   l283 1C36  
                 l291 1BF6                   l195 187E  
                 l187 17BA                   l179 16F6  
                 l276 19AA                   l292 1B72  
                 l284 1AFC                   l196 1896  
                 l188 17E6                   l277 19D0  
                 l293 1BDA                   l285 1B28  
                 l197 18AE                   l189 1806  
                 l294 1C24                   l286 1BF6  
                 l198 18C6                   l279 1A6E  
                 l287 1B66                   l199 18DE  
                 l288 1B4C                   l289 1B72  
                 l580 25B2                   l581 2566  
                 l582 258A                   l578 25BC  
                 _GIE 007F97                   _RB0 007C08  
                 _RB1 007C09                   _RB2 007C0A  
                 _RB3 007C0B                   _RD0 007C18  
                 _RB4 007C0C                   _RD1 007C19  
                 _RC3 007C13                   _RD2 007C1A  
                 _RC4 007C14                   _RD3 007C1B  
                 _RC5 007C15                   _RC6 007C16  
     __end_of_LCD_Out 1F48                  _T0CS 007EAD  
                u1100 168C                  u1101 168A  
                u1110 16AE                  u1111 16AC  
                u1200 1792                  u1120 16B6  
                u1201 1790                  u1121 16B4  
                u1210 17AA                  u1130 16CE  
                u1211 17A8                  u1131 16CC  
                u1300 189E                  u1220 17E4  
                u1140 16E6                  u1301 189C  
                u1221 17E2                  u1141 16E4  
                u1310 18B6                  u1230 1806  
                u1150 16FE                  u1311 18B4  
                u1231 1804                  u1151 16FC  
                u1320 18CE                  u1240 180E  
                u1160 1738                  u1321 18CC  
                u1241 180C                  u1161 1736  
                u1250 1826                  u1170 175A  
                u1251 1824                  u1171 1758  
                u1260 183E                  u1180 1762  
                u3100 1144                  u1261 183C  
                u1181 1760                  u3101 1142  
                u1270 1856                  u1190 177A  
                u3110 118E                  u1271 1854  
                u1191 1778                  u3111 118C  
                u1280 186E                  u3120 11D2  
                u2400 25B2                  u3200 155C  
                u1281 186C                  u3121 11D0  
                u2401 25B0                  u3201 155A  
                u3210 1DCC                  u1290 1886  
                u3050 1F60                  u3130 1240  
                u3211 1DCA                  u1291 1884  
                u3051 1F5E                  u3131 123E  
                u3220 1E34                  u3300 24C6  
                u3060 1F84                  u1700 20EE  
                u3140 1284                  u3221 1E32  
                u3301 24C4                  u3061 1F82  
                u1701 20EC                  u3141 1282  
                u3230 1ED2                  u3310 1C80  
                u3070 1FAA                  u1710 2122  
                u3150 12CE                  u3231 1ED0  
                u3311 1C7E                  u3071 1FA8  
                u1711 2120                  u3151 12CC  
                u3400 1C04                  u3240 1EE2  
                u3320 1CC2                  u1720 2152  
                u3160 1312                  u3080 10B6  
                u3401 1C02                  u3241 1EE0  
                u3321 1CC0                  u1721 2150  
                u3161 1310                  u3081 10B4  
                u3410 1908                  u3250 1EF6  
                u3330 1D0A                  u1730 217E  
                u3170 135E                  u3090 1100  
                u3411 1906                  u3251 1EF4  
                u3331 1D08                  u3075 1FA2  
                u1731 217C                  u3171 135C  
                u3091 10FE                  u3420 1944  
                u3260 1F46                  u3340 1D4C  
                u1740 21BE                  u3500 2624  
                u3180 14CA                  u3421 1942  
                u3261 1F44                  u3341 1D4A  
                u1741 21BC                  u3501 2622  
                u3085 10AE                  u3181 14C8  
                u3430 1998                  u3350 1ACC  
                u3270 2462                  u3510 263C  
                u2390 2572                  u3190 1518  
                u3431 1996                  u3351 1ACA  
                u3271 2460                  u3511 263A  
                u3175 1356                  u2391 2570  
                u3191 1516                  u3440 19D0  
                u3360 1B08                  u3280 2482  
                u3520 21E8                  u3441 19CE  
                u3361 1B06                  u3281 2480  
                u3521 21E6                  u3450 1A1C  
                u3370 1B3A                  u3290 24A4  
                u3530 224C                  u1690 20C4  
                u3451 1A1A                  u3371 1B38  
                u3291 24A2                  u3531 224A  
                u1691 20C2                  u3540 26B2  
                u3460 1A7C                  u3380 1B72  
                u3541 26B0                  u3461 1A7A  
                u3381 1B70                  u3550 26C8  
                u3470 250E                  u3390 1BAA  
                u3551 26C6                  u3471 250C  
                u3391 1BA8                  u3480 252E  
                u3481 252C                  u3490 2556  
                _PEIE 007F96                  u3491 2554  
                _MSG0 1001                  _MSG1 1016  
                _MSG2 102B                  _MSG3 1040  
                _TMR0 000FD6                  _TMR1 000FCE  
                _TMR3 000FB2                  _STEP 000004  
                _TRMT 007D61                  _main 138A  
                _move 1F48                  fsr0h 000FEA  
                fsr1h 000FE2                  indf0 000FEF  
                fsr0l 000FE9                  fsr2h 000FDA  
                fsr1l 000FE1                  fsr2l 000FD9  
                pclat 000FFA                  prodh 000FF4  
                prodl 000FF3                  start 0818  
     __end_of_ReadKey 2658           LCD_Out@DATA 0118  
         LCD_Move@Col 0119           LCD_Move@Row 0118  
    __end_of_LCD_Init 2456      __end_of_LCD_Inst 260C  
    __end_of_LCD_Move 24DA       __end_of_Wait_ms 2558  
     __end_of___aldiv 1AB0       __end_of___almod 1C38  
               ?_main 0100       __end_of___awdiv 21D8  
               ?_move 0114                 _T0CON 000FD5  
     ___awdiv@divisor 010E                 _T1CON 000FCD  
               _T3CON 000FB1                 i2l170 235A  
               i2l171 238E                 i2l172 238C  
               i2l166 238E                 i2l167 232A  
               i2l168 2328                 i2l169 235C  
               _TABLE 00000E       ___awdiv@counter 0110  
               _PLAY1 000006                 _PLAY2 000000  
               _PLAY3 000002                 _PORTA 000F80  
               _PORTC 000F82                 _PORTD 000F83  
               _TRISA 000F92                 _TRISB 000F93  
               _TRISC 000F94                 _TRISD 000F95  
               _TRISE 000F96                 _TXREG 000FAD  
               main@T 0100                 main@X 0108  
               main@Y 0106                 main@Z 0102  
               tablat 000FF5                 status 000FD8  
        __end_of_main 1658          __end_of_move 20A8  
    __end_of_IntServe 23C4                ??_main 0100  
              ??_move 0116         __activetblptr 000003  
   __end_of_LCD_Pause 26CA             ??_LCD_Out 011E  
   __end_of_LCD_Write 2694                _ADCON1 000FC1  
        ?_screenClear 0114      ___awdiv@dividend 010C  
              i2u3000 2326                i2u3001 2324  
              i2u3010 2332                i2u3011 2330  
              i2u3020 2358                i2u3021 2356  
              i2u3030 2364                i2u3031 2362  
              i2u3040 238A                i2u3041 2388  
              i2u2990 2300                i2u2991 22FE  
              _TMR0IE 007F95                _TMR0IF 007F92  
              _TMR1IE 007CE8                _TMR1IF 007CF0  
              _TMR1CS 007E69                _TMR0IP 007F8A  
              _TMR3IE 007D01                _TMR3IF 007D09  
              _TMR3CS 007D89                _TMR1IP 007CF8  
              _TMR0ON 007EAF                _TMR3IP 007D11  
              _TMR1ON 007E68                _TMR3ON 007D88  
           ??_ReadKey 010C                _GetKey 1658  
              __Ldata 00000E             ??_Wait_ms 011E  
           ??___aldiv 0132             ??___almod 0132  
              ___wmul 2558             ??___awdiv 0110  
    ___awdiv@quotient 0112                _unlock 1072  
    __end_of_playNote 22CE          __mediumconst 106E  
              tblptrh 000FF7                tblptrl 000FF6  
              tblptru 000FF8            __accesstop 0080  
           ?_LCD_Init 010C             ?_LCD_Inst 011A  
           ?_LCD_Move 0118             LCD_Inst@c 011A  
        ??_LCD_Strobe 012C             ?_IntServe 0139  
          ??_LCD_Init 010C            ??_LCD_Inst 011B  
          ??_LCD_Move 011A    __end_of_LCD_Strobe 26DE  
             ?_GetKey 010E               ?___wmul 010C  
             ?_unlock 010C               _LCD_Out 1DC0  
             GetKey@i 010F            ??_IntServe 0139  
             _ReadKey 260C               __Hdata0 000012  
             __Ldata0 00000E             ?_playNote 0114  
             __Hparam 0148               __Lparam 0100  
             _Wait_ms 24DA               ___aldiv 18EC  
             ___almod 1AB0               ___awdiv 20A8  
             __ramtop 1000      ___aldiv@dividend 012A  
           _LCD_Pause 2694             _LCD_Write 2658  
       __Lmediumconst 106E               int_func 0808  
             move@REF 0114            ??_playNote 0116  
    ___aldiv@quotient 0134               unlock@i 0110  
          ?_LCD_Pause 012C            ?_LCD_Write 012A  
      __end_of_GetKey 18EC            LCD_Pause@x 012C  
      __end_of___wmul 25BE            LCD_Write@c 012A  
      __end_of_unlock 138A             __Habsbss0 00000E  
           __Labsbss0 000000              ??_GetKey 010E  
            ??___wmul 0110              ??_unlock 010E  
            ?_LCD_Out 0118              LCD_Out@A 011F  
            LCD_Out@D 011C              LCD_Out@N 011D  
            LCD_Out@i 011E           ??_LCD_Pause 012C  
         ??_LCD_Write 012B              ?_ReadKey 010C  
        GetKey@RESULT 010E              ?_Wait_ms 011C  
            ?___aldiv 012A              ?___almod 012A  
            ?___awdiv 010C      ___almod@dividend 012A  
         __smallconst 1000          playNote@flag 0114  
       ??_screenClear 0114       ___aldiv@divisor 012E  
     ___aldiv@counter 0132              _LCD_Init 23C4  
            _LCD_Inst 25BE              _LCD_Move 2456  
      ___wmul@product 0110              _MSGclear 1055  
   ___wmul@multiplier 010C              ReadKey@X 010D  
            ReadKey@Y 010C          screenClear@i 0114  
            _IntServe 22CE   __end_of_screenClear 1DC0  
            __Hparam1 0148              __Lparam1 0100  
            Wait_ms@X 011C              Wait_ms@i 011E  
            Wait_ms@j 0120          __Lsmallconst 1000  
          unlock@code 010C       ___almod@divisor 012E  
     ___almod@counter 0133              _lockCode 106A  
            _playNote 21D8              main@TEMP 0104  
          _LCD_Strobe 26CA             unlock@REF 010E  
         _screenClear 1C38              intlevel2 26DE  
        ___aldiv@sign 0133          ___almod@sign 0132  
