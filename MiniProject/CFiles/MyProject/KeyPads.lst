

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Tue Dec 10 18:54:40 2024

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	3
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	10
   109  000000                     main@T	equ	??_main+0
   110                           	global	main@T
   111  000000                     main@Z	equ	??_main+2
   112                           	global	main@Z
   113  000000                     main@TEMP	equ	??_main+4
   114                           	global	main@TEMP
   115  000000                     main@Y	equ	??_main+6
   116                           	global	main@Y
   117  000000                     main@i	equ	??_main+8
   118                           	global	main@i
   119  000000                     main@X	equ	??_main+10
   120                           	global	main@X
   121  000000                     ___wmul@product	equ	??___wmul+0
   122                           	global	___wmul@product
   123  000000                     ___wmul@multiplier	equ	?___wmul+0
   124                           	global	___wmul@multiplier
   125  000000                     ___wmul@multiplicand	equ	?___wmul+2
   126                           	global	___wmul@multiplicand
   127  000000                     unlock@REF	equ	??_unlock+0
   128                           	global	unlock@REF
   129  000000                     unlock@i	equ	??_unlock+2
   130                           	global	unlock@i
   131  000000                     unlock@code	equ	?_unlock+0
   132                           	global	unlock@code
   133  000000                     ReadKey@Y	equ	??_ReadKey+0
   134                           	global	ReadKey@Y
   135  000000                     ReadKey@X	equ	??_ReadKey+1
   136                           	global	ReadKey@X
   137  000000                     ___awdiv@counter	equ	??___awdiv+0
   138                           	global	___awdiv@counter
   139  000000                     ___awdiv@sign	equ	??___awdiv+1
   140                           	global	___awdiv@sign
   141  000000                     ___awdiv@quotient	equ	??___awdiv+2
   142                           	global	___awdiv@quotient
   143  000000                     ___awdiv@dividend	equ	?___awdiv+0
   144                           	global	___awdiv@dividend
   145  000000                     ___awdiv@divisor	equ	?___awdiv+2
   146                           	global	___awdiv@divisor
   147  000000                     playNote@f0	equ	?_playNote+0
   148                           	global	playNote@f0
   149  000000                     playNote@f1	equ	?_playNote+2
   150                           	global	playNote@f1
   151  000000                     playNote@f2	equ	?_playNote+4
   152                           	global	playNote@f2
   153  000000                     move@REF	equ	?_move+0
   154                           	global	move@REF
   155  000000                     screenClear@i	equ	??_screenClear+0
   156                           	global	screenClear@i
   157  000000                     GetKey@RESULT	equ	??_GetKey+0
   158                           	global	GetKey@RESULT
   159  000000                     GetKey@i	equ	??_GetKey+1
   160                           	global	GetKey@i
   161  000000                     LCD_Out@i	equ	??_LCD_Out+0
   162                           	global	LCD_Out@i
   163  000000                     LCD_Out@A	equ	??_LCD_Out+1
   164                           	global	LCD_Out@A
   165  000000                     LCD_Out@DATA	equ	?_LCD_Out+0
   166                           	global	LCD_Out@DATA
   167  000000                     LCD_Out@D	equ	?_LCD_Out+4
   168                           	global	LCD_Out@D
   169  000000                     LCD_Out@N	equ	?_LCD_Out+5
   170                           	global	LCD_Out@N
   171  000000                     LCD_Move@Row	equ	?_LCD_Move+0
   172                           	global	LCD_Move@Row
   173  000000                     LCD_Move@Col	equ	?_LCD_Move+1
   174                           	global	LCD_Move@Col
   175  000000                     ___almod@sign	equ	??___almod+0
   176                           	global	___almod@sign
   177  000000                     ___almod@counter	equ	??___almod+1
   178                           	global	___almod@counter
   179  000000                     ___almod@dividend	equ	?___almod+0
   180                           	global	___almod@dividend
   181  000000                     ___almod@divisor	equ	?___almod+4
   182                           	global	___almod@divisor
   183  000000                     ___aldiv@counter	equ	??___aldiv+0
   184                           	global	___aldiv@counter
   185  000000                     ___aldiv@sign	equ	??___aldiv+1
   186                           	global	___aldiv@sign
   187  000000                     ___aldiv@quotient	equ	??___aldiv+2
   188                           	global	___aldiv@quotient
   189  000000                     ___aldiv@dividend	equ	?___aldiv+0
   190                           	global	___aldiv@dividend
   191  000000                     ___aldiv@divisor	equ	?___aldiv+4
   192                           	global	___aldiv@divisor
   193  000000                     LCD_Inst@c	equ	?_LCD_Inst+0
   194                           	global	LCD_Inst@c
   195  000000                     LCD_Write@c	equ	?_LCD_Write+0
   196                           	global	LCD_Write@c
   197  000000                     Wait_ms@i	equ	??_Wait_ms+0
   198                           	global	Wait_ms@i
   199  000000                     Wait_ms@j	equ	??_Wait_ms+2
   200                           	global	Wait_ms@j
   201  000000                     Wait_ms@X	equ	?_Wait_ms+0
   202                           	global	Wait_ms@X
   203  000000                     LCD_Pause@x	equ	??_LCD_Pause+0
   204                           	global	LCD_Pause@x
   205                           ;Data sizes: Strings 0, constant 128, data 4, bs
                                 s 0, persistent 0 stack 74
   206                           	global	_main
   207                           	global	??_main
   208                           	global	?_main
   209                                   psect   text0,class=CODE,space=0,reloc=2
   210                           
   211                           	opt lm
   212                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
   213                           	line	161
   214  000000                     	__size_of_main	equ	__end_of_main-_main
   215                           ;Lock.C: 160: void main(void)
   216                           ;Lock.C: 161: {
   217                           	
   218  001086                     _main:		; BSR set to: ?
   219                           
   220                           	opt stack 30
   221                           	line	165
   222  001086  0E00               	movlw	low(0)
   223  001088  6E92               	movwf	((c:3986)),c	;volatile
   224                           	line	166
   225                           ;Lock.C: 166: TRISB = 0;
   226  00108A  0E00               	movlw	low(0)
   227  00108C  6E93               	movwf	((c:3987)),c	;volatile
   228                           	line	167
   229                           ;Lock.C: 167: TRISC = 0xF8;
   230  00108E  0EF8               	movlw	low(0F8h)
   231  001090  6E94               	movwf	((c:3988)),c	;volatile
   232                           	line	168
   233                           ;Lock.C: 168: TRISD = 0;
   234  001092  0E00               	movlw	low(0)
   235  001094  6E95               	movwf	((c:3989)),c	;volatile
   236                           	line	169
   237                           ;Lock.C: 169: TRISE = 0;
   238  001096  0E00               	movlw	low(0)
   239  001098  6E96               	movwf	((c:3990)),c	;volatile
   240                           	line	170
   241                           ;Lock.C: 170: TRISA = 0;
   242  00109A  0E00               	movlw	low(0)
   243  00109C  6E92               	movwf	((c:3986)),c	;volatile
   244                           	line	171
   245                           ;Lock.C: 171: ADCON1 = 15;
   246  00109E  0101               	movlb	1	; () banked
   247  0010A0  6F0C               	movwf	(??_main+12+0)&0ffh
   248  0010A2  0E0F               	movlw	low(0Fh)
   249  0010A4  6EC1               	movwf	((c:4033)),c
   250  0010A6  0101               	movlb	1	; () banked
   251  0010A8  510C               	movf	(??_main+12+0)&0ffh,w
   252                           	line	175
   253                           ;Lock.C: 175: T0CS = 0;
   254  0010AA  9AD5               	bcf	c:(32429/8),(32429)&7
   255                           	line	176
   256                           ;Lock.C: 176: T0CON = 0x88;
   257  0010AC  0101               	movlb	1	; () banked
   258  0010AE  6F0C               	movwf	(??_main+12+0)&0ffh
   259  0010B0  0E88               	movlw	low(088h)
   260  0010B2  6ED5               	movwf	((c:4053)),c
   261  0010B4  0101               	movlb	1	; () banked
   262  0010B6  510C               	movf	(??_main+12+0)&0ffh,w
   263                           	line	177
   264                           ;Lock.C: 177: TMR0ON = 1;
   265  0010B8  8ED5               	bsf	c:(32431/8),(32431)&7
   266                           	line	178
   267                           ;Lock.C: 178: TMR0IE = 1;
   268  0010BA  8AF2               	bsf	c:(32661/8),(32661)&7
   269                           	line	179
   270                           ;Lock.C: 179: TMR0IP = 1;
   271  0010BC  84F1               	bsf	c:(32650/8),(32650)&7
   272                           	line	180
   273                           ;Lock.C: 180: PEIE = 1;
   274  0010BE  8CF2               	bsf	c:(32662/8),(32662)&7
   275                           	line	182
   276                           ;Lock.C: 182: TMR1CS = 0;
   277  0010C0  92CD               	bcf	c:(32361/8),(32361)&7
   278                           	line	183
   279                           ;Lock.C: 183: T1CON = 0x81;
   280  0010C2  0101               	movlb	1	; () banked
   281  0010C4  6F0C               	movwf	(??_main+12+0)&0ffh
   282  0010C6  0E81               	movlw	low(081h)
   283  0010C8  6ECD               	movwf	((c:4045)),c
   284  0010CA  0101               	movlb	1	; () banked
   285  0010CC  510C               	movf	(??_main+12+0)&0ffh,w
   286                           	line	184
   287                           ;Lock.C: 184: TMR1ON = 1;
   288  0010CE  80CD               	bsf	c:(32360/8),(32360)&7
   289                           	line	185
   290                           ;Lock.C: 185: TMR1IE = 1;
   291  0010D0  809D               	bsf	c:(31976/8),(31976)&7
   292                           	line	186
   293                           ;Lock.C: 186: TMR1IP = 1;
   294  0010D2  809F               	bsf	c:(31992/8),(31992)&7
   295                           	line	187
   296                           ;Lock.C: 187: PEIE = 1;
   297  0010D4  8CF2               	bsf	c:(32662/8),(32662)&7
   298                           	line	189
   299                           ;Lock.C: 189: TMR3CS = 0;
   300  0010D6  92B1               	bcf	c:(32137/8),(32137)&7
   301                           	line	190
   302                           ;Lock.C: 190: T3CON = 0x81;
   303  0010D8  0101               	movlb	1	; () banked
   304  0010DA  6F0C               	movwf	(??_main+12+0)&0ffh
   305  0010DC  0E81               	movlw	low(081h)
   306  0010DE  6EB1               	movwf	((c:4017)),c
   307  0010E0  0101               	movlb	1	; () banked
   308  0010E2  510C               	movf	(??_main+12+0)&0ffh,w
   309                           	line	191
   310                           ;Lock.C: 191: TMR3ON = 1;
   311  0010E4  80B1               	bsf	c:(32136/8),(32136)&7
   312                           	line	192
   313                           ;Lock.C: 192: TMR3IE = 1;
   314  0010E6  82A0               	bsf	c:(32001/8),(32001)&7
   315                           	line	193
   316                           ;Lock.C: 193: TMR3IP = 1;
   317  0010E8  82A2               	bsf	c:(32017/8),(32017)&7
   318                           	line	194
   319                           ;Lock.C: 194: PEIE = 1;
   320  0010EA  8CF2               	bsf	c:(32662/8),(32662)&7
   321                           	line	197
   322                           ;Lock.C: 197: GIE = 1;
   323  0010EC  8EF2               	bsf	c:(32663/8),(32663)&7
   324                           	line	199
   325                           ;Lock.C: 199: LCD_Init();
   326  0010EE  ECD6  F011         	call	_LCD_Init	;wreg free
   327                           	line	201
   328                           ;Lock.C: 201: LCD_Move(0,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSG00[i]);
   329  0010F2  0101               	movlb	1	; () banked
   330  0010F4  6F0C               	movwf	(??_main+12+0)&0ffh
   331  0010F6  0E00               	movlw	low(0)
   332  0010F8  0101               	movlb	1	; () banked
   333  0010FA  0101               	movlb	1	; () banked
   334  0010FC  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   335  0010FE  0101               	movlb	1	; () banked
   336  001100  510C               	movf	(??_main+12+0)&0ffh,w
   337  001102  0101               	movlb	1	; () banked
   338  001104  6F0D               	movwf	(??_main+13+0)&0ffh
   339  001106  0E00               	movlw	low(0)
   340  001108  0101               	movlb	1	; () banked
   341  00110A  0101               	movlb	1	; () banked
   342  00110C  6F1A               	movwf	((?_LCD_Move))&0ffh
   343  00110E  0101               	movlb	1	; () banked
   344  001110  510D               	movf	(??_main+13+0)&0ffh,w
   345  001112  EC1F  F012         	call	_LCD_Move	;wreg free
   346  001116  0E00               	movlw	low(0)
   347  001118  0101               	movlb	1	; () banked
   348  00111A  0101               	movlb	1	; () banked
   349  00111C  6F08               	movwf	((main@i))&0ffh
   350  00111E  0E00               	movlw	high(0)
   351  001120  0101               	movlb	1	; () banked
   352  001122  6F09               	movwf	((main@i+1))&0ffh
   353  001124  0E14               	movlw	014h
   354  001126  0101               	movlb	1	; () banked
   355  001128  0101               	movlb	1	; () banked
   356  00112A  5D08               	subwf	((main@i))&0ffh,w
   357  00112C  0E00               	movlw	0
   358  00112E  0101               	movlb	1	; () banked
   359  001130  5909               	subwfb	((main@i+1))&0ffh,w
   360  001132  A0D8               	btfss	status,0
   361  001134  D001               	goto	u3181
   362  001136  D001               	goto	u3180
   363  001138                     u3181:
   364  001138  D001               	goto	l239
   365  00113A                     u3180:
   366  00113A  D020               	goto	l240
   367                           	
   368  00113C                     l239:		; BSR set to: ?
   369                           
   370  00113C  0E16               	movlw	low((_MSG00))
   371  00113E  0101               	movlb	1	; () banked
   372  001140  0101               	movlb	1	; () banked
   373  001142  2508               	addwf	((main@i))&0ffh,w
   374  001144  6EF6               	movwf	tblptrl
   375  001146  6AF7               	clrf	tblptrh
   376  001148  0E10               	movlw	high((_MSG00))
   377  00114A  22F7               	addwfc	tblptrh
   378  00114C  6AF8               	clrf	tblptru
   379  00114E  0E00               	movlw	low highword(__mediumconst)
   380  001150  22F8               	addwfc	tblptru
   381  001152  0008               	tblrd	*
   382                           	
   383  001154  0101               	movlb	1	; () banked
   384  001156  CFF5 F12C          	movff	tablat,(?_LCD_Write)
   385  00115A  EC3F  F013         	call	_LCD_Write	;wreg free
   386  00115E  0101               	movlb	1	; () banked
   387  001160  0101               	movlb	1	; () banked
   388  001162  4B08               	infsnz	((main@i))&0ffh
   389  001164  2B09               	incf	((main@i+1))&0ffh
   390  001166  0E14               	movlw	014h
   391  001168  0101               	movlb	1	; () banked
   392  00116A  0101               	movlb	1	; () banked
   393  00116C  5D08               	subwf	((main@i))&0ffh,w
   394  00116E  0E00               	movlw	0
   395  001170  0101               	movlb	1	; () banked
   396  001172  5909               	subwfb	((main@i+1))&0ffh,w
   397  001174  A0D8               	btfss	status,0
   398  001176  D001               	goto	u3191
   399  001178  D001               	goto	u3190
   400  00117A                     u3191:
   401  00117A  D7E0               	goto	l239
   402  00117C                     u3190:
   403                           	
   404  00117C                     l240:		; BSR set to: ?
   405                           
   406                           	line	202
   407                           ;Lock.C: 202: Wait_ms(2000);
   408  00117C  0ED0               	movlw	low(07D0h)
   409  00117E  0101               	movlb	1	; () banked
   410  001180  0101               	movlb	1	; () banked
   411  001182  6F1E               	movwf	((?_Wait_ms))&0ffh
   412  001184  0E07               	movlw	high(07D0h)
   413  001186  0101               	movlb	1	; () banked
   414  001188  6F1F               	movwf	((?_Wait_ms+1))&0ffh
   415  00118A  EC61  F012         	call	_Wait_ms	;wreg free
   416                           	line	203
   417                           ;Lock.C: 203: LCD_Inst(1);
   418  00118E  0101               	movlb	1	; () banked
   419  001190  6F0C               	movwf	(??_main+12+0)&0ffh
   420  001192  0E01               	movlw	low(01h)
   421  001194  0101               	movlb	1	; () banked
   422  001196  0101               	movlb	1	; () banked
   423  001198  6F1C               	movwf	((?_LCD_Inst))&0ffh
   424  00119A  0101               	movlb	1	; () banked
   425  00119C  510C               	movf	(??_main+12+0)&0ffh,w
   426  00119E  ECD3  F012         	call	_LCD_Inst	;wreg free
   427                           	line	205
   428                           ;Lock.C: 205: X = 0;
   429  0011A2  0E00               	movlw	low(0)
   430  0011A4  0101               	movlb	1	; () banked
   431  0011A6  0101               	movlb	1	; () banked
   432  0011A8  6F0A               	movwf	((main@X))&0ffh
   433  0011AA  0E00               	movlw	high(0)
   434  0011AC  0101               	movlb	1	; () banked
   435  0011AE  6F0B               	movwf	((main@X+1))&0ffh
   436                           	line	206
   437                           ;Lock.C: 206: Y = 0;
   438  0011B0  0E00               	movlw	low(0)
   439  0011B2  0101               	movlb	1	; () banked
   440  0011B4  0101               	movlb	1	; () banked
   441  0011B6  6F06               	movwf	((main@Y))&0ffh
   442  0011B8  0E00               	movlw	high(0)
   443  0011BA  0101               	movlb	1	; () banked
   444  0011BC  6F07               	movwf	((main@Y+1))&0ffh
   445                           	line	207
   446                           ;Lock.C: 207: Z = 0;
   447  0011BE  0E00               	movlw	low(0)
   448  0011C0  0101               	movlb	1	; () banked
   449  0011C2  0101               	movlb	1	; () banked
   450  0011C4  6F02               	movwf	((main@Z))&0ffh
   451  0011C6  0E00               	movlw	high(0)
   452  0011C8  0101               	movlb	1	; () banked
   453  0011CA  6F03               	movwf	((main@Z+1))&0ffh
   454                           	line	208
   455                           ;Lock.C: 208: T = 0;
   456  0011CC  0E00               	movlw	low(0)
   457  0011CE  0101               	movlb	1	; () banked
   458  0011D0  0101               	movlb	1	; () banked
   459  0011D2  6F00               	movwf	((main@T))&0ffh
   460  0011D4  0E00               	movlw	high(0)
   461  0011D6  0101               	movlb	1	; () banked
   462  0011D8  6F01               	movwf	((main@T+1))&0ffh
   463                           	line	210
   464                           ;Lock.C: 210: LCD_Move(0,0); LCD_Write('Y');
   465  0011DA  0101               	movlb	1	; () banked
   466  0011DC  6F0C               	movwf	(??_main+12+0)&0ffh
   467  0011DE  0E00               	movlw	low(0)
   468  0011E0  0101               	movlb	1	; () banked
   469  0011E2  0101               	movlb	1	; () banked
   470  0011E4  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   471  0011E6  0101               	movlb	1	; () banked
   472  0011E8  510C               	movf	(??_main+12+0)&0ffh,w
   473  0011EA  0101               	movlb	1	; () banked
   474  0011EC  6F0D               	movwf	(??_main+13+0)&0ffh
   475  0011EE  0E00               	movlw	low(0)
   476  0011F0  0101               	movlb	1	; () banked
   477  0011F2  0101               	movlb	1	; () banked
   478  0011F4  6F1A               	movwf	((?_LCD_Move))&0ffh
   479  0011F6  0101               	movlb	1	; () banked
   480  0011F8  510D               	movf	(??_main+13+0)&0ffh,w
   481  0011FA  EC1F  F012         	call	_LCD_Move	;wreg free
   482  0011FE  0101               	movlb	1	; () banked
   483  001200  6F0C               	movwf	(??_main+12+0)&0ffh
   484  001202  0E59               	movlw	low(059h)
   485  001204  0101               	movlb	1	; () banked
   486  001206  0101               	movlb	1	; () banked
   487  001208  6F2C               	movwf	((?_LCD_Write))&0ffh
   488  00120A  0101               	movlb	1	; () banked
   489  00120C  510C               	movf	(??_main+12+0)&0ffh,w
   490  00120E  EC3F  F013         	call	_LCD_Write	;wreg free
   491                           	line	211
   492                           ;Lock.C: 211: LCD_Move(1,0); LCD_Write('X');
   493  001212  0101               	movlb	1	; () banked
   494  001214  6F0C               	movwf	(??_main+12+0)&0ffh
   495  001216  0E00               	movlw	low(0)
   496  001218  0101               	movlb	1	; () banked
   497  00121A  0101               	movlb	1	; () banked
   498  00121C  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   499  00121E  0101               	movlb	1	; () banked
   500  001220  510C               	movf	(??_main+12+0)&0ffh,w
   501  001222  0101               	movlb	1	; () banked
   502  001224  6F0D               	movwf	(??_main+13+0)&0ffh
   503  001226  0E01               	movlw	low(01h)
   504  001228  0101               	movlb	1	; () banked
   505  00122A  0101               	movlb	1	; () banked
   506  00122C  6F1A               	movwf	((?_LCD_Move))&0ffh
   507  00122E  0101               	movlb	1	; () banked
   508  001230  510D               	movf	(??_main+13+0)&0ffh,w
   509+ 001232  EC1F  F012         	call	_LCD_Move	;wreg free
   510  001236  0101               	movlb	1	; () banked
   511  001238  6F0C               	movwf	(??_main+12+0)&0ffh
   512  00123A  0E58               	movlw	low(058h)
   513  00123C  0101               	movlb	1	; () banked
   514  00123E  0101               	movlb	1	; () banked
   515  001240  6F2C               	movwf	((?_LCD_Write))&0ffh
   516  001242  0101               	movlb	1	; () banked
   517  001244  510C               	movf	(??_main+12+0)&0ffh,w
   518  001246  EC3F  F013         	call	_LCD_Write	;wreg free
   519                           	line	214
   520                           ;Lock.C: 214: while(1) {
   521                           	
   522  00124A                     l243:		; BSR set to: ?
   523                           
   524                           	line	215
   525                           ;Lock.C: 215: TEMP = ReadKey();
   526  00124A  ECFA  F012         	call	_ReadKey	;wreg free
   527  00124E  0101               	movlb	1	; () banked
   528  001250  6F0C               	movwf	(??_main+12+0)&0ffh
   529  001252  0101               	movlb	1	; () banked
   530  001254  510C               	movf	((??_main+12+0))&0ffh,w
   531  001256  0101               	movlb	1	; () banked
   532  001258  0101               	movlb	1	; () banked
   533  00125A  6F04               	movwf	((main@TEMP))&0ffh
   534  00125C  0101               	movlb	1	; () banked
   535  00125E  6B05               	clrf	((main@TEMP+1))&0ffh
   536                           	line	217
   537                           ;Lock.C: 217: if (TEMP < 10) X = (X*10) + TEMP;
   538  001260  0101               	movlb	1	; () banked
   539  001262  0101               	movlb	1	; () banked
   540  001264  5105               	movf	((main@TEMP+1))&0ffh,w
   541  001266  0A80               	xorlw	80h
   542  001268  0F80               	addlw	-((0)^80h)
   543  00126A  0E0A               	movlw	0Ah
   544  00126C  B4D8               	btfsc	status,2
   545  00126E  5D04               	subwf	((main@TEMP))&0ffh,w
   546  001270  B0D8               	btfsc	status,0
   547  001272  D001               	goto	u3201
   548  001274  D001               	goto	u3200
   549  001276                     u3201:
   550  001276  D01E               	goto	l245
   551  001278                     u3200:
   552  001278  0E0A               	movlw	low(0Ah)
   553  00127A  0101               	movlb	1	; () banked
   554  00127C  0101               	movlb	1	; () banked
   555  00127E  6F10               	movwf	(0+(?___wmul+02h))&0ffh
   556  001280  0E00               	movlw	high(0Ah)
   557  001282  0101               	movlb	1	; () banked
   558  001284  6F11               	movwf	(1+(?___wmul+02h))&0ffh
   559  001286  C10A  F10E         	movff	(main@X),(?___wmul)
   560  00128A  C10B  F10F         	movff	(main@X+1),(?___wmul+1)
   561  00128E  ECA0  F012         	call	___wmul	;wreg free
   562  001292  0101               	movlb	1	; () banked
   563  001294  0101               	movlb	1	; () banked
   564  001296  5104               	movf	((main@TEMP))&0ffh,w
   565  001298  0101               	movlb	1	; () banked
   566  00129A  0101               	movlb	1	; () banked
   567  00129C  250E               	addwf	(0+?___wmul)&0ffh,w
   568  00129E  0101               	movlb	1	; () banked
   569                           	
   570  0012A0  0101               	movlb	1	; () banked
   571  0012A2  6F0A               	movwf	((main@X))&0ffh
   572  0012A4  0101               	movlb	1	; () banked
   573  0012A6  0101               	movlb	1	; () banked
   574  0012A8  5105               	movf	((main@TEMP+1))&0ffh,w
   575  0012AA  0101               	movlb	1	; () banked
   576  0012AC  0101               	movlb	1	; () banked
   577  0012AE  210F               	addwfc	(1+?___wmul)&0ffh,w
   578  0012B0  0101               	movlb	1	; () banked
   579  0012B2  6F0B               	movwf	1+((main@X))&0ffh
   580                           	
   581  0012B4                     l245:		; BSR set to: ?
   582                           
   583                           	line	219
   584                           ;Lock.C: 219: if (TEMP == 10) {
   585  0012B4  0101               	movlb	1	; () banked
   586  0012B6  0101               	movlb	1	; () banked
   587  0012B8  5104               	movf	((main@TEMP))&0ffh,w
   588  0012BA  0A0A               	xorlw	10
   589  0012BC  1105               	iorwf ((main@TEMP+1))&0ffh,w
   590                           
   591  0012BE  A4D8               	btfss	status,2
   592  0012C0  D001               	goto	u3211
   593  0012C2  D001               	goto	u3210
   594  0012C4                     u3211:
   595  0012C4  D019               	goto	l246
   596  0012C6                     u3210:
   597                           	line	220
   598                           ;Lock.C: 220: T = Z;
   599  0012C6  C102  F100         	movff	(main@Z),(main@T)
   600  0012CA  C103  F101         	movff	(main@Z+1),(main@T+1)
   601                           	line	221
   602                           ;Lock.C: 221: Z = Y;
   603  0012CE  C106  F102         	movff	(main@Y),(main@Z)
   604  0012D2  C107  F103         	movff	(main@Y+1),(main@Z+1)
   605                           	line	222
   606                           ;Lock.C: 222: Y = X;
   607  0012D6  C10A  F106         	movff	(main@X),(main@Y)
   608  0012DA  C10B  F107         	movff	(main@X+1),(main@Y+1)
   609                           	line	223
   610                           ;Lock.C: 223: X = 0;
   611  0012DE  0E00               	movlw	low(0)
   612  0012E0  0101               	movlb	1	; () banked
   613  0012E2  0101               	movlb	1	; () banked
   614  0012E4  6F0A               	movwf	((main@X))&0ffh
   615  0012E6  0E00               	movlw	high(0)
   616  0012E8  0101               	movlb	1	; () banked
   617  0012EA  6F0B               	movwf	((main@X+1))&0ffh
   618                           	line	225
   619                           ;Lock.C: 225: unlock(Y);
   620  0012EC  C106  F10E         	movff	(main@Y),(?_unlock)
   621  0012F0  C107  F10F         	movff	(main@Y+1),(?_unlock+1)
   622  0012F4  EC03  F00A         	call	_unlock	;wreg free
   623                           	line	226
   624                           	
   625  0012F8                     l246:		; BSR set to: ?
   626                           
   627                           	line	227
   628                           ;Lock.C: 226: }
   629                           ;Lock.C: 227: if (TEMP == 11) {
   630  0012F8  0101               	movlb	1	; () banked
   631  0012FA  0101               	movlb	1	; () banked
   632  0012FC  5104               	movf	((main@TEMP))&0ffh,w
   633  0012FE  0A0B               	xorlw	11
   634  001300  1105               	iorwf ((main@TEMP+1))&0ffh,w
   635                           
   636  001302  A4D8               	btfss	status,2
   637  001304  D001               	goto	u3221
   638  001306  D001               	goto	u3220
   639  001308                     u3221:
   640  001308  D011               	goto	l247
   641  00130A                     u3220:
   642                           	line	228
   643                           ;Lock.C: 228: X = X/10;
   644  00130A  0E0A               	movlw	low(0Ah)
   645  00130C  0101               	movlb	1	; () banked
   646  00130E  0101               	movlb	1	; () banked
   647  001310  6F10               	movwf	(0+(?___awdiv+02h))&0ffh
   648  001312  0E00               	movlw	high(0Ah)
   649  001314  0101               	movlb	1	; () banked
   650  001316  6F11               	movwf	(1+(?___awdiv+02h))&0ffh
   651  001318  C10A  F10E         	movff	(main@X),(?___awdiv)
   652  00131C  C10B  F10F         	movff	(main@X+1),(?___awdiv+1)
   653  001320  ECC5  F010         	call	___awdiv	;wreg free
   654  001324  C10E  F10A         	movff	0+?___awdiv,(main@X)
   655  001328  C10F  F10B         	movff	1+?___awdiv,(main@X+1)
   656                           	line	229
   657                           	
   658  00132C                     l247:		; BSR set to: ?
   659                           
   660                           	line	231
   661                           ;Lock.C: 229: }
   662                           ;Lock.C: 231: LCD_Move(1,5); LCD_Out(X, 5, 0);
   663  00132C  0101               	movlb	1	; () banked
   664  00132E  6F0C               	movwf	(??_main+12+0)&0ffh
   665  001330  0E05               	movlw	low(05h)
   666  001332  0101               	movlb	1	; () banked
   667  001334  0101               	movlb	1	; () banked
   668  001336  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   669  001338  0101               	movlb	1	; () banked
   670  00133A  510C               	movf	(??_main+12+0)&0ffh,w
   671  00133C  0101               	movlb	1	; () banked
   672  00133E  6F0D               	movwf	(??_main+13+0)&0ffh
   673  001340  0E01               	movlw	low(01h)
   674  001342  0101               	movlb	1	; () banked
   675  001344  0101               	movlb	1	; () banked
   676  001346  6F1A               	movwf	((?_LCD_Move))&0ffh
   677  001348  0101               	movlb	1	; () banked
   678  00134A  510D               	movf	(??_main+13+0)&0ffh,w
   679  00134C  EC1F  F012         	call	_LCD_Move	;wreg free
   680  001350  0101               	movlb	1	; () banked
   681  001352  6F0C               	movwf	(??_main+12+0)&0ffh
   682  001354  0E00               	movlw	low(0)
   683  001356  0101               	movlb	1	; () banked
   684  001358  0101               	movlb	1	; () banked
   685  00135A  6F1F               	movwf	(0+(?_LCD_Out+05h))&0ffh
   686  00135C  0101               	movlb	1	; () banked
   687  00135E  510C               	movf	(??_main+12+0)&0ffh,w
   688  001360  0101               	movlb	1	; () banked
   689  001362  6F0D               	movwf	(??_main+13+0)&0ffh
   690  001364  0E05               	movlw	low(05h)
   691  001366  0101               	movlb	1	; () banked
   692  001368  0101               	movlb	1	; () banked
   693  00136A  6F1E               	movwf	(0+(?_LCD_Out+04h))&0ffh
   694  00136C  0101               	movlb	1	; () banked
   695  00136E  510D               	movf	(??_main+13+0)&0ffh,w
   696  001370  0101               	movlb	1	; () banked
   697  001372  0101               	movlb	1	; () banked
   698  001374  C10A  F11A         	movff	(main@X),(?_LCD_Out)
   699  001378  0101               	movlb	1	; () banked
   700  00137A  0101               	movlb	1	; () banked
   701  00137C  C10B  F11B         	movff	(main@X+1),(?_LCD_Out+1)
   702  001380  0101               	movlb	1	; () banked
   703  001382  0E00               	movlw	0
   704  001384  0101               	movlb	1	; () banked
   705  001386  BF1B               	btfsc	((?_LCD_Out+1))&0ffh,7
   706  001388  0EFF               	movlw	-1
   707  00138A  0101               	movlb	1	; () banked
   708  00138C  6F1C               	movwf	((?_LCD_Out+2))&0ffh
   709  00138E  0101               	movlb	1	; () banked
   710  001390  6F1D               	movwf	((?_LCD_Out+3))&0ffh
   711  001392  EC51  F00F         	call	_LCD_Out	;wreg free
   712                           	line	232
   713                           ;Lock.C: 232: LCD_Move(0,5); LCD_Out(Y, 5, 0);
   714  001396  0101               	movlb	1	; () banked
   715  001398  6F0C               	movwf	(??_main+12+0)&0ffh
   716  00139A  0E05               	movlw	low(05h)
   717  00139C  0101               	movlb	1	; () banked
   718  00139E  0101               	movlb	1	; () banked
   719  0013A0  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   720  0013A2  0101               	movlb	1	; () banked
   721  0013A4  510C               	movf	(??_main+12+0)&0ffh,w
   722  0013A6  0101               	movlb	1	; () banked
   723  0013A8  6F0D               	movwf	(??_main+13+0)&0ffh
   724  0013AA  0E00               	movlw	low(0)
   725  0013AC  0101               	movlb	1	; () banked
   726  0013AE  0101               	movlb	1	; () banked
   727  0013B0  6F1A               	movwf	((?_LCD_Move))&0ffh
   728  0013B2  0101               	movlb	1	; () banked
   729  0013B4  510D               	movf	(??_main+13+0)&0ffh,w
   730  0013B6  EC1F  F012         	call	_LCD_Move	;wreg free
   731  0013BA  0101               	movlb	1	; () banked
   732  0013BC  6F0C               	movwf	(??_main+12+0)&0ffh
   733  0013BE  0E00               	movlw	low(0)
   734  0013C0  0101               	movlb	1	; () banked
   735  0013C2  0101               	movlb	1	; () banked
   736  0013C4  6F1F               	movwf	(0+(?_LCD_Out+05h))&0ffh
   737  0013C6  0101               	movlb	1	; () banked
   738  0013C8  510C               	movf	(??_main+12+0)&0ffh,w
   739  0013CA  0101               	movlb	1	; () banked
   740  0013CC  6F0D               	movwf	(??_main+13+0)&0ffh
   741  0013CE  0E05               	movlw	low(05h)
   742  0013D0  0101               	movlb	1	; () banked
   743  0013D2  0101               	movlb	1	; () banked
   744  0013D4  6F1E               	movwf	(0+(?_LCD_Out+04h))&0ffh
   745  0013D6  0101               	movlb	1	; () banked
   746  0013D8  510D               	movf	(??_main+13+0)&0ffh,w
   747  0013DA  0101               	movlb	1	; () banked
   748  0013DC  0101               	movlb	1	; () banked
   749  0013DE  C106  F11A         	movff	(main@Y),(?_LCD_Out)
   750  0013E2  0101               	movlb	1	; () banked
   751  0013E4  0101               	movlb	1	; () banked
   752  0013E6  C107  F11B         	movff	(main@Y+1),(?_LCD_Out+1)
   753  0013EA  0101               	movlb	1	; () banked
   754  0013EC  0E00               	movlw	0
   755  0013EE  0101               	movlb	1	; () banked
   756  0013F0  BF1B               	btfsc	((?_LCD_Out+1))&0ffh,7
   757  0013F2  0EFF               	movlw	-1
   758  0013F4  0101               	movlb	1	; () banked
   759  0013F6  6F1C               	movwf	((?_LCD_Out+2))&0ffh
   760  0013F8  0101               	movlb	1	; () banked
   761  0013FA  6F1D               	movwf	((?_LCD_Out+3))&0ffh
   762  0013FC  EC51  F00F         	call	_LCD_Out	;wreg free
   763                           	line	234
   764                           	
   765  001400                     l242:		; BSR set to: ?
   766                           
   767                           	line	214
   768  001400  D724               	goto	l243
   769                           	global	start
   770  001402  EF0C  F004         	goto	start
   771                           	opt stack 0
   772                           GLOBAL __end_of_main
   773  001406                     	__end_of_main:
   774                           	FNSIZE	_main,14,0
   775                           ; =============== function _main ends ==========
                                 ==
   776                           
   777                                   psect   text1,class=CODE,space=0,reloc=2
   778                           	line	237
   779                           
   780                           	opt lm
   781                           	signat	_main,88
   782                           	global	___wmul
   783                           	global	??___wmul
   784                           	global	?___wmul
   785                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\wmul.c"
   786                           	line	3
   787  000000                     	__size_of___wmul	equ	__end_of___wmul-___wmul
   788                           	
   789  002540                     ___wmul:		; BSR set to: ?
   790                           
   791                           	opt stack 29
   792                           	line	4
   793  002540  0E00               	movlw	low(0)
   794  002542  0101               	movlb	1	; () banked
   795  002544  0101               	movlb	1	; () banked
   796  002546  6F12               	movwf	((___wmul@product))&0ffh
   797  002548  0E00               	movlw	high(0)
   798  00254A  0101               	movlb	1	; () banked
   799  00254C  6F13               	movwf	((___wmul@product+1))&0ffh
   800                           	line	6
   801                           	
   802  00254E                     l582:		; BSR set to: ?
   803                           
   804                           	line	7
   805  00254E  0101               	movlb	1	; () banked
   806                           	
   807  002550  0101               	movlb	1	; () banked
   808  002552  A10E               	btfss	((___wmul@multiplier))&0ffh,(0)&7
   809  002554  D001               	goto	u2391
   810  002556  D001               	goto	u2390
   811  002558                     u2391:
   812  002558  D00C               	goto	l583
   813  00255A                     u2390:
   814                           	line	8
   815  00255A  0101               	movlb	1	; () banked
   816  00255C  0101               	movlb	1	; () banked
   817  00255E  5110               	movf	((___wmul@multiplicand))&0ffh,w
   818  002560  0101               	movlb	1	; () banked
   819  002562  0101               	movlb	1	; () banked
   820  002564  2712               	addwf	((___wmul@product))&0ffh
   821  002566  0101               	movlb	1	; () banked
   822  002568  0101               	movlb	1	; () banked
   823  00256A  5111               	movf	((___wmul@multiplicand+1))&0ffh,w
   824  00256C  0101               	movlb	1	; () banked
   825  00256E  0101               	movlb	1	; () banked
   826  002570  2313               	addwfc	((___wmul@product+1))&0ffh
   827                           
   828                           	
   829  002572                     l583:		; BSR set to: ?
   830                           
   831                           	line	9
   832  002572  0101               	movlb	1	; () banked
   833  002574  90D8               	bcf	status,0
   834  002576  0101               	movlb	1	; () banked
   835  002578  3710               	rlcf	((___wmul@multiplicand))&0ffh
   836  00257A  0101               	movlb	1	; () banked
   837  00257C  3711               	rlcf	((___wmul@multiplicand+1))&0ffh
   838                           	line	10
   839  00257E  0101               	movlb	1	; () banked
   840  002580  90D8               	bcf	status,0
   841  002582  0101               	movlb	1	; () banked
   842  002584  330F               	rrcf	((___wmul@multiplier+1))&0ffh
   843  002586  0101               	movlb	1	; () banked
   844  002588  330E               	rrcf	((___wmul@multiplier))&0ffh
   845                           	line	11
   846  00258A  0101               	movlb	1	; () banked
   847  00258C  0101               	movlb	1	; () banked
   848  00258E  510F               	movf	((___wmul@multiplier+1))&0ffh,w
   849  002590  110E               	iorwf ((___wmul@multiplier))&0ffh,w
   850                           
   851  002592  A4D8               	btfss	status,2
   852  002594  D001               	goto	u2401
   853  002596  D001               	goto	u2400
   854  002598                     u2401:
   855  002598  D7DA               	goto	l582
   856  00259A                     u2400:
   857                           	
   858  00259A                     l581:		; BSR set to: ?
   859                           
   860                           	line	12
   861  00259A  C112  F10E         	movff	(___wmul@product),(?___wmul)
   862  00259E  C113  F10F         	movff	(___wmul@product+1),(?___wmul+1)
   863  0025A2  D000               	goto	l579
   864                           	line	13
   865  0025A4                     l579:
   866                           			; BSR set to: ?
   867                           
   868  0025A4  0012               	return
   869                           	opt stack 0
   870                           GLOBAL __end_of___wmul
   871  0025A6                     	__end_of___wmul:
   872                           	FNSIZE	___wmul,2,4
   873                           ; =============== function ___wmul ends ========
                                 ====
   874                           
   875                           	signat	___wmul,8314
   876                           	global	_unlock
   877                           	global	??_unlock
   878                           	global	?_unlock
   879                                   psect   text2,class=CODE,space=0,reloc=2
   880                           
   881                           	opt lm
   882                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
   883                           	line	127
   884  000000                     	__size_of_unlock	equ	__end_of_unlock-_unlock
   885                           ;Lock.C: 127: void unlock(int code){
   886                           	
   887  001406                     _unlock:		; BSR set to: ?
   888                           
   889                           	opt stack 29
   890                           	line	129
   891                           ;Lock.C: 128: int i,j;
   892                           ;Lock.C: 129: int REF = 100;
   893  001406  0E64               	movlw	low(064h)
   894  001408  0101               	movlb	1	; () banked
   895  00140A  0101               	movlb	1	; () banked
   896  00140C  6F10               	movwf	((unlock@REF))&0ffh
   897  00140E  0E00               	movlw	high(064h)
   898  001410  0101               	movlb	1	; () banked
   899  001412  6F11               	movwf	((unlock@REF+1))&0ffh
   900                           	line	131
   901                           ;Lock.C: 131: if(code == lockCode){
   902  001414  0E7F               	movlw	low((_lockCode))
   903  001416  6EF6               	movwf	tblptrl
   904  001418  0E10               	movlw	high((_lockCode))
   905  00141A  6EF7               	movwf	tblptrh
   906  00141C  0E00               	movlw	low highword((_lockCode))
   907  00141E  6EF8               	movwf	tblptru
   908  001420  0009               	tblrd	*+
   909                           	
   910  001422  CFF5 F114          	movff	tablat,??_unlock+4+0
   911  001426  0009               	tblrd	*+
   912                           	
   913  001428  CFF5 F115          	movff	tablat,??_unlock+4+0+1
   914  00142C  0101               	movlb	1	; () banked
   915  00142E  5115               	movf	(??_unlock+4+1)&0ffh,w
   916  001430  0101               	movlb	1	; () banked
   917  001432  0101               	movlb	1	; () banked
   918  001434  190F               	xorwf	((unlock@code+1))&0ffh,w
   919  001436  E105               	bnz	u3085
   920  001438  0101               	movlb	1	; () banked
   921  00143A  5114               	movf	(??_unlock+4+0)&0ffh,w
   922  00143C  0101               	movlb	1	; () banked
   923  00143E  0101               	movlb	1	; () banked
   924  001440  190E               	xorwf	((unlock@code))&0ffh,w
   925  001442                     u3085:
   926                           
   927  001442  A4D8               	btfss	status,2
   928  001444  D001               	goto	u3081
   929  001446  D001               	goto	u3080
   930  001448                     u3081:
   931  001448  D0A0               	goto	l223
   932  00144A                     u3080:
   933                           	line	132
   934                           ;Lock.C: 132: LCD_Move(0,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSG2[i]);
   935  00144A  0101               	movlb	1	; () banked
   936  00144C  6F14               	movwf	(??_unlock+4+0)&0ffh
   937  00144E  0E00               	movlw	low(0)
   938  001450  0101               	movlb	1	; () banked
   939  001452  0101               	movlb	1	; () banked
   940  001454  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
   941  001456  0101               	movlb	1	; () banked
   942  001458  5114               	movf	(??_unlock+4+0)&0ffh,w
   943  00145A  0101               	movlb	1	; () banked
   944  00145C  6F15               	movwf	(??_unlock+5+0)&0ffh
   945  00145E  0E00               	movlw	low(0)
   946  001460  0101               	movlb	1	; () banked
   947  001462  0101               	movlb	1	; () banked
   948  001464  6F1A               	movwf	((?_LCD_Move))&0ffh
   949  001466  0101               	movlb	1	; () banked
   950  001468  5115               	movf	(??_unlock+5+0)&0ffh,w
   951  00146A  EC1F  F012         	call	_LCD_Move	;wreg free
   952  00146E  0E00               	movlw	low(0)
   953  001470  0101               	movlb	1	; () banked
   954  001472  0101               	movlb	1	; () banked
   955  001474  6F12               	movwf	((unlock@i))&0ffh
   956  001476  0E00               	movlw	high(0)
   957  001478  0101               	movlb	1	; () banked
   958  00147A  6F13               	movwf	((unlock@i+1))&0ffh
   959  00147C  0101               	movlb	1	; () banked
   960  00147E  0101               	movlb	1	; () banked
   961  001480  5113               	movf	((unlock@i+1))&0ffh,w
   962  001482  0A80               	xorlw	80h
   963  001484  0F80               	addlw	-((0)^80h)
   964  001486  0E14               	movlw	014h
   965  001488  B4D8               	btfsc	status,2
   966  00148A  5D12               	subwf	((unlock@i))&0ffh,w
   967  00148C  A0D8               	btfss	status,0
   968  00148E  D001               	goto	u3091
   969  001490  D001               	goto	u3090
   970  001492                     u3091:
   971  001492  D001               	goto	l224
   972  001494                     u3090:
   973  001494  D021               	goto	l225
   974                           	
   975  001496                     l224:		; BSR set to: ?
   976                           
   977  001496  0E40               	movlw	low((_MSG2))
   978  001498  0101               	movlb	1	; () banked
   979  00149A  0101               	movlb	1	; () banked
   980  00149C  2512               	addwf	((unlock@i))&0ffh,w
   981  00149E  6EF6               	movwf	tblptrl
   982  0014A0  6AF7               	clrf	tblptrh
   983  0014A2  0E10               	movlw	high((_MSG2))
   984  0014A4  22F7               	addwfc	tblptrh
   985  0014A6  6AF8               	clrf	tblptru
   986  0014A8  0E00               	movlw	low highword(__mediumconst)
   987  0014AA  22F8               	addwfc	tblptru
   988  0014AC  0008               	tblrd	*
   989                           	
   990  0014AE  0101               	movlb	1	; () banked
   991  0014B0  CFF5 F12C          	movff	tablat,(?_LCD_Write)
   992  0014B4  EC3F  F013         	call	_LCD_Write	;wreg free
   993  0014B8  0101               	movlb	1	; () banked
   994  0014BA  0101               	movlb	1	; () banked
   995  0014BC  4B12               	infsnz	((unlock@i))&0ffh
   996  0014BE  2B13               	incf	((unlock@i+1))&0ffh
   997  0014C0  0101               	movlb	1	; () banked
   998  0014C2  0101               	movlb	1	; () banked
   999  0014C4  5113               	movf	((unlock@i+1))&0ffh,w
  1000  0014C6  0A80               	xorlw	80h
  1001  0014C8  0F80               	addlw	-((0)^80h)
  1002  0014CA  0E14               	movlw	014h
  1003  0014CC  B4D8               	btfsc	status,2
  1004  0014CE  5D12               	subwf	((unlock@i))&0ffh,w
  1005  0014D0  A0D8               	btfss	status,0
  1006  0014D2  D001               	goto	u3101
  1007  0014D4  D001               	goto	u3100
  1008  0014D6                     u3101:
  1009  0014D6  D7DF               	goto	l224
  1010  0014D8                     u3100:
  1011                           	
  1012  0014D8                     l225:		; BSR set to: ?
  1013                           
  1014                           	line	133
  1015                           ;Lock.C: 133: LCD_Move(1,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSG3[i]);
  1016  0014D8  0101               	movlb	1	; () banked
  1017  0014DA  6F14               	movwf	(??_unlock+4+0)&0ffh
  1018  0014DC  0E00               	movlw	low(0)
  1019  0014DE  0101               	movlb	1	; () banked
  1020  0014E0  0101               	movlb	1	; () banked
  1021  0014E2  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1022  0014E4  0101               	movlb	1	; () banked
  1023  0014E6  5114               	movf	(??_unlock+4+0)&0ffh,w
  1024  0014E8  0101               	movlb	1	; () banked
  1025  0014EA  6F15               	movwf	(??_unlock+5+0)&0ffh
  1026  0014EC  0E01               	movlw	low(01h)
  1027  0014EE  0101               	movlb	1	; () banked
  1028  0014F0  0101               	movlb	1	; () banked
  1029  0014F2  6F1A               	movwf	((?_LCD_Move))&0ffh
  1030  0014F4  0101               	movlb	1	; () banked
  1031  0014F6  5115               	movf	(??_unlock+5+0)&0ffh,w
  1032  0014F8  EC1F  F012         	call	_LCD_Move	;wreg free
  1033  0014FC  0E00               	movlw	low(0)
  1034  0014FE  0101               	movlb	1	; () banked
  1035  001500  0101               	movlb	1	; () banked
  1036  001502  6F12               	movwf	((unlock@i))&0ffh
  1037  001504  0E00               	movlw	high(0)
  1038  001506  0101               	movlb	1	; () banked
  1039  001508  6F13               	movwf	((unlock@i+1))&0ffh
  1040  00150A  0101               	movlb	1	; () banked
  1041  00150C  0101               	movlb	1	; () banked
  1042  00150E  5113               	movf	((unlock@i+1))&0ffh,w
  1043  001510  0A80               	xorlw	80h
  1044  001512  0F80               	addlw	-((0)^80h)
  1045  001514  0E14               	movlw	014h
  1046  001516  B4D8               	btfsc	status,2
  1047  001518  5D12               	subwf	((unlock@i))&0ffh,w
  1048  00151A  A0D8               	btfss	status,0
  1049  00151C  D001               	goto	u3111
  1050  00151E  D001               	goto	u3110
  1051  001520                     u3111:
  1052  001520  D001               	goto	l227
  1053  001522                     u3110:
  1054  001522  D021               	goto	l228
  1055                           	
  1056  001524                     l227:		; BSR set to: ?
  1057                           
  1058  001524  0E55               	movlw	low((_MSG3))
  1059  001526  0101               	movlb	1	; () banked
  1060  001528  0101               	movlb	1	; () banked
  1061  00152A  2512               	addwf	((unlock@i))&0ffh,w
  1062  00152C  6EF6               	movwf	tblptrl
  1063  00152E  6AF7               	clrf	tblptrh
  1064  001530  0E10               	movlw	high((_MSG3))
  1065  001532  22F7               	addwfc	tblptrh
  1066  001534  6AF8               	clrf	tblptru
  1067  001536  0E00               	movlw	low highword(__mediumconst)
  1068  001538  22F8               	addwfc	tblptru
  1069  00153A  0008               	tblrd	*
  1070                           	
  1071  00153C  0101               	movlb	1	; () banked
  1072  00153E  CFF5 F12C          	movff	tablat,(?_LCD_Write)
  1073  001542  EC3F  F013         	call	_LCD_Write	;wreg free
  1074  001546  0101               	movlb	1	; () banked
  1075  001548  0101               	movlb	1	; () banked
  1076  00154A  4B12               	infsnz	((unlock@i))&0ffh
  1077  00154C  2B13               	incf	((unlock@i+1))&0ffh
  1078  00154E  0101               	movlb	1	; () banked
  1079  001550  0101               	movlb	1	; () banked
  1080  001552  5113               	movf	((unlock@i+1))&0ffh,w
  1081  001554  0A80               	xorlw	80h
  1082  001556  0F80               	addlw	-((0)^80h)
  1083  001558  0E14               	movlw	014h
  1084  00155A  B4D8               	btfsc	status,2
  1085  00155C  5D12               	subwf	((unlock@i))&0ffh,w
  1086  00155E  A0D8               	btfss	status,0
  1087  001560  D001               	goto	u3121
  1088  001562  D001               	goto	u3120
  1089  001564                     u3121:
  1090  001564  D7DF               	goto	l227
  1091  001566                     u3120:
  1092                           	
  1093  001566                     l228:		; BSR set to: ?
  1094                           
  1095                           	line	135
  1096                           ;Lock.C: 135: Wait_ms(3000);
  1097  001566  0EB8               	movlw	low(0BB8h)
  1098  001568  0101               	movlb	1	; () banked
  1099  00156A  0101               	movlb	1	; () banked
  1100  00156C  6F1E               	movwf	((?_Wait_ms))&0ffh
  1101  00156E  0E0B               	movlw	high(0BB8h)
  1102  001570  0101               	movlb	1	; () banked
  1103  001572  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  1104  001574  EC61  F012         	call	_Wait_ms	;wreg free
  1105                           	line	136
  1106                           ;Lock.C: 136: screenClear();
  1107  001578  ECC9  F00D         	call	_screenClear	;wreg free
  1108                           	line	137
  1109                           ;Lock.C: 137: move(REF);
  1110  00157C  C110  F116         	movff	(unlock@REF),(?_move)
  1111  001580  C111  F117         	movff	(unlock@REF+1),(?_move+1)
  1112  001584  EC15  F010         	call	_move	;wreg free
  1113                           	line	138
  1114                           ;Lock.C: 138: }
  1115  001588  D0A7               	goto	l230
  1116                           	line	139
  1117                           	
  1118  00158A                     l223:		; BSR set to: ?
  1119                           
  1120                           	line	140
  1121                           ;Lock.C: 139: else{
  1122                           ;Lock.C: 140: LCD_Move(0,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSG0[i]);
  1123  00158A  0101               	movlb	1	; () banked
  1124  00158C  6F14               	movwf	(??_unlock+4+0)&0ffh
  1125  00158E  0E00               	movlw	low(0)
  1126  001590  0101               	movlb	1	; () banked
  1127  001592  0101               	movlb	1	; () banked
  1128  001594  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1129  001596  0101               	movlb	1	; () banked
  1130  001598  5114               	movf	(??_unlock+4+0)&0ffh,w
  1131  00159A  0101               	movlb	1	; () banked
  1132  00159C  6F15               	movwf	(??_unlock+5+0)&0ffh
  1133  00159E  0E00               	movlw	low(0)
  1134  0015A0  0101               	movlb	1	; () banked
  1135  0015A2  0101               	movlb	1	; () banked
  1136  0015A4  6F1A               	movwf	((?_LCD_Move))&0ffh
  1137  0015A6  0101               	movlb	1	; () banked
  1138  0015A8  5115               	movf	(??_unlock+5+0)&0ffh,w
  1139  0015AA  EC1F  F012         	call	_LCD_Move	;wreg free
  1140  0015AE  0E00               	movlw	low(0)
  1141  0015B0  0101               	movlb	1	; () banked
  1142  0015B2  0101               	movlb	1	; () banked
  1143  0015B4  6F12               	movwf	((unlock@i))&0ffh
  1144  0015B6  0E00               	movlw	high(0)
  1145  0015B8  0101               	movlb	1	; () banked
  1146  0015BA  6F13               	movwf	((unlock@i+1))&0ffh
  1147  0015BC  0101               	movlb	1	; () banked
  1148  0015BE  0101               	movlb	1	; () banked
  1149  0015C0  5113               	movf	((unlock@i+1))&0ffh,w
  1150  0015C2  0A80               	xorlw	80h
  1151  0015C4  0F80               	addlw	-((0)^80h)
  1152  0015C6  0E14               	movlw	014h
  1153  0015C8  B4D8               	btfsc	status,2
  1154  0015CA  5D12               	subwf	((unlock@i))&0ffh,w
  1155  0015CC  A0D8               	btfss	status,0
  1156  0015CE  D001               	goto	u3131
  1157  0015D0  D001               	goto	u3130
  1158  0015D2                     u3131:
  1159  0015D2  D001               	goto	l231
  1160  0015D4                     u3130:
  1161  0015D4  D021               	goto	l232
  1162                           	
  1163  0015D6                     l231:		; BSR set to: ?
  1164                           
  1165  0015D6  0E01               	movlw	low((_MSG0))
  1166  0015D8  0101               	movlb	1	; () banked
  1167  0015DA  0101               	movlb	1	; () banked
  1168  0015DC  2512               	addwf	((unlock@i))&0ffh,w
  1169  0015DE  6EF6               	movwf	tblptrl
  1170  0015E0  6AF7               	clrf	tblptrh
  1171  0015E2  0E10               	movlw	high((_MSG0))
  1172  0015E4  22F7               	addwfc	tblptrh
  1173  0015E6  6AF8               	clrf	tblptru
  1174  0015E8  0E00               	movlw	low highword(__mediumconst)
  1175  0015EA  22F8               	addwfc	tblptru
  1176  0015EC  0008               	tblrd	*
  1177                           	
  1178  0015EE  0101               	movlb	1	; () banked
  1179  0015F0  CFF5 F12C          	movff	tablat,(?_LCD_Write)
  1180  0015F4  EC3F  F013         	call	_LCD_Write	;wreg free
  1181  0015F8  0101               	movlb	1	; () banked
  1182  0015FA  0101               	movlb	1	; () banked
  1183  0015FC  4B12               	infsnz	((unlock@i))&0ffh
  1184  0015FE  2B13               	incf	((unlock@i+1))&0ffh
  1185  001600  0101               	movlb	1	; () banked
  1186  001602  0101               	movlb	1	; () banked
  1187  001604  5113               	movf	((unlock@i+1))&0ffh,w
  1188  001606  0A80               	xorlw	80h
  1189  001608  0F80               	addlw	-((0)^80h)
  1190  00160A  0E14               	movlw	014h
  1191  00160C  B4D8               	btfsc	status,2
  1192  00160E  5D12               	subwf	((unlock@i))&0ffh,w
  1193  001610  A0D8               	btfss	status,0
  1194  001612  D001               	goto	u3141
  1195  001614  D001               	goto	u3140
  1196  001616                     u3141:
  1197  001616  D7DF               	goto	l231
  1198  001618                     u3140:
  1199                           	
  1200  001618                     l232:		; BSR set to: ?
  1201                           
  1202                           	line	141
  1203                           ;Lock.C: 141: LCD_Move(1,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSG1[i]);
  1204  001618  0101               	movlb	1	; () banked
  1205  00161A  6F14               	movwf	(??_unlock+4+0)&0ffh
  1206  00161C  0E00               	movlw	low(0)
  1207  00161E  0101               	movlb	1	; () banked
  1208  001620  0101               	movlb	1	; () banked
  1209  001622  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  1210  001624  0101               	movlb	1	; () banked
  1211  001626  5114               	movf	(??_unlock+4+0)&0ffh,w
  1212  001628  0101               	movlb	1	; () banked
  1213  00162A  6F15               	movwf	(??_unlock+5+0)&0ffh
  1214  00162C  0E01               	movlw	low(01h)
  1215  00162E  0101               	movlb	1	; () banked
  1216  001630  0101               	movlb	1	; () banked
  1217  001632  6F1A               	movwf	((?_LCD_Move))&0ffh
  1218  001634  0101               	movlb	1	; () banked
  1219  001636  5115               	movf	(??_unlock+5+0)&0ffh,w
  1220  001638  EC1F  F012         	call	_LCD_Move	;wreg free
  1221  00163C  0E00               	movlw	low(0)
  1222  00163E  0101               	movlb	1	; () banked
  1223  001640  0101               	movlb	1	; () banked
  1224  001642  6F12               	movwf	((unlock@i))&0ffh
  1225  001644  0E00               	movlw	high(0)
  1226  001646  0101               	movlb	1	; () banked
  1227  001648  6F13               	movwf	((unlock@i+1))&0ffh
  1228  00164A  0101               	movlb	1	; () banked
  1229  00164C  0101               	movlb	1	; () banked
  1230  00164E  5113               	movf	((unlock@i+1))&0ffh,w
  1231  001650  0A80               	xorlw	80h
  1232  001652  0F80               	addlw	-((0)^80h)
  1233  001654  0E14               	movlw	014h
  1234  001656  B4D8               	btfsc	status,2
  1235  001658  5D12               	subwf	((unlock@i))&0ffh,w
  1236  00165A  A0D8               	btfss	status,0
  1237  00165C  D001               	goto	u3151
  1238  00165E  D001               	goto	u3150
  1239  001660                     u3151:
  1240  001660  D001               	goto	l234
  1241  001662                     u3150:
  1242  001662  D021               	goto	l235
  1243                           	
  1244  001664                     l234:		; BSR set to: ?
  1245                           
  1246  001664  0E2B               	movlw	low((_MSG1))
  1247  001666  0101               	movlb	1	; () banked
  1248  001668  0101               	movlb	1	; () banked
  1249  00166A  2512               	addwf	((unlock@i))&0ffh,w
  1250  00166C  6EF6               	movwf	tblptrl
  1251  00166E  6AF7               	clrf	tblptrh
  1252  001670  0E10               	movlw	high((_MSG1))
  1253  001672  22F7               	addwfc	tblptrh
  1254  001674  6AF8               	clrf	tblptru
  1255  001676  0E00               	movlw	low highword(__mediumconst)
  1256  001678  22F8               	addwfc	tblptru
  1257  00167A  0008               	tblrd	*
  1258                           	
  1259  00167C  0101               	movlb	1	; () banked
  1260  00167E  CFF5 F12C          	movff	tablat,(?_LCD_Write)
  1261  001682  EC3F  F013         	call	_LCD_Write	;wreg free
  1262  001686  0101               	movlb	1	; () banked
  1263  001688  0101               	movlb	1	; () banked
  1264  00168A  4B12               	infsnz	((unlock@i))&0ffh
  1265  00168C  2B13               	incf	((unlock@i+1))&0ffh
  1266  00168E  0101               	movlb	1	; () banked
  1267  001690  0101               	movlb	1	; () banked
  1268  001692  5113               	movf	((unlock@i+1))&0ffh,w
  1269  001694  0A80               	xorlw	80h
  1270  001696  0F80               	addlw	-((0)^80h)
  1271  001698  0E14               	movlw	014h
  1272  00169A  B4D8               	btfsc	status,2
  1273  00169C  5D12               	subwf	((unlock@i))&0ffh,w
  1274  00169E  A0D8               	btfss	status,0
  1275  0016A0  D001               	goto	u3161
  1276  0016A2  D001               	goto	u3160
  1277  0016A4                     u3161:
  1278  0016A4  D7DF               	goto	l234
  1279  0016A6                     u3160:
  1280                           	
  1281  0016A6                     l235:		; BSR set to: ?
  1282                           
  1283                           	line	143
  1284                           ;Lock.C: 143: playNote(22727, 15169, 11363);
  1285  0016A6  0E63               	movlw	low(02C63h)
  1286  0016A8  0101               	movlb	1	; () banked
  1287  0016AA  0101               	movlb	1	; () banked
  1288  0016AC  6F1A               	movwf	(0+(?_playNote+04h))&0ffh
  1289  0016AE  0E2C               	movlw	high(02C63h)
  1290  0016B0  0101               	movlb	1	; () banked
  1291  0016B2  6F1B               	movwf	(1+(?_playNote+04h))&0ffh
  1292  0016B4  0E41               	movlw	low(03B41h)
  1293  0016B6  0101               	movlb	1	; () banked
  1294  0016B8  0101               	movlb	1	; () banked
  1295  0016BA  6F18               	movwf	(0+(?_playNote+02h))&0ffh
  1296  0016BC  0E3B               	movlw	high(03B41h)
  1297  0016BE  0101               	movlb	1	; () banked
  1298  0016C0  6F19               	movwf	(1+(?_playNote+02h))&0ffh
  1299  0016C2  0EC7               	movlw	low(058C7h)
  1300  0016C4  0101               	movlb	1	; () banked
  1301  0016C6  0101               	movlb	1	; () banked
  1302  0016C8  6F16               	movwf	((?_playNote))&0ffh
  1303  0016CA  0E58               	movlw	high(058C7h)
  1304  0016CC  0101               	movlb	1	; () banked
  1305  0016CE  6F17               	movwf	((?_playNote+1))&0ffh
  1306  0016D0  EC20  F013         	call	_playNote	;wreg free
  1307                           	line	144
  1308                           ;Lock.C: 144: screenClear();
  1309  0016D4  ECC9  F00D         	call	_screenClear	;wreg free
  1310                           	line	145
  1311                           	
  1312  0016D8                     l230:		; BSR set to: ?
  1313                           
  1314                           	line	148
  1315                           ;Lock.C: 145: }
  1316                           ;Lock.C: 148: if(code == lockCode){
  1317  0016D8  0E7F               	movlw	low((_lockCode))
  1318  0016DA  6EF6               	movwf	tblptrl
  1319  0016DC  0E10               	movlw	high((_lockCode))
  1320  0016DE  6EF7               	movwf	tblptrh
  1321  0016E0  0E00               	movlw	low highword((_lockCode))
  1322  0016E2  6EF8               	movwf	tblptru
  1323  0016E4  0009               	tblrd	*+
  1324                           	
  1325  0016E6  CFF5 F114          	movff	tablat,??_unlock+4+0
  1326  0016EA  0009               	tblrd	*+
  1327                           	
  1328  0016EC  CFF5 F115          	movff	tablat,??_unlock+4+0+1
  1329  0016F0  0101               	movlb	1	; () banked
  1330  0016F2  5115               	movf	(??_unlock+4+1)&0ffh,w
  1331  0016F4  0101               	movlb	1	; () banked
  1332  0016F6  0101               	movlb	1	; () banked
  1333  0016F8  190F               	xorwf	((unlock@code+1))&0ffh,w
  1334  0016FA  E105               	bnz	u3175
  1335  0016FC  0101               	movlb	1	; () banked
  1336  0016FE  5114               	movf	(??_unlock+4+0)&0ffh,w
  1337  001700  0101               	movlb	1	; () banked
  1338  001702  0101               	movlb	1	; () banked
  1339  001704  190E               	xorwf	((unlock@code))&0ffh,w
  1340  001706                     u3175:
  1341                           
  1342  001706  A4D8               	btfss	status,2
  1343  001708  D001               	goto	u3171
  1344  00170A  D001               	goto	u3170
  1345  00170C                     u3171:
  1346  00170C  D014               	goto	l237
  1347  00170E                     u3170:
  1348                           	line	149
  1349                           ;Lock.C: 149: Wait_ms(3000);
  1350  00170E  0EB8               	movlw	low(0BB8h)
  1351  001710  0101               	movlb	1	; () banked
  1352  001712  0101               	movlb	1	; () banked
  1353  001714  6F1E               	movwf	((?_Wait_ms))&0ffh
  1354  001716  0E0B               	movlw	high(0BB8h)
  1355  001718  0101               	movlb	1	; () banked
  1356  00171A  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  1357  00171C  EC61  F012         	call	_Wait_ms	;wreg free
  1358                           	line	150
  1359                           ;Lock.C: 150: move(0);
  1360  001720  0E00               	movlw	low(0)
  1361  001722  0101               	movlb	1	; () banked
  1362  001724  0101               	movlb	1	; () banked
  1363  001726  6F16               	movwf	((?_move))&0ffh
  1364  001728  0E00               	movlw	high(0)
  1365  00172A  0101               	movlb	1	; () banked
  1366  00172C  6F17               	movwf	((?_move+1))&0ffh
  1367  00172E  EC15  F010         	call	_move	;wreg free
  1368                           	line	151
  1369                           ;Lock.C: 151: screenClear();
  1370  001732  ECC9  F00D         	call	_screenClear	;wreg free
  1371                           	line	152
  1372                           	
  1373  001736                     l237:		; BSR set to: ?
  1374                           
  1375                           	line	153
  1376                           ;Lock.C: 152: }
  1377                           ;Lock.C: 153: return;
  1378  001736  D000               	goto	l222
  1379                           	line	154
  1380                           ;Lock.C: 154: }
  1381  001738                     l222:
  1382                           			; BSR set to: ?
  1383                           
  1384  001738  0012               	return
  1385                           	opt stack 0
  1386                           GLOBAL __end_of_unlock
  1387  00173A                     	__end_of_unlock:
  1388                           	FNSIZE	_unlock,6,2
  1389                           ; =============== function _unlock ends ========
                                 ====
  1390                           
  1391                           	signat	_unlock,4216
  1392                           	global	_ReadKey
  1393                           	global	??_ReadKey
  1394                           	global	?_ReadKey
  1395                                   psect   text3,class=CODE,space=0,reloc=2
  1396                           
  1397                           	opt lm
  1398                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
  1399                           	line	81
  1400  000000                     	__size_of_ReadKey	equ	__end_of_ReadKey-_ReadKey
  1401                           ;Lock.C: 80: char ReadKey(void)
  1402                           ;Lock.C: 81: {
  1403                           	
  1404  0025F4                     _ReadKey:		; BSR set to: ?
  1405                           
  1406                           	opt stack 29
  1407                           	line	83
  1408                           	
  1409  0025F4                     l203:		; BSR set to: ?
  1410                           
  1411                           	line	84
  1412                           ;Lock.C: 84: X = GetKey();
  1413  0025F4  EC9D  F00B         	call	_GetKey	;wreg free
  1414  0025F8  0101               	movlb	1	; () banked
  1415  0025FA  0101               	movlb	1	; () banked
  1416  0025FC  6F0F               	movwf	((ReadKey@X))&0ffh
  1417                           	line	85
  1418                           ;Lock.C: 85: } while(X > 20);
  1419  0025FE  0E15               	movlw	(015h)&0ffh
  1420  002600  0101               	movlb	1	; () banked
  1421  002602  0101               	movlb	1	; () banked
  1422  002604  610F               	cpfslt	((ReadKey@X))&0ffh
  1423  002606  D001               	goto	u3521
  1424  002608  D001               	goto	u3520
  1425  00260A                     u3521:
  1426  00260A  D7F4               	goto	l203
  1427  00260C                     u3520:
  1428                           	
  1429  00260C                     l202:		; BSR set to: ?
  1430                           
  1431                           	line	86
  1432                           ;Lock.C: 86: do {
  1433                           	
  1434  00260C                     l206:		; BSR set to: ?
  1435                           
  1436                           	line	87
  1437                           ;Lock.C: 87: Y= GetKey();
  1438  00260C  EC9D  F00B         	call	_GetKey	;wreg free
  1439  002610  0101               	movlb	1	; () banked
  1440  002612  0101               	movlb	1	; () banked
  1441  002614  6F0E               	movwf	((ReadKey@Y))&0ffh
  1442                           	line	88
  1443                           ;Lock.C: 88: } while(Y < 20);
  1444  002616  0E13               	movlw	(014h-1)
  1445  002618  0101               	movlb	1	; () banked
  1446  00261A  0101               	movlb	1	; () banked
  1447  00261C  650E               	cpfsgt	((ReadKey@Y))&0ffh
  1448  00261E  D001               	goto	u3531
  1449  002620  D001               	goto	u3530
  1450  002622                     u3531:
  1451  002622  D7F4               	goto	l206
  1452  002624                     u3530:
  1453                           	
  1454  002624                     l205:		; BSR set to: ?
  1455                           
  1456                           	line	89
  1457                           ;Lock.C: 89: Wait_ms(100);
  1458  002624  0E64               	movlw	low(064h)
  1459  002626  0101               	movlb	1	; () banked
  1460  002628  0101               	movlb	1	; () banked
  1461  00262A  6F1E               	movwf	((?_Wait_ms))&0ffh
  1462  00262C  0E00               	movlw	high(064h)
  1463  00262E  0101               	movlb	1	; () banked
  1464  002630  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  1465  002632  EC61  F012         	call	_Wait_ms	;wreg free
  1466                           	line	90
  1467                           ;Lock.C: 90: return(X);
  1468  002636  0101               	movlb	1	; () banked
  1469  002638  0101               	movlb	1	; () banked
  1470  00263A  510F               	movf	((ReadKey@X))&0ffh,w
  1471  00263C  D000               	goto	l200
  1472                           	line	91
  1473                           ;Lock.C: 91: }
  1474  00263E                     l200:
  1475                           			; BSR set to: ?
  1476                           
  1477  00263E  0012               	return
  1478                           	opt stack 0
  1479                           GLOBAL __end_of_ReadKey
  1480  002640                     	__end_of_ReadKey:
  1481                           	FNSIZE	_ReadKey,2,0
  1482                           ; =============== function _ReadKey ends =======
                                 =====
  1483                           
  1484                           	signat	_ReadKey,89
  1485                           	global	_LCD_Init
  1486                           	global	??_LCD_Init
  1487                           	global	?_LCD_Init
  1488                                   psect   text4,class=CODE,space=0,reloc=2
  1489                           
  1490                           	opt lm
  1491                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  1492                           	line	73
  1493  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
  1494                           ;lcd_portd.c: 72: void LCD_Init(void)
  1495                           ;lcd_portd.c: 73: {
  1496                           	
  1497  0023AC                     _LCD_Init:		; BSR set to: ?
  1498                           
  1499                           	opt stack 29
  1500                           	line	74
  1501  0023AC  0E00               	movlw	low(0)
  1502  0023AE  6E95               	movwf	((c:3989)),c	;volatile
  1503                           	line	75
  1504                           ;lcd_portd.c: 75: RD1 = 0;
  1505  0023B0  9283               	bcf	c:(31769/8),(31769)&7	;volatile
  1506                           	line	76
  1507                           ;lcd_portd.c: 76: LCD_Inst(0x33);
  1508  0023B2  0101               	movlb	1	; () banked
  1509  0023B4  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1510  0023B6  0E33               	movlw	low(033h)
  1511  0023B8  0101               	movlb	1	; () banked
  1512  0023BA  0101               	movlb	1	; () banked
  1513  0023BC  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1514  0023BE  0101               	movlb	1	; () banked
  1515  0023C0  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1516  0023C2  ECD3  F012         	call	_LCD_Inst	;wreg free
  1517                           	line	77
  1518                           ;lcd_portd.c: 77: LCD_Inst(0x32);
  1519  0023C6  0101               	movlb	1	; () banked
  1520  0023C8  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1521  0023CA  0E32               	movlw	low(032h)
  1522  0023CC  0101               	movlb	1	; () banked
  1523  0023CE  0101               	movlb	1	; () banked
  1524  0023D0  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1525  0023D2  0101               	movlb	1	; () banked
  1526  0023D4  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1527  0023D6  ECD3  F012         	call	_LCD_Inst	;wreg free
  1528                           	line	78
  1529                           ;lcd_portd.c: 78: LCD_Inst(0x28);
  1530  0023DA  0101               	movlb	1	; () banked
  1531  0023DC  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1532  0023DE  0E28               	movlw	low(028h)
  1533  0023E0  0101               	movlb	1	; () banked
  1534  0023E2  0101               	movlb	1	; () banked
  1535  0023E4  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1536  0023E6  0101               	movlb	1	; () banked
  1537  0023E8  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1538  0023EA  ECD3  F012         	call	_LCD_Inst	;wreg free
  1539                           	line	79
  1540                           ;lcd_portd.c: 79: LCD_Inst(0x0E);
  1541  0023EE  0101               	movlb	1	; () banked
  1542  0023F0  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1543  0023F2  0E0E               	movlw	low(0Eh)
  1544  0023F4  0101               	movlb	1	; () banked
  1545  0023F6  0101               	movlb	1	; () banked
  1546  0023F8  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1547  0023FA  0101               	movlb	1	; () banked
  1548  0023FC  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1549  0023FE  ECD3  F012         	call	_LCD_Inst	;wreg free
  1550                           	line	80
  1551                           ;lcd_portd.c: 80: LCD_Inst(0x01);
  1552  002402  0101               	movlb	1	; () banked
  1553  002404  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1554  002406  0E01               	movlw	low(01h)
  1555  002408  0101               	movlb	1	; () banked
  1556  00240A  0101               	movlb	1	; () banked
  1557  00240C  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1558  00240E  0101               	movlb	1	; () banked
  1559  002410  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1560  002412  ECD3  F012         	call	_LCD_Inst	;wreg free
  1561                           	line	81
  1562                           ;lcd_portd.c: 81: LCD_Inst(0x06);
  1563  002416  0101               	movlb	1	; () banked
  1564  002418  6F0E               	movwf	(??_LCD_Init+0+0)&0ffh
  1565  00241A  0E06               	movlw	low(06h)
  1566  00241C  0101               	movlb	1	; () banked
  1567  00241E  0101               	movlb	1	; () banked
  1568  002420  6F1C               	movwf	((?_LCD_Inst))&0ffh
  1569  002422  0101               	movlb	1	; () banked
  1570  002424  510E               	movf	(??_LCD_Init+0+0)&0ffh,w
  1571  002426  ECD3  F012         	call	_LCD_Inst	;wreg free
  1572                           	line	82
  1573                           ;lcd_portd.c: 82: Wait_ms(100);
  1574  00242A  0E64               	movlw	low(064h)
  1575  00242C  0101               	movlb	1	; () banked
  1576  00242E  0101               	movlb	1	; () banked
  1577  002430  6F1E               	movwf	((?_Wait_ms))&0ffh
  1578  002432  0E00               	movlw	high(064h)
  1579  002434  0101               	movlb	1	; () banked
  1580  002436  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  1581  002438  EC61  F012         	call	_Wait_ms	;wreg free
  1582                           	line	83
  1583                           ;lcd_portd.c: 83: }
  1584  00243C                     l129:
  1585                           			; BSR set to: ?
  1586                           
  1587  00243C  0012               	return
  1588                           	opt stack 0
  1589                           GLOBAL __end_of_LCD_Init
  1590  00243E                     	__end_of_LCD_Init:
  1591                           	FNSIZE	_LCD_Init,1,0
  1592                           ; =============== function _LCD_Init ends ======
                                 ======
  1593                           
  1594                           	signat	_LCD_Init,88
  1595                           	global	___awdiv
  1596                           	global	??___awdiv
  1597                           	global	?___awdiv
  1598                                   psect   text5,class=CODE,space=0,reloc=2
  1599                           
  1600                           	opt lm
  1601                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\awdiv.c"
  1602                           	line	5
  1603  000000                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1604                           	
  1605  00218A                     ___awdiv:		; BSR set to: ?
  1606                           
  1607                           	opt stack 29
  1608                           	line	9
  1609  00218A  0101               	movlb	1	; () banked
  1610  00218C  6F16               	movwf	(??___awdiv+4+0)&0ffh
  1611  00218E  0E00               	movlw	low(0)
  1612  002190  0101               	movlb	1	; () banked
  1613  002192  0101               	movlb	1	; () banked
  1614  002194  6F13               	movwf	((___awdiv@sign))&0ffh
  1615  002196  0101               	movlb	1	; () banked
  1616  002198  5116               	movf	(??___awdiv+4+0)&0ffh,w
  1617                           	line	10
  1618  00219A  0101               	movlb	1	; () banked
  1619  00219C  0101               	movlb	1	; () banked
  1620  00219E  AF11               	btfss	((___awdiv@divisor+1))&0ffh,7
  1621  0021A0  D001               	goto	u1691
  1622  0021A2  D001               	goto	u1690
  1623  0021A4                     u1691:
  1624  0021A4  D00F               	goto	l308
  1625  0021A6                     u1690:
  1626                           	line	11
  1627  0021A6  0101               	movlb	1	; () banked
  1628  0021A8  0101               	movlb	1	; () banked
  1629  0021AA  6D10               	negf	((___awdiv@divisor))&0ffh
  1630  0021AC  0101               	movlb	1	; () banked
  1631  0021AE  1F11               	comf	((___awdiv@divisor+1))&0ffh
  1632  0021B0  B0D8               	btfsc	status,0
  1633  0021B2  2B11               	incf	((___awdiv@divisor+1))&0ffh
  1634                           	line	12
  1635  0021B4  0101               	movlb	1	; () banked
  1636  0021B6  6F16               	movwf	(??___awdiv+4+0)&0ffh
  1637  0021B8  0E01               	movlw	low(01h)
  1638  0021BA  0101               	movlb	1	; () banked
  1639  0021BC  0101               	movlb	1	; () banked
  1640  0021BE  6F13               	movwf	((___awdiv@sign))&0ffh
  1641  0021C0  0101               	movlb	1	; () banked
  1642  0021C2  5116               	movf	(??___awdiv+4+0)&0ffh,w
  1643                           	line	13
  1644                           	
  1645  0021C4                     l308:		; BSR set to: ?
  1646                           
  1647                           	line	14
  1648  0021C4  0101               	movlb	1	; () banked
  1649  0021C6  0101               	movlb	1	; () banked
  1650  0021C8  AF0F               	btfss	((___awdiv@dividend+1))&0ffh,7
  1651  0021CA  D001               	goto	u1701
  1652  0021CC  D001               	goto	u1700
  1653  0021CE                     u1701:
  1654  0021CE  D00B               	goto	l309
  1655  0021D0                     u1700:
  1656                           	line	15
  1657  0021D0  0101               	movlb	1	; () banked
  1658  0021D2  0101               	movlb	1	; () banked
  1659  0021D4  6D0E               	negf	((___awdiv@dividend))&0ffh
  1660  0021D6  0101               	movlb	1	; () banked
  1661  0021D8  1F0F               	comf	((___awdiv@dividend+1))&0ffh
  1662  0021DA  B0D8               	btfsc	status,0
  1663  0021DC  2B0F               	incf	((___awdiv@dividend+1))&0ffh
  1664                           	line	16
  1665  0021DE  0E01               	movlw	(01h)&0ffh
  1666  0021E0  0101               	movlb	1	; () banked
  1667  0021E2  0101               	movlb	1	; () banked
  1668  0021E4  1B13               	xorwf	((___awdiv@sign))&0ffh
  1669                           	line	17
  1670                           	
  1671  0021E6                     l309:		; BSR set to: ?
  1672                           
  1673                           	line	18
  1674  0021E6  0E00               	movlw	low(0)
  1675  0021E8  0101               	movlb	1	; () banked
  1676  0021EA  0101               	movlb	1	; () banked
  1677  0021EC  6F14               	movwf	((___awdiv@quotient))&0ffh
  1678  0021EE  0E00               	movlw	high(0)
  1679  0021F0  0101               	movlb	1	; () banked
  1680  0021F2  6F15               	movwf	((___awdiv@quotient+1))&0ffh
  1681                           	line	19
  1682  0021F4  0101               	movlb	1	; () banked
  1683  0021F6  0101               	movlb	1	; () banked
  1684  0021F8  5111               	movf	((___awdiv@divisor+1))&0ffh,w
  1685  0021FA  1110               	iorwf ((___awdiv@divisor))&0ffh,w
  1686                           
  1687  0021FC  B4D8               	btfsc	status,2
  1688  0021FE  D001               	goto	u1711
  1689  002200  D001               	goto	u1710
  1690  002202                     u1711:
  1691  002202  D047               	goto	l310
  1692  002204                     u1710:
  1693                           	line	20
  1694  002204  0101               	movlb	1	; () banked
  1695  002206  6F16               	movwf	(??___awdiv+4+0)&0ffh
  1696  002208  0E01               	movlw	low(01h)
  1697  00220A  0101               	movlb	1	; () banked
  1698  00220C  0101               	movlb	1	; () banked
  1699  00220E  6F12               	movwf	((___awdiv@counter))&0ffh
  1700  002210  0101               	movlb	1	; () banked
  1701  002212  5116               	movf	(??___awdiv+4+0)&0ffh,w
  1702                           	line	21
  1703  002214  D009               	goto	l311
  1704                           	
  1705  002216                     l312:		; BSR set to: ?
  1706                           
  1707                           	line	22
  1708  002216  0101               	movlb	1	; () banked
  1709  002218  90D8               	bcf	status,0
  1710  00221A  0101               	movlb	1	; () banked
  1711  00221C  3710               	rlcf	((___awdiv@divisor))&0ffh
  1712  00221E  0101               	movlb	1	; () banked
  1713  002220  3711               	rlcf	((___awdiv@divisor+1))&0ffh
  1714                           	line	23
  1715  002222  0101               	movlb	1	; () banked
  1716  002224  0101               	movlb	1	; () banked
  1717  002226  2B12               	incf	((___awdiv@counter))&0ffh
  1718                           	line	24
  1719                           	
  1720  002228                     l311:		; BSR set to: ?
  1721                           
  1722                           	line	21
  1723  002228  0101               	movlb	1	; () banked
  1724                           	
  1725  00222A  0101               	movlb	1	; () banked
  1726  00222C  AF11               	btfss	((___awdiv@divisor+1))&0ffh,(15)&7
  1727  00222E  D001               	goto	u1721
  1728  002230  D001               	goto	u1720
  1729  002232                     u1721:
  1730  002232  D7F1               	goto	l312
  1731  002234                     u1720:
  1732                           	
  1733  002234                     l313:		; BSR set to: ?
  1734                           
  1735                           	line	25
  1736                           	
  1737  002234                     l316:		; BSR set to: ?
  1738                           
  1739                           	line	26
  1740  002234  0101               	movlb	1	; () banked
  1741  002236  90D8               	bcf	status,0
  1742  002238  0101               	movlb	1	; () banked
  1743  00223A  3714               	rlcf	((___awdiv@quotient))&0ffh
  1744  00223C  0101               	movlb	1	; () banked
  1745  00223E  3715               	rlcf	((___awdiv@quotient+1))&0ffh
  1746                           	line	27
  1747  002240  0101               	movlb	1	; () banked
  1748  002242  0101               	movlb	1	; () banked
  1749  002244  5110               	movf	((___awdiv@divisor))&0ffh,w
  1750  002246  0101               	movlb	1	; () banked
  1751  002248  0101               	movlb	1	; () banked
  1752  00224A  5D0E               	subwf	((___awdiv@dividend))&0ffh,w
  1753  00224C  0101               	movlb	1	; () banked
  1754  00224E  0101               	movlb	1	; () banked
  1755  002250  5111               	movf	((___awdiv@divisor+1))&0ffh,w
  1756  002252  0101               	movlb	1	; () banked
  1757  002254  0101               	movlb	1	; () banked
  1758  002256  590F               	subwfb	((___awdiv@dividend+1))&0ffh,w
  1759  002258  A0D8               	btfss	status,0
  1760  00225A  D001               	goto	u1731
  1761  00225C  D001               	goto	u1730
  1762  00225E                     u1731:
  1763  00225E  D00F               	goto	l317
  1764  002260                     u1730:
  1765                           	line	28
  1766  002260  0101               	movlb	1	; () banked
  1767  002262  0101               	movlb	1	; () banked
  1768  002264  5110               	movf	((___awdiv@divisor))&0ffh,w
  1769  002266  0101               	movlb	1	; () banked
  1770  002268  0101               	movlb	1	; () banked
  1771  00226A  5F0E               	subwf	((___awdiv@dividend))&0ffh
  1772  00226C  0101               	movlb	1	; () banked
  1773  00226E  0101               	movlb	1	; () banked
  1774  002270  5111               	movf	((___awdiv@divisor+1))&0ffh,w
  1775  002272  0101               	movlb	1	; () banked
  1776  002274  0101               	movlb	1	; () banked
  1777  002276  5B0F               	subwfb	((___awdiv@dividend+1))&0ffh
  1778                           
  1779                           	line	29
  1780  002278  0101               	movlb	1	; () banked
  1781  00227A  0101               	movlb	1	; () banked
  1782  00227C  8114               	bsf	(0+(0/8)+(___awdiv@quotient))&0ffh,(0)&7
  1783                           	line	30
  1784                           	
  1785  00227E                     l317:		; BSR set to: ?
  1786                           
  1787                           	line	31
  1788  00227E  0101               	movlb	1	; () banked
  1789  002280  90D8               	bcf	status,0
  1790  002282  0101               	movlb	1	; () banked
  1791  002284  3311               	rrcf	((___awdiv@divisor+1))&0ffh
  1792  002286  0101               	movlb	1	; () banked
  1793  002288  3310               	rrcf	((___awdiv@divisor))&0ffh
  1794                           	line	32
  1795  00228A  0101               	movlb	1	; () banked
  1796  00228C  0101               	movlb	1	; () banked
  1797  00228E  2F12               	decfsz	((___awdiv@counter))&0ffh
  1798                           	
  1799  002290  D7D1               	goto	l316
  1800                           	
  1801  002292                     l315:		; BSR set to: ?
  1802                           
  1803                           	line	33
  1804                           	
  1805  002292                     l310:		; BSR set to: ?
  1806                           
  1807                           	line	34
  1808  002292  0101               	movlb	1	; () banked
  1809  002294  0101               	movlb	1	; () banked
  1810  002296  5113               	movf	((___awdiv@sign))&0ffh,w
  1811  002298  B4D8               	btfsc	status,2
  1812  00229A  D001               	goto	u1741
  1813  00229C  D001               	goto	u1740
  1814  00229E                     u1741:
  1815  00229E  D007               	goto	l318
  1816  0022A0                     u1740:
  1817                           	line	35
  1818  0022A0  0101               	movlb	1	; () banked
  1819  0022A2  0101               	movlb	1	; () banked
  1820  0022A4  6D14               	negf	((___awdiv@quotient))&0ffh
  1821  0022A6  0101               	movlb	1	; () banked
  1822  0022A8  1F15               	comf	((___awdiv@quotient+1))&0ffh
  1823  0022AA  B0D8               	btfsc	status,0
  1824  0022AC  2B15               	incf	((___awdiv@quotient+1))&0ffh
  1825                           	
  1826  0022AE                     l318:		; BSR set to: ?
  1827                           
  1828                           	line	36
  1829  0022AE  C114  F10E         	movff	(___awdiv@quotient),(?___awdiv)
  1830  0022B2  C115  F10F         	movff	(___awdiv@quotient+1),(?___awdiv+1)
  1831  0022B6  D000               	goto	l307
  1832                           	line	37
  1833  0022B8                     l307:
  1834                           			; BSR set to: ?
  1835                           
  1836  0022B8  0012               	return
  1837                           	opt stack 0
  1838                           GLOBAL __end_of___awdiv
  1839  0022BA                     	__end_of___awdiv:
  1840                           	FNSIZE	___awdiv,5,4
  1841                           ; =============== function ___awdiv ends =======
                                 =====
  1842                           
  1843                           	signat	___awdiv,8314
  1844                           	global	_playNote
  1845                           	global	??_playNote
  1846                           	global	?_playNote
  1847                                   psect   text6,class=CODE,space=0,reloc=2
  1848                           
  1849                           	opt lm
  1850                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
  1851                           	line	94
  1852  000000                     	__size_of_playNote	equ	__end_of_playNote-_playN
                                 ote
  1853                           ;Lock.C: 94: void playNote(int f0, int f1, int f
                                 2){
  1854                           	
  1855  002640                     _playNote:		; BSR set to: ?
  1856                           
  1857                           	opt stack 28
  1858                           	line	95
  1859                           ;Lock.C: 95: PLAY = 1;
  1860  002640  0E01               	movlw	low(01h)
  1861  002642  6E00               	movwf	((c:0)),c
  1862  002644  0E00               	movlw	high(01h)
  1863  002646  6E01               	movwf	((c:0+1)),c
  1864                           	line	96
  1865                           ;Lock.C: 96: N0 = f0; N1 = f1; N2 = f2;
  1866  002648  C116  F006         	movff	(playNote@f0),(c:6)
  1867  00264C  C117  F007         	movff	(playNote@f0+1),(c:6+1)
  1868  002650  C118  F008         	movff	(playNote@f1),(c:8)
  1869  002654  C119  F009         	movff	(playNote@f1+1),(c:8+1)
  1870  002658  C11A  F004         	movff	(playNote@f2),(c:4)
  1871  00265C  C11B  F005         	movff	(playNote@f2+1),(c:4+1)
  1872                           	line	97
  1873                           ;Lock.C: 97: Wait_ms(2000);
  1874  002660  0ED0               	movlw	low(07D0h)
  1875  002662  0101               	movlb	1	; () banked
  1876  002664  0101               	movlb	1	; () banked
  1877  002666  6F1E               	movwf	((?_Wait_ms))&0ffh
  1878  002668  0E07               	movlw	high(07D0h)
  1879  00266A  0101               	movlb	1	; () banked
  1880  00266C  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  1881  00266E  EC61  F012         	call	_Wait_ms	;wreg free
  1882                           	line	98
  1883                           ;Lock.C: 98: PLAY =0;
  1884  002672  0E00               	movlw	low(0)
  1885  002674  6E00               	movwf	((c:0)),c
  1886  002676  0E00               	movlw	high(0)
  1887  002678  6E01               	movwf	((c:0+1)),c
  1888                           	line	99
  1889                           ;Lock.C: 99: return;
  1890  00267A  D000               	goto	l207
  1891                           	line	100
  1892                           ;Lock.C: 100: }
  1893  00267C                     l207:
  1894                           			; BSR set to: ?
  1895                           
  1896  00267C  0012               	return
  1897                           	opt stack 0
  1898                           GLOBAL __end_of_playNote
  1899  00267E                     	__end_of_playNote:
  1900                           	FNSIZE	_playNote,0,6
  1901                           ; =============== function _playNote ends ======
                                 ======
  1902                           
  1903                           	signat	_playNote,12408
  1904                           	global	_move
  1905                           	global	??_move
  1906                           	global	?_move
  1907                                   psect   text7,class=CODE,space=0,reloc=2
  1908                           
  1909                           	opt lm
  1910                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
  1911                           	line	103
  1912  000000                     	__size_of_move	equ	__end_of_move-_move
  1913                           ;Lock.C: 103: void move(int REF){
  1914                           	
  1915  00202A                     _move:		; BSR set to: ?
  1916                           
  1917                           	opt stack 28
  1918                           	line	105
  1919                           ;Lock.C: 104: unsigned int i;
  1920                           ;Lock.C: 105: while(1) {
  1921                           	
  1922  00202A                     l210:		; BSR set to: ?
  1923                           
  1924                           	line	106
  1925                           ;Lock.C: 106: if (STEP < REF) STEP = STEP + 1;
  1926  00202A  0101               	movlb	1	; () banked
  1927  00202C  0101               	movlb	1	; () banked
  1928  00202E  5116               	movf	((move@REF))&0ffh,w
  1929  002030  5C02               	subwf	((c:2)),c,w
  1930  002032  0101               	movlb	1	; () banked
  1931  002034  0101               	movlb	1	; () banked
  1932  002036  5117               	movf	((move@REF+1))&0ffh,w
  1933  002038  5803               	subwfb	((c:2+1)),c,w
  1934  00203A  B0D8               	btfsc	status,0
  1935  00203C  D001               	goto	u3051
  1936  00203E  D001               	goto	u3050
  1937  002040                     u3051:
  1938  002040  D006               	goto	l212
  1939  002042                     u3050:
  1940  002042  0E01               	movlw	low(01h)
  1941  002044  2402               	addwf	((c:2)),c,w
  1942                           	
  1943  002046  6E02               	movwf	((c:2)),c
  1944  002048  0E00               	movlw	high(01h)
  1945  00204A  2003               	addwfc	((c:2+1)),c,w
  1946  00204C  6E03               	movwf	1+((c:2)),c
  1947                           	
  1948  00204E                     l212:		; BSR set to: ?
  1949                           
  1950                           	line	107
  1951                           ;Lock.C: 107: if (STEP > REF) STEP = STEP - 1;
  1952  00204E  5002               	movf	((c:2)),c,w
  1953  002050  0101               	movlb	1	; () banked
  1954  002052  0101               	movlb	1	; () banked
  1955  002054  5D16               	subwf	((move@REF))&0ffh,w
  1956  002056  5003               	movf	((c:2+1)),c,w
  1957  002058  0101               	movlb	1	; () banked
  1958  00205A  0101               	movlb	1	; () banked
  1959  00205C  5917               	subwfb	((move@REF+1))&0ffh,w
  1960  00205E  B0D8               	btfsc	status,0
  1961  002060  D001               	goto	u3061
  1962  002062  D001               	goto	u3060
  1963  002064                     u3061:
  1964  002064  D006               	goto	l213
  1965  002066                     u3060:
  1966  002066  0EFF               	movlw	low(0FFFFh)
  1967  002068  2402               	addwf	((c:2)),c,w
  1968                           	
  1969  00206A  6E02               	movwf	((c:2)),c
  1970  00206C  0EFF               	movlw	high(0FFFFh)
  1971  00206E  2003               	addwfc	((c:2+1)),c,w
  1972  002070  6E03               	movwf	1+((c:2)),c
  1973                           	
  1974  002072                     l213:		; BSR set to: ?
  1975                           
  1976                           	line	108
  1977                           ;Lock.C: 108: if (STEP == REF) break;
  1978  002072  0101               	movlb	1	; () banked
  1979  002074  0101               	movlb	1	; () banked
  1980  002076  5117               	movf	((move@REF+1))&0ffh,w
  1981  002078  1803               	xorwf	((c:2+1)),c,w
  1982  00207A  E104               	bnz	u3075
  1983  00207C  0101               	movlb	1	; () banked
  1984  00207E  0101               	movlb	1	; () banked
  1985  002080  5116               	movf	((move@REF))&0ffh,w
  1986  002082  1802               	xorwf	((c:2)),c,w
  1987  002084                     u3075:
  1988                           
  1989  002084  A4D8               	btfss	status,2
  1990  002086  D001               	goto	u3071
  1991  002088  D001               	goto	u3070
  1992  00208A                     u3071:
  1993  00208A  D001               	goto	l214
  1994  00208C                     u3070:
  1995  00208C  D07C               	goto	l211
  1996                           	
  1997  00208E                     l214:		; BSR set to: ?
  1998                           
  1999                           	line	109
  2000                           ;Lock.C: 109: PORTA = TABLE[STEP % 4];
  2001  00208E  C002 F118          	movff	(c:2),??_move+0+0
  2002  002092  0E03               	movlw	03h
  2003  002094  0101               	movlb	1	; () banked
  2004  002096  1718               	andwf	(??_move+0+0)&0ffh
  2005  002098  0E0A               	movlw	low((c:10))
  2006  00209A  0101               	movlb	1	; () banked
  2007  00209C  2518               	addwf	(??_move+0+0)&0ffh,w
  2008  00209E  6EE9               	movwf	c:fsr0l
  2009  0020A0  6AEA               	clrf	1+c:fsr0l
  2010  0020A2  0E00               	movlw	high((c:10))
  2011  0020A4  22EA               	addwfc	1+c:fsr0l
  2012  0020A6  50EF               	movf	indf0,w
  2013  0020A8  6E80               	movwf	((c:3968)),c	;volatile
  2014                           	line	110
  2015                           ;Lock.C: 110: LCD_Move(0,8); LCD_Out(REF, 5, 0);
  2016  0020AA  0101               	movlb	1	; () banked
  2017  0020AC  6F18               	movwf	(??_move+0+0)&0ffh
  2018  0020AE  0E08               	movlw	low(08h)
  2019  0020B0  0101               	movlb	1	; () banked
  2020  0020B2  0101               	movlb	1	; () banked
  2021  0020B4  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2022  0020B6  0101               	movlb	1	; () banked
  2023  0020B8  5118               	movf	(??_move+0+0)&0ffh,w
  2024  0020BA  0101               	movlb	1	; () banked
  2025  0020BC  6F19               	movwf	(??_move+1+0)&0ffh
  2026  0020BE  0E00               	movlw	low(0)
  2027  0020C0  0101               	movlb	1	; () banked
  2028  0020C2  0101               	movlb	1	; () banked
  2029  0020C4  6F1A               	movwf	((?_LCD_Move))&0ffh
  2030  0020C6  0101               	movlb	1	; () banked
  2031  0020C8  5119               	movf	(??_move+1+0)&0ffh,w
  2032  0020CA  EC1F  F012         	call	_LCD_Move	;wreg free
  2033  0020CE  0101               	movlb	1	; () banked
  2034  0020D0  6F18               	movwf	(??_move+0+0)&0ffh
  2035  0020D2  0E00               	movlw	low(0)
  2036  0020D4  0101               	movlb	1	; () banked
  2037  0020D6  0101               	movlb	1	; () banked
  2038  0020D8  6F1F               	movwf	(0+(?_LCD_Out+05h))&0ffh
  2039  0020DA  0101               	movlb	1	; () banked
  2040  0020DC  5118               	movf	(??_move+0+0)&0ffh,w
  2041  0020DE  0101               	movlb	1	; () banked
  2042  0020E0  6F19               	movwf	(??_move+1+0)&0ffh
  2043  0020E2  0E05               	movlw	low(05h)
  2044  0020E4  0101               	movlb	1	; () banked
  2045  0020E6  0101               	movlb	1	; () banked
  2046  0020E8  6F1E               	movwf	(0+(?_LCD_Out+04h))&0ffh
  2047  0020EA  0101               	movlb	1	; () banked
  2048  0020EC  5119               	movf	(??_move+1+0)&0ffh,w
  2049  0020EE  0101               	movlb	1	; () banked
  2050  0020F0  0101               	movlb	1	; () banked
  2051  0020F2  C116  F11A         	movff	(move@REF),(?_LCD_Out)
  2052  0020F6  0101               	movlb	1	; () banked
  2053  0020F8  0101               	movlb	1	; () banked
  2054  0020FA  C117  F11B         	movff	(move@REF+1),(?_LCD_Out+1)
  2055  0020FE  0101               	movlb	1	; () banked
  2056  002100  0E00               	movlw	0
  2057  002102  0101               	movlb	1	; () banked
  2058  002104  BF1B               	btfsc	((?_LCD_Out+1))&0ffh,7
  2059  002106  0EFF               	movlw	-1
  2060  002108  0101               	movlb	1	; () banked
  2061  00210A  6F1C               	movwf	((?_LCD_Out+2))&0ffh
  2062  00210C  0101               	movlb	1	; () banked
  2063  00210E  6F1D               	movwf	((?_LCD_Out+3))&0ffh
  2064  002110  EC51  F00F         	call	_LCD_Out	;wreg free
  2065                           	line	111
  2066                           ;Lock.C: 111: LCD_Move(1,8); LCD_Out(STEP, 5, 0)
                                 ;
  2067  002114  0101               	movlb	1	; () banked
  2068  002116  6F18               	movwf	(??_move+0+0)&0ffh
  2069  002118  0E08               	movlw	low(08h)
  2070  00211A  0101               	movlb	1	; () banked
  2071  00211C  0101               	movlb	1	; () banked
  2072  00211E  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2073  002120  0101               	movlb	1	; () banked
  2074  002122  5118               	movf	(??_move+0+0)&0ffh,w
  2075  002124  0101               	movlb	1	; () banked
  2076  002126  6F19               	movwf	(??_move+1+0)&0ffh
  2077  002128  0E01               	movlw	low(01h)
  2078  00212A  0101               	movlb	1	; () banked
  2079  00212C  0101               	movlb	1	; () banked
  2080  00212E  6F1A               	movwf	((?_LCD_Move))&0ffh
  2081  002130  0101               	movlb	1	; () banked
  2082  002132  5119               	movf	(??_move+1+0)&0ffh,w
  2083  002134  EC1F  F012         	call	_LCD_Move	;wreg free
  2084  002138  0101               	movlb	1	; () banked
  2085  00213A  6F18               	movwf	(??_move+0+0)&0ffh
  2086  00213C  0E00               	movlw	low(0)
  2087  00213E  0101               	movlb	1	; () banked
  2088  002140  0101               	movlb	1	; () banked
  2089  002142  6F1F               	movwf	(0+(?_LCD_Out+05h))&0ffh
  2090  002144  0101               	movlb	1	; () banked
  2091  002146  5118               	movf	(??_move+0+0)&0ffh,w
  2092  002148  0101               	movlb	1	; () banked
  2093  00214A  6F19               	movwf	(??_move+1+0)&0ffh
  2094  00214C  0E05               	movlw	low(05h)
  2095  00214E  0101               	movlb	1	; () banked
  2096  002150  0101               	movlb	1	; () banked
  2097  002152  6F1E               	movwf	(0+(?_LCD_Out+04h))&0ffh
  2098  002154  0101               	movlb	1	; () banked
  2099  002156  5119               	movf	(??_move+1+0)&0ffh,w
  2100  002158  0101               	movlb	1	; () banked
  2101  00215A  C002 F11A          	movff	(c:2),(?_LCD_Out)
  2102  00215E  0101               	movlb	1	; () banked
  2103  002160  C003 F11B          	movff	(c:2+1),(?_LCD_Out+1)
  2104  002164  0101               	movlb	1	; () banked
  2105  002166  0101               	movlb	1	; () banked
  2106  002168  6B1C               	clrf	((?_LCD_Out+2))&0ffh
  2107  00216A  0101               	movlb	1	; () banked
  2108  00216C  6B1D               	clrf	((?_LCD_Out+3))&0ffh
  2109                           
  2110  00216E  EC51  F00F         	call	_LCD_Out	;wreg free
  2111                           	line	112
  2112                           ;Lock.C: 112: Wait_ms(30);
  2113  002172  0E1E               	movlw	low(01Eh)
  2114  002174  0101               	movlb	1	; () banked
  2115  002176  0101               	movlb	1	; () banked
  2116  002178  6F1E               	movwf	((?_Wait_ms))&0ffh
  2117  00217A  0E00               	movlw	high(01Eh)
  2118  00217C  0101               	movlb	1	; () banked
  2119  00217E  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  2120  002180  EC61  F012         	call	_Wait_ms	;wreg free
  2121                           	line	113
  2122                           	
  2123  002184                     l209:		; BSR set to: ?
  2124                           
  2125                           	line	105
  2126  002184  D752               	goto	l210
  2127                           	
  2128  002186                     l211:		; BSR set to: ?
  2129                           
  2130                           	line	114
  2131                           ;Lock.C: 113: }
  2132                           ;Lock.C: 114: return;
  2133  002186  D000               	goto	l208
  2134                           	line	115
  2135                           ;Lock.C: 115: }
  2136  002188                     l208:
  2137                           			; BSR set to: ?
  2138                           
  2139  002188  0012               	return
  2140                           	opt stack 0
  2141                           GLOBAL __end_of_move
  2142  00218A                     	__end_of_move:
  2143                           	FNSIZE	_move,2,2
  2144                           ; =============== function _move ends ==========
                                 ==
  2145                           
  2146                           	signat	_move,4216
  2147                           	global	_screenClear
  2148                           	global	??_screenClear
  2149                           	global	?_screenClear
  2150                                   psect   text8,class=CODE,space=0,reloc=2
  2151                           
  2152                           	opt lm
  2153                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
  2154                           	line	117
  2155  000000                     	__size_of_screenClear	equ	__end_of_screenClear-
                                 _screenClear
  2156                           ;Lock.C: 117: void screenClear(){
  2157                           	
  2158  001B92                     _screenClear:		; BSR set to: ?
  2159                           
  2160                           	opt stack 28
  2161                           	line	120
  2162  001B92  0101               	movlb	1	; () banked
  2163  001B94  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2164  001B96  0E00               	movlw	low(0)
  2165  001B98  0101               	movlb	1	; () banked
  2166  001B9A  0101               	movlb	1	; () banked
  2167  001B9C  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2168  001B9E  0101               	movlb	1	; () banked
  2169  001BA0  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2170  001BA2  0101               	movlb	1	; () banked
  2171  001BA4  6F19               	movwf	(??_screenClear+3+0)&0ffh
  2172  001BA6  0E00               	movlw	low(0)
  2173  001BA8  0101               	movlb	1	; () banked
  2174  001BAA  0101               	movlb	1	; () banked
  2175  001BAC  6F1A               	movwf	((?_LCD_Move))&0ffh
  2176  001BAE  0101               	movlb	1	; () banked
  2177  001BB0  5119               	movf	(??_screenClear+3+0)&0ffh,w
  2178  001BB2  EC1F  F012         	call	_LCD_Move	;wreg free
  2179  001BB6  0E00               	movlw	low(0)
  2180  001BB8  0101               	movlb	1	; () banked
  2181  001BBA  0101               	movlb	1	; () banked
  2182  001BBC  6F16               	movwf	((screenClear@i))&0ffh
  2183  001BBE  0E00               	movlw	high(0)
  2184  001BC0  0101               	movlb	1	; () banked
  2185  001BC2  6F17               	movwf	((screenClear@i+1))&0ffh
  2186  001BC4  0E14               	movlw	014h
  2187  001BC6  0101               	movlb	1	; () banked
  2188  001BC8  0101               	movlb	1	; () banked
  2189  001BCA  5D16               	subwf	((screenClear@i))&0ffh,w
  2190  001BCC  0E00               	movlw	0
  2191  001BCE  0101               	movlb	1	; () banked
  2192  001BD0  5917               	subwfb	((screenClear@i+1))&0ffh,w
  2193  001BD2  A0D8               	btfss	status,0
  2194  001BD4  D001               	goto	u3331
  2195  001BD6  D001               	goto	u3330
  2196  001BD8                     u3331:
  2197  001BD8  D001               	goto	l216
  2198  001BDA                     u3330:
  2199  001BDA  D020               	goto	l217
  2200                           	
  2201  001BDC                     l216:		; BSR set to: ?
  2202                           
  2203  001BDC  0E6A               	movlw	low((_MSGclear))
  2204  001BDE  0101               	movlb	1	; () banked
  2205  001BE0  0101               	movlb	1	; () banked
  2206  001BE2  2516               	addwf	((screenClear@i))&0ffh,w
  2207  001BE4  6EF6               	movwf	tblptrl
  2208  001BE6  6AF7               	clrf	tblptrh
  2209  001BE8  0E10               	movlw	high((_MSGclear))
  2210  001BEA  22F7               	addwfc	tblptrh
  2211  001BEC  6AF8               	clrf	tblptru
  2212  001BEE  0E00               	movlw	low highword(__mediumconst)
  2213  001BF0  22F8               	addwfc	tblptru
  2214  001BF2  0008               	tblrd	*
  2215                           	
  2216  001BF4  0101               	movlb	1	; () banked
  2217  001BF6  CFF5 F12C          	movff	tablat,(?_LCD_Write)
  2218  001BFA  EC3F  F013         	call	_LCD_Write	;wreg free
  2219  001BFE  0101               	movlb	1	; () banked
  2220  001C00  0101               	movlb	1	; () banked
  2221  001C02  4B16               	infsnz	((screenClear@i))&0ffh
  2222  001C04  2B17               	incf	((screenClear@i+1))&0ffh
  2223  001C06  0E14               	movlw	014h
  2224  001C08  0101               	movlb	1	; () banked
  2225  001C0A  0101               	movlb	1	; () banked
  2226  001C0C  5D16               	subwf	((screenClear@i))&0ffh,w
  2227  001C0E  0E00               	movlw	0
  2228  001C10  0101               	movlb	1	; () banked
  2229  001C12  5917               	subwfb	((screenClear@i+1))&0ffh,w
  2230  001C14  A0D8               	btfss	status,0
  2231  001C16  D001               	goto	u3341
  2232  001C18  D001               	goto	u3340
  2233  001C1A                     u3341:
  2234  001C1A  D7E0               	goto	l216
  2235  001C1C                     u3340:
  2236                           	
  2237  001C1C                     l217:		; BSR set to: ?
  2238                           
  2239                           	line	121
  2240                           ;Lock.C: 121: LCD_Move(1,0); for (i=0; i<20; i++
                                 ) LCD_Write(MSGclear[i]);
  2241  001C1C  0101               	movlb	1	; () banked
  2242  001C1E  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2243  001C20  0E00               	movlw	low(0)
  2244  001C22  0101               	movlb	1	; () banked
  2245  001C24  0101               	movlb	1	; () banked
  2246  001C26  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2247  001C28  0101               	movlb	1	; () banked
  2248  001C2A  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2249  001C2C  0101               	movlb	1	; () banked
  2250  001C2E  6F19               	movwf	(??_screenClear+3+0)&0ffh
  2251  001C30  0E01               	movlw	low(01h)
  2252  001C32  0101               	movlb	1	; () banked
  2253  001C34  0101               	movlb	1	; () banked
  2254  001C36  6F1A               	movwf	((?_LCD_Move))&0ffh
  2255  001C38  0101               	movlb	1	; () banked
  2256  001C3A  5119               	movf	(??_screenClear+3+0)&0ffh,w
  2257  001C3C  EC1F  F012         	call	_LCD_Move	;wreg free
  2258  001C40  0E00               	movlw	low(0)
  2259  001C42  0101               	movlb	1	; () banked
  2260  001C44  0101               	movlb	1	; () banked
  2261  001C46  6F16               	movwf	((screenClear@i))&0ffh
  2262  001C48  0E00               	movlw	high(0)
  2263  001C4A  0101               	movlb	1	; () banked
  2264  001C4C  6F17               	movwf	((screenClear@i+1))&0ffh
  2265  001C4E  0E14               	movlw	014h
  2266  001C50  0101               	movlb	1	; () banked
  2267  001C52  0101               	movlb	1	; () banked
  2268  001C54  5D16               	subwf	((screenClear@i))&0ffh,w
  2269  001C56  0E00               	movlw	0
  2270  001C58  0101               	movlb	1	; () banked
  2271  001C5A  5917               	subwfb	((screenClear@i+1))&0ffh,w
  2272  001C5C  A0D8               	btfss	status,0
  2273  001C5E  D001               	goto	u3351
  2274  001C60  D001               	goto	u3350
  2275  001C62                     u3351:
  2276  001C62  D001               	goto	l219
  2277  001C64                     u3350:
  2278  001C64  D020               	goto	l220
  2279                           	
  2280  001C66                     l219:		; BSR set to: ?
  2281                           
  2282  001C66  0E6A               	movlw	low((_MSGclear))
  2283  001C68  0101               	movlb	1	; () banked
  2284  001C6A  0101               	movlb	1	; () banked
  2285  001C6C  2516               	addwf	((screenClear@i))&0ffh,w
  2286  001C6E  6EF6               	movwf	tblptrl
  2287  001C70  6AF7               	clrf	tblptrh
  2288  001C72  0E10               	movlw	high((_MSGclear))
  2289  001C74  22F7               	addwfc	tblptrh
  2290  001C76  6AF8               	clrf	tblptru
  2291  001C78  0E00               	movlw	low highword(__mediumconst)
  2292  001C7A  22F8               	addwfc	tblptru
  2293  001C7C  0008               	tblrd	*
  2294                           	
  2295  001C7E  0101               	movlb	1	; () banked
  2296  001C80  CFF5 F12C          	movff	tablat,(?_LCD_Write)
  2297  001C84  EC3F  F013         	call	_LCD_Write	;wreg free
  2298  001C88  0101               	movlb	1	; () banked
  2299  001C8A  0101               	movlb	1	; () banked
  2300  001C8C  4B16               	infsnz	((screenClear@i))&0ffh
  2301  001C8E  2B17               	incf	((screenClear@i+1))&0ffh
  2302  001C90  0E14               	movlw	014h
  2303  001C92  0101               	movlb	1	; () banked
  2304  001C94  0101               	movlb	1	; () banked
  2305  001C96  5D16               	subwf	((screenClear@i))&0ffh,w
  2306  001C98  0E00               	movlw	0
  2307  001C9A  0101               	movlb	1	; () banked
  2308  001C9C  5917               	subwfb	((screenClear@i+1))&0ffh,w
  2309  001C9E  A0D8               	btfss	status,0
  2310  001CA0  D001               	goto	u3361
  2311  001CA2  D001               	goto	u3360
  2312  001CA4                     u3361:
  2313  001CA4  D7E0               	goto	l219
  2314  001CA6                     u3360:
  2315                           	
  2316  001CA6                     l220:		; BSR set to: ?
  2317                           
  2318                           	line	123
  2319                           ;Lock.C: 123: LCD_Move(0,0); LCD_Write('Y');
  2320  001CA6  0101               	movlb	1	; () banked
  2321  001CA8  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2322  001CAA  0E00               	movlw	low(0)
  2323  001CAC  0101               	movlb	1	; () banked
  2324  001CAE  0101               	movlb	1	; () banked
  2325  001CB0  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2326  001CB2  0101               	movlb	1	; () banked
  2327  001CB4  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2328  001CB6  0101               	movlb	1	; () banked
  2329  001CB8  6F19               	movwf	(??_screenClear+3+0)&0ffh
  2330  001CBA  0E00               	movlw	low(0)
  2331  001CBC  0101               	movlb	1	; () banked
  2332  001CBE  0101               	movlb	1	; () banked
  2333  001CC0  6F1A               	movwf	((?_LCD_Move))&0ffh
  2334  001CC2  0101               	movlb	1	; () banked
  2335  001CC4  5119               	movf	(??_screenClear+3+0)&0ffh,w
  2336  001CC6  EC1F  F012         	call	_LCD_Move	;wreg free
  2337  001CCA  0101               	movlb	1	; () banked
  2338  001CCC  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2339  001CCE  0E59               	movlw	low(059h)
  2340  001CD0  0101               	movlb	1	; () banked
  2341  001CD2  0101               	movlb	1	; () banked
  2342  001CD4  6F2C               	movwf	((?_LCD_Write))&0ffh
  2343  001CD6  0101               	movlb	1	; () banked
  2344  001CD8  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2345  001CDA  EC3F  F013         	call	_LCD_Write	;wreg free
  2346                           	line	124
  2347                           ;Lock.C: 124: LCD_Move(1,0); LCD_Write('X');
  2348  001CDE  0101               	movlb	1	; () banked
  2349  001CE0  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2350  001CE2  0E00               	movlw	low(0)
  2351  001CE4  0101               	movlb	1	; () banked
  2352  001CE6  0101               	movlb	1	; () banked
  2353  001CE8  6F1B               	movwf	(0+(?_LCD_Move+01h))&0ffh
  2354  001CEA  0101               	movlb	1	; () banked
  2355  001CEC  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2356  001CEE  0101               	movlb	1	; () banked
  2357  001CF0  6F19               	movwf	(??_screenClear+3+0)&0ffh
  2358  001CF2  0E01               	movlw	low(01h)
  2359  001CF4  0101               	movlb	1	; () banked
  2360  001CF6  0101               	movlb	1	; () banked
  2361  001CF8  6F1A               	movwf	((?_LCD_Move))&0ffh
  2362  001CFA  0101               	movlb	1	; () banked
  2363  001CFC  5119               	movf	(??_screenClear+3+0)&0ffh,w
  2364  001CFE  EC1F  F012         	call	_LCD_Move	;wreg free
  2365  001D02  0101               	movlb	1	; () banked
  2366  001D04  6F18               	movwf	(??_screenClear+2+0)&0ffh
  2367  001D06  0E58               	movlw	low(058h)
  2368  001D08  0101               	movlb	1	; () banked
  2369  001D0A  0101               	movlb	1	; () banked
  2370  001D0C  6F2C               	movwf	((?_LCD_Write))&0ffh
  2371  001D0E  0101               	movlb	1	; () banked
  2372  001D10  5118               	movf	(??_screenClear+2+0)&0ffh,w
  2373  001D12  EC3F  F013         	call	_LCD_Write	;wreg free
  2374                           	line	125
  2375                           ;Lock.C: 125: return;
  2376  001D16  D000               	goto	l215
  2377                           	line	126
  2378                           ;Lock.C: 126: }
  2379  001D18                     l215:
  2380                           			; BSR set to: ?
  2381                           
  2382  001D18  0012               	return
  2383                           	opt stack 0
  2384                           GLOBAL __end_of_screenClear
  2385  001D1A                     	__end_of_screenClear:
  2386                           	FNSIZE	_screenClear,4,0
  2387                           ; =============== function _screenClear ends ===
                                 =========
  2388                           
  2389                           	signat	_screenClear,88
  2390                           	global	_GetKey
  2391                           	global	??_GetKey
  2392                           	global	?_GetKey
  2393                                   psect   text9,class=CODE,space=0,reloc=2
  2394                           
  2395                           	opt lm
  2396                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\Lock.C"
  2397                           	line	48
  2398  000000                     	__size_of_GetKey	equ	__end_of_GetKey-_GetKey
  2399                           ;Lock.C: 47: char GetKey(void)
  2400                           ;Lock.C: 48: {
  2401                           	
  2402  00173A                     _GetKey:		; BSR set to: ?
  2403                           
  2404                           	opt stack 28
  2405                           	line	51
  2406                           ;Lock.C: 49: int i;
  2407                           ;Lock.C: 50: unsigned char RESULT;
  2408                           ;Lock.C: 51: TRISC = 0xF8;
  2409  00173A  0EF8               	movlw	low(0F8h)
  2410  00173C  6E94               	movwf	((c:3988)),c	;volatile
  2411                           	line	52
  2412                           ;Lock.C: 52: RESULT = 0xFF;
  2413  00173E  0101               	movlb	1	; () banked
  2414  001740  0101               	movlb	1	; () banked
  2415  001742  6910               	setf	((GetKey@RESULT))&0ffh
  2416                           	line	53
  2417                           ;Lock.C: 53: PORTC = 4;
  2418  001744  0E04               	movlw	low(04h)
  2419  001746  6E82               	movwf	((c:3970)),c	;volatile
  2420                           	line	54
  2421                           ;Lock.C: 54: for (i=0; i<100; i++);
  2422  001748  0E00               	movlw	low(0)
  2423  00174A  0101               	movlb	1	; () banked
  2424  00174C  0101               	movlb	1	; () banked
  2425  00174E  6F11               	movwf	((GetKey@i))&0ffh
  2426  001750  0E00               	movlw	high(0)
  2427  001752  0101               	movlb	1	; () banked
  2428  001754  6F12               	movwf	((GetKey@i+1))&0ffh
  2429  001756  0101               	movlb	1	; () banked
  2430  001758  0101               	movlb	1	; () banked
  2431  00175A  5112               	movf	((GetKey@i+1))&0ffh,w
  2432  00175C  0A80               	xorlw	80h
  2433  00175E  0F80               	addlw	-((0)^80h)
  2434  001760  0E64               	movlw	064h
  2435  001762  B4D8               	btfsc	status,2
  2436  001764  5D11               	subwf	((GetKey@i))&0ffh,w
  2437  001766  A0D8               	btfss	status,0
  2438  001768  D001               	goto	u1101
  2439  00176A  D001               	goto	u1100
  2440  00176C                     u1101:
  2441  00176C  D001               	goto	l174
  2442  00176E                     u1100:
  2443  00176E  D010               	goto	l175
  2444                           	
  2445  001770                     l174:		; BSR set to: ?
  2446                           
  2447  001770  0101               	movlb	1	; () banked
  2448  001772  0101               	movlb	1	; () banked
  2449  001774  4B11               	infsnz	((GetKey@i))&0ffh
  2450  001776  2B12               	incf	((GetKey@i+1))&0ffh
  2451  001778  0101               	movlb	1	; () banked
  2452  00177A  0101               	movlb	1	; () banked
  2453  00177C  5112               	movf	((GetKey@i+1))&0ffh,w
  2454  00177E  0A80               	xorlw	80h
  2455  001780  0F80               	addlw	-((0)^80h)
  2456  001782  0E64               	movlw	064h
  2457  001784  B4D8               	btfsc	status,2
  2458  001786  5D11               	subwf	((GetKey@i))&0ffh,w
  2459  001788  A0D8               	btfss	status,0
  2460  00178A  D001               	goto	u1111
  2461  00178C  D001               	goto	u1110
  2462  00178E                     u1111:
  2463  00178E  D7F0               	goto	l174
  2464  001790                     u1110:
  2465                           	
  2466  001790                     l175:		; BSR set to: ?
  2467                           
  2468                           	line	55
  2469                           ;Lock.C: 55: if (RC6) RESULT = 1;
  2470  001790  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2471  001792  D001               	goto	u1121
  2472  001794  D001               	goto	u1120
  2473  001796                     u1121:
  2474  001796  D008               	goto	l177
  2475  001798                     u1120:
  2476  001798  0101               	movlb	1	; () banked
  2477  00179A  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2478  00179C  0E01               	movlw	low(01h)
  2479  00179E  0101               	movlb	1	; () banked
  2480  0017A0  0101               	movlb	1	; () banked
  2481  0017A2  6F10               	movwf	((GetKey@RESULT))&0ffh
  2482  0017A4  0101               	movlb	1	; () banked
  2483  0017A6  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2484                           	
  2485  0017A8                     l177:		; BSR set to: ?
  2486                           
  2487                           	line	56
  2488                           ;Lock.C: 56: if (RC5) RESULT = 4;
  2489  0017A8  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2490  0017AA  D001               	goto	u1131
  2491  0017AC  D001               	goto	u1130
  2492  0017AE                     u1131:
  2493  0017AE  D008               	goto	l178
  2494  0017B0                     u1130:
  2495  0017B0  0101               	movlb	1	; () banked
  2496  0017B2  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2497  0017B4  0E04               	movlw	low(04h)
  2498  0017B6  0101               	movlb	1	; () banked
  2499  0017B8  0101               	movlb	1	; () banked
  2500  0017BA  6F10               	movwf	((GetKey@RESULT))&0ffh
  2501  0017BC  0101               	movlb	1	; () banked
  2502  0017BE  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2503                           	
  2504  0017C0                     l178:		; BSR set to: ?
  2505                           
  2506                           	line	57
  2507                           ;Lock.C: 57: if (RC4) RESULT = 7;
  2508  0017C0  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2509  0017C2  D001               	goto	u1141
  2510  0017C4  D001               	goto	u1140
  2511  0017C6                     u1141:
  2512  0017C6  D008               	goto	l179
  2513  0017C8                     u1140:
  2514  0017C8  0101               	movlb	1	; () banked
  2515  0017CA  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2516  0017CC  0E07               	movlw	low(07h)
  2517  0017CE  0101               	movlb	1	; () banked
  2518  0017D0  0101               	movlb	1	; () banked
  2519  0017D2  6F10               	movwf	((GetKey@RESULT))&0ffh
  2520  0017D4  0101               	movlb	1	; () banked
  2521  0017D6  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2522                           	
  2523  0017D8                     l179:		; BSR set to: ?
  2524                           
  2525                           	line	58
  2526                           ;Lock.C: 58: if (RC3) RESULT = 10;
  2527  0017D8  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2528  0017DA  D001               	goto	u1151
  2529  0017DC  D001               	goto	u1150
  2530  0017DE                     u1151:
  2531  0017DE  D008               	goto	l180
  2532  0017E0                     u1150:
  2533  0017E0  0101               	movlb	1	; () banked
  2534  0017E2  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2535  0017E4  0E0A               	movlw	low(0Ah)
  2536  0017E6  0101               	movlb	1	; () banked
  2537  0017E8  0101               	movlb	1	; () banked
  2538  0017EA  6F10               	movwf	((GetKey@RESULT))&0ffh
  2539  0017EC  0101               	movlb	1	; () banked
  2540  0017EE  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2541                           	
  2542  0017F0                     l180:		; BSR set to: ?
  2543                           
  2544                           	line	59
  2545                           ;Lock.C: 59: PORTC = 2;
  2546  0017F0  0E02               	movlw	low(02h)
  2547  0017F2  6E82               	movwf	((c:3970)),c	;volatile
  2548                           	line	60
  2549                           ;Lock.C: 60: for (i=0; i<100; i++);
  2550  0017F4  0E00               	movlw	low(0)
  2551  0017F6  0101               	movlb	1	; () banked
  2552  0017F8  0101               	movlb	1	; () banked
  2553  0017FA  6F11               	movwf	((GetKey@i))&0ffh
  2554  0017FC  0E00               	movlw	high(0)
  2555  0017FE  0101               	movlb	1	; () banked
  2556  001800  6F12               	movwf	((GetKey@i+1))&0ffh
  2557  001802  0101               	movlb	1	; () banked
  2558  001804  0101               	movlb	1	; () banked
  2559  001806  5112               	movf	((GetKey@i+1))&0ffh,w
  2560  001808  0A80               	xorlw	80h
  2561  00180A  0F80               	addlw	-((0)^80h)
  2562  00180C  0E64               	movlw	064h
  2563  00180E  B4D8               	btfsc	status,2
  2564  001810  5D11               	subwf	((GetKey@i))&0ffh,w
  2565  001812  A0D8               	btfss	status,0
  2566  001814  D001               	goto	u1161
  2567  001816  D001               	goto	u1160
  2568  001818                     u1161:
  2569  001818  D001               	goto	l181
  2570  00181A                     u1160:
  2571  00181A  D010               	goto	l182
  2572                           	
  2573  00181C                     l181:		; BSR set to: ?
  2574                           
  2575  00181C  0101               	movlb	1	; () banked
  2576  00181E  0101               	movlb	1	; () banked
  2577  001820  4B11               	infsnz	((GetKey@i))&0ffh
  2578  001822  2B12               	incf	((GetKey@i+1))&0ffh
  2579  001824  0101               	movlb	1	; () banked
  2580  001826  0101               	movlb	1	; () banked
  2581  001828  5112               	movf	((GetKey@i+1))&0ffh,w
  2582  00182A  0A80               	xorlw	80h
  2583  00182C  0F80               	addlw	-((0)^80h)
  2584  00182E  0E64               	movlw	064h
  2585  001830  B4D8               	btfsc	status,2
  2586  001832  5D11               	subwf	((GetKey@i))&0ffh,w
  2587  001834  A0D8               	btfss	status,0
  2588  001836  D001               	goto	u1171
  2589  001838  D001               	goto	u1170
  2590  00183A                     u1171:
  2591  00183A  D7F0               	goto	l181
  2592  00183C                     u1170:
  2593                           	
  2594  00183C                     l182:		; BSR set to: ?
  2595                           
  2596                           	line	61
  2597                           ;Lock.C: 61: if (RC6) RESULT = 2;
  2598  00183C  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2599  00183E  D001               	goto	u1181
  2600  001840  D001               	goto	u1180
  2601  001842                     u1181:
  2602  001842  D008               	goto	l184
  2603  001844                     u1180:
  2604  001844  0101               	movlb	1	; () banked
  2605  001846  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2606  001848  0E02               	movlw	low(02h)
  2607  00184A  0101               	movlb	1	; () banked
  2608  00184C  0101               	movlb	1	; () banked
  2609  00184E  6F10               	movwf	((GetKey@RESULT))&0ffh
  2610  001850  0101               	movlb	1	; () banked
  2611  001852  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2612                           	
  2613  001854                     l184:		; BSR set to: ?
  2614                           
  2615                           	line	62
  2616                           ;Lock.C: 62: if (RC5) RESULT = 5;
  2617  001854  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2618  001856  D001               	goto	u1191
  2619  001858  D001               	goto	u1190
  2620  00185A                     u1191:
  2621  00185A  D008               	goto	l185
  2622  00185C                     u1190:
  2623  00185C  0101               	movlb	1	; () banked
  2624  00185E  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2625  001860  0E05               	movlw	low(05h)
  2626  001862  0101               	movlb	1	; () banked
  2627  001864  0101               	movlb	1	; () banked
  2628  001866  6F10               	movwf	((GetKey@RESULT))&0ffh
  2629  001868  0101               	movlb	1	; () banked
  2630  00186A  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2631                           	
  2632  00186C                     l185:		; BSR set to: ?
  2633                           
  2634                           	line	63
  2635                           ;Lock.C: 63: if (RC4) RESULT = 8;
  2636  00186C  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2637  00186E  D001               	goto	u1201
  2638  001870  D001               	goto	u1200
  2639  001872                     u1201:
  2640  001872  D008               	goto	l186
  2641  001874                     u1200:
  2642  001874  0101               	movlb	1	; () banked
  2643  001876  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2644  001878  0E08               	movlw	low(08h)
  2645  00187A  0101               	movlb	1	; () banked
  2646  00187C  0101               	movlb	1	; () banked
  2647  00187E  6F10               	movwf	((GetKey@RESULT))&0ffh
  2648  001880  0101               	movlb	1	; () banked
  2649  001882  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2650                           	
  2651  001884                     l186:		; BSR set to: ?
  2652                           
  2653                           	line	64
  2654                           ;Lock.C: 64: if (RC3) RESULT = 0;
  2655  001884  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2656  001886  D001               	goto	u1211
  2657  001888  D001               	goto	u1210
  2658  00188A                     u1211:
  2659  00188A  D008               	goto	l187
  2660  00188C                     u1210:
  2661  00188C  0101               	movlb	1	; () banked
  2662  00188E  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2663  001890  0E00               	movlw	low(0)
  2664  001892  0101               	movlb	1	; () banked
  2665  001894  0101               	movlb	1	; () banked
  2666  001896  6F10               	movwf	((GetKey@RESULT))&0ffh
  2667  001898  0101               	movlb	1	; () banked
  2668  00189A  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2669                           	
  2670  00189C                     l187:		; BSR set to: ?
  2671                           
  2672                           	line	65
  2673                           ;Lock.C: 65: PORTC = 1;
  2674  00189C  0E01               	movlw	low(01h)
  2675  00189E  6E82               	movwf	((c:3970)),c	;volatile
  2676                           	line	66
  2677                           ;Lock.C: 66: for (i=0; i<100; i++);
  2678  0018A0  0E00               	movlw	low(0)
  2679  0018A2  0101               	movlb	1	; () banked
  2680  0018A4  0101               	movlb	1	; () banked
  2681  0018A6  6F11               	movwf	((GetKey@i))&0ffh
  2682  0018A8  0E00               	movlw	high(0)
  2683  0018AA  0101               	movlb	1	; () banked
  2684  0018AC  6F12               	movwf	((GetKey@i+1))&0ffh
  2685  0018AE  0101               	movlb	1	; () banked
  2686  0018B0  0101               	movlb	1	; () banked
  2687  0018B2  5112               	movf	((GetKey@i+1))&0ffh,w
  2688  0018B4  0A80               	xorlw	80h
  2689  0018B6  0F80               	addlw	-((0)^80h)
  2690  0018B8  0E64               	movlw	064h
  2691  0018BA  B4D8               	btfsc	status,2
  2692  0018BC  5D11               	subwf	((GetKey@i))&0ffh,w
  2693  0018BE  A0D8               	btfss	status,0
  2694  0018C0  D001               	goto	u1221
  2695+ 0018C2  D001               	goto	u1220
  2696+ 0018C4                     u1221:
  2697+ 0018C4  D001               	goto	l188
  2698+ 0018C6                     u1220:
  2699+ 0018C6  D010               	goto	l189
  2700+                          	
  2701+ 0018C8                     l188:		; BSR set to: ?
  2702+                          
  2703+ 0018C8  0101               	movlb	1	; () banked
  2704+ 0018CA  0101               	movlb	1	; () banked
  2705+ 0018CC  4B11               	infsnz	((GetKey@i))&0ffh
  2706+ 0018CE  2B12               	incf	((GetKey@i+1))&0ffh
  2707+ 0018D0  0101               	movlb	1	; () banked
  2708+ 0018D2  0101               	movlb	1	; () banked
  2709+ 0018D4  5112               	movf	((GetKey@i+1))&0ffh,w
  2710+ 0018D6  0A80               	xorlw	80h
  2711+ 0018D8  0F80               	addlw	-((0)^80h)
  2712+ 0018DA  0E64               	movlw	064h
  2713+ 0018DC  B4D8               	btfsc	status,2
  2714+ 0018DE  5D11               	subwf	((GetKey@i))&0ffh,w
  2715+ 0018E0  A0D8               	btfss	status,0
  2716+ 0018E2  D001               	goto	u1231
  2717+ 0018E4  D001               	goto	u1230
  2718+ 0018E6                     u1231:
  2719+ 0018E6  D7F0               	goto	l188
  2720+ 0018E8                     u1230:
  2721+                          	
  2722+ 0018E8                     l189:		; BSR set to: ?
  2723+                          
  2724+                          	line	67
  2725+                          ;Lock.C: 67: if (RC6) RESULT = 3;
  2726+ 0018E8  AC82               	btfss	c:(31766/8),(31766)&7	;volatile
  2727+ 0018EA  D001               	goto	u1241
  2728+ 0018EC  D001               	goto	u1240
  2729+ 0018EE                     u1241:
  2730+ 0018EE  D008               	goto	l191
  2731+ 0018F0                     u1240:
  2732+ 0018F0  0101               	movlb	1	; () banked
  2733+ 0018F2  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2734+ 0018F4  0E03               	movlw	low(03h)
  2735+ 0018F6  0101               	movlb	1	; () banked
  2736+ 0018F8  0101               	movlb	1	; () banked
  2737+ 0018FA  6F10               	movwf	((GetKey@RESULT))&0ffh
  2738+ 0018FC  0101               	movlb	1	; () banked
  2739+ 0018FE  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2740+                          	
  2741+ 001900                     l191:		; BSR set to: ?
  2742+                          
  2743+                          	line	68
  2744+                          ;Lock.C: 68: if (RC5) RESULT = 6;
  2745+ 001900  AA82               	btfss	c:(31765/8),(31765)&7	;volatile
  2746+ 001902  D001               	goto	u1251
  2747+ 001904  D001               	goto	u1250
  2748+ 001906                     u1251:
  2749+ 001906  D008               	goto	l192
  2750+ 001908                     u1250:
  2751+ 001908  0101               	movlb	1	; () banked
  2752+ 00190A  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2753+ 00190C  0E06               	movlw	low(06h)
  2754+ 00190E  0101               	movlb	1	; () banked
  2755+ 001910  0101               	movlb	1	; () banked
  2756+ 001912  6F10               	movwf	((GetKey@RESULT))&0ffh
  2757+ 001914  0101               	movlb	1	; () banked
  2758+ 001916  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2759+                          	
  2760+ 001918                     l192:		; BSR set to: ?
  2761+                          
  2762+                          	line	69
  2763+                          ;Lock.C: 69: if (RC4) RESULT = 9;
  2764+ 001918  A882               	btfss	c:(31764/8),(31764)&7	;volatile
  2765+ 00191A  D001               	goto	u1261
  2766+ 00191C  D001               	goto	u1260
  2767+ 00191E                     u1261:
  2768+ 00191E  D008               	goto	l193
  2769+ 001920                     u1260:
  2770+ 001920  0101               	movlb	1	; () banked
  2771+ 001922  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2772+ 001924  0E09               	movlw	low(09h)
  2773+ 001926  0101               	movlb	1	; () banked
  2774+ 001928  0101               	movlb	1	; () banked
  2775+ 00192A  6F10               	movwf	((GetKey@RESULT))&0ffh
  2776+ 00192C  0101               	movlb	1	; () banked
  2777+ 00192E  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2778+                          	
  2779+ 001930                     l193:		; BSR set to: ?
  2780+                          
  2781+                          	line	70
  2782+                          ;Lock.C: 70: if (RC3) RESULT = 11;
  2783+ 001930  A682               	btfss	c:(31763/8),(31763)&7	;volatile
  2784+ 001932  D001               	goto	u1271
  2785+ 001934  D001               	goto	u1270
  2786+ 001936                     u1271:
  2787+ 001936  D008               	goto	l194
  2788+ 001938                     u1270:
  2789+ 001938  0101               	movlb	1	; () banked
  2790+ 00193A  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2791+ 00193C  0E0B               	movlw	low(0Bh)
  2792+ 00193E  0101               	movlb	1	; () banked
  2793+ 001940  0101               	movlb	1	; () banked
  2794+ 001942  6F10               	movwf	((GetKey@RESULT))&0ffh
  2795+ 001944  0101               	movlb	1	; () banked
  2796+ 001946  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2797+                          	
  2798+ 001948                     l194:		; BSR set to: ?
  2799+                          
  2800+                          	line	71
  2801+                          ;Lock.C: 71: if (RB0) RESULT = 12;
  2802+ 001948  A081               	btfss	c:(31752/8),(31752)&7	;volatile
  2803+ 00194A  D001               	goto	u1281
  2804+ 00194C  D001               	goto	u1280
  2805+ 00194E                     u1281:
  2806+ 00194E  D008               	goto	l195
  2807+ 001950                     u1280:
  2808+ 001950  0101               	movlb	1	; () banked
  2809+ 001952  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2810+ 001954  0E0C               	movlw	low(0Ch)
  2811+ 001956  0101               	movlb	1	; () banked
  2812+ 001958  0101               	movlb	1	; () banked
  2813+ 00195A  6F10               	movwf	((GetKey@RESULT))&0ffh
  2814+ 00195C  0101               	movlb	1	; () banked
  2815+ 00195E  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2816+                          	
  2817+ 001960                     l195:		; BSR set to: ?
  2818+                          
  2819+                          	line	72
  2820+                          ;Lock.C: 72: if (RB1) RESULT = 13;
  2821+ 001960  A281               	btfss	c:(31753/8),(31753)&7	;volatile
  2822+ 001962  D001               	goto	u1291
  2823+ 001964  D001               	goto	u1290
  2824+ 001966                     u1291:
  2825+ 001966  D008               	goto	l196
  2826+ 001968                     u1290:
  2827+ 001968  0101               	movlb	1	; () banked
  2828+ 00196A  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2829+ 00196C  0E0D               	movlw	low(0Dh)
  2830+ 00196E  0101               	movlb	1	; () banked
  2831+ 001970  0101               	movlb	1	; () banked
  2832+ 001972  6F10               	movwf	((GetKey@RESULT))&0ffh
  2833+ 001974  0101               	movlb	1	; () banked
  2834+ 001976  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2835+                          	
  2836+ 001978                     l196:		; BSR set to: ?
  2837+                          
  2838+                          	line	73
  2839+                          ;Lock.C: 73: if (RB2) RESULT = 14;
  2840+ 001978  A481               	btfss	c:(31754/8),(31754)&7	;volatile
  2841+ 00197A  D001               	goto	u1301
  2842+ 00197C  D001               	goto	u1300
  2843+ 00197E                     u1301:
  2844+ 00197E  D008               	goto	l197
  2845+ 001980                     u1300:
  2846+ 001980  0101               	movlb	1	; () banked
  2847+ 001982  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2848+ 001984  0E0E               	movlw	low(0Eh)
  2849+ 001986  0101               	movlb	1	; () banked
  2850+ 001988  0101               	movlb	1	; () banked
  2851+ 00198A  6F10               	movwf	((GetKey@RESULT))&0ffh
  2852+ 00198C  0101               	movlb	1	; () banked
  2853+ 00198E  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2854+                          	
  2855+ 001990                     l197:		; BSR set to: ?
  2856+                          
  2857+                          	line	74
  2858+                          ;Lock.C: 74: if (RB3) RESULT = 15;
  2859+ 001990  A681               	btfss	c:(31755/8),(31755)&7	;volatile
  2860+ 001992  D001               	goto	u1311
  2861+ 001994  D001               	goto	u1310
  2862+ 001996                     u1311:
  2863+ 001996  D008               	goto	l198
  2864+ 001998                     u1310:
  2865+ 001998  0101               	movlb	1	; () banked
  2866+ 00199A  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2867+ 00199C  0E0F               	movlw	low(0Fh)
  2868+ 00199E  0101               	movlb	1	; () banked
  2869+ 0019A0  0101               	movlb	1	; () banked
  2870+ 0019A2  6F10               	movwf	((GetKey@RESULT))&0ffh
  2871+ 0019A4  0101               	movlb	1	; () banked
  2872+ 0019A6  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2873+                          	
  2874+ 0019A8                     l198:		; BSR set to: ?
  2875+                          
  2876+                          	line	75
  2877+                          ;Lock.C: 75: if (RB4) RESULT = 16;
  2878+ 0019A8  A881               	btfss	c:(31756/8),(31756)&7	;volatile
  2879+ 0019AA  D001               	goto	u1321
  2880+ 0019AC  D001               	goto	u1320
  2881+ 0019AE                     u1321:
  2882+ 0019AE  D008               	goto	l199
  2883+ 0019B0                     u1320:
  2884+ 0019B0  0101               	movlb	1	; () banked
  2885+ 0019B2  6F13               	movwf	(??_GetKey+3+0)&0ffh
  2886+ 0019B4  0E10               	movlw	low(010h)
  2887+ 0019B6  0101               	movlb	1	; () banked
  2888+ 0019B8  0101               	movlb	1	; () banked
  2889+ 0019BA  6F10               	movwf	((GetKey@RESULT))&0ffh
  2890+ 0019BC  0101               	movlb	1	; () banked
  2891+ 0019BE  5113               	movf	(??_GetKey+3+0)&0ffh,w
  2892+                          	
  2893+ 0019C0                     l199:		; BSR set to: ?
  2894+                          
  2895+                          	line	76
  2896+                          ;Lock.C: 76: PORTC = 0;
  2897+ 0019C0  0E00               	movlw	low(0)
  2898+ 0019C2  6E82               	movwf	((c:3970)),c	;volatile
  2899+                          	line	77
  2900+                          ;Lock.C: 77: return(RESULT);
  2901+ 0019C4  0101               	movlb	1	; () banked
  2902+ 0019C6  0101               	movlb	1	; () banked
  2903+ 0019C8  5110               	movf	((GetKey@RESULT))&0ffh,w
  2904+ 0019CA  D000               	goto	l173
  2905+                          	line	78
  2906+                          ;Lock.C: 78: }
  2907+ 0019CC                     l173:
  2908+                          			; BSR set to: ?
  2909+                          
  2910+ 0019CC  0012               	return
  2911+                          	opt stack 0
  2912+                          GLOBAL __end_of_GetKey
  2913+ 0019CE                     	__end_of_GetKey:
  2914+                          	FNSIZE	_GetKey,4,0
  2915+                          ; =============== function _GetKey ends ========
      +                          ====
  2916+                          
  2917+                          	signat	_GetKey,89
  2918+                          	global	_LCD_Out
  2919+                          	global	??_LCD_Out
  2920+                          	global	?_LCD_Out
  2921+                                  psect   text10,class=CODE,space=0,reloc=
      +                          2
  2922+                          
  2923+                          	opt lm
  2924+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\MyProject\lcd_portd.c"
  2925+                          	line	87
  2926+ 000000                     	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
  2927+                          ;lcd_portd.c: 86: void LCD_Out(long int DATA, un
      +                          signed char D, unsigned char N)
  2928+                          ;lcd_portd.c: 87: {
  2929+                          	
  2930+ 001EA2                     _LCD_Out:		; BSR set to: ?
  2931+                          
  2932+                          	opt stack 27
  2933+                          	line	90
  2934+                          ;lcd_portd.c: 88: unsigned char A[10], i;
  2935+                          ;lcd_portd.c: 90: if(DATA < 0) {
  2936+ 001EA2  0101               	movlb	1	; () banked
  2937+ 001EA4  0101               	movlb	1	; () banked
  2938+ 001EA6  AF1D               	btfss	((LCD_Out@DATA+3))&0ffh,7
  2939+ 001EA8  D001               	goto	u3231
  2940+ 001EAA  D001               	goto	u3230
  2941+ 001EAC                     u3231:
  2942+ 001EAC  D01B               	goto	l131
  2943+ 001EAE                     u3230:
  2944+                          	line	91
  2945+                          ;lcd_portd.c: 91: LCD_Write('-');
  2946+ 001EAE  0101               	movlb	1	; () banked
  2947+ 001EB0  6F2B               	movwf	(??_LCD_Out+11+0)&0ffh
  2948+ 001EB2  0E2D               	movlw	low(02Dh)
  2949+ 001EB4  0101               	movlb	1	; () banked
  2950+ 001EB6  0101               	movlb	1	; () banked
  2951+ 001EB8  6F2C               	movwf	((?_LCD_Write))&0ffh
  2952+ 001EBA  0101               	movlb	1	; () banked
  2953+ 001EBC  512B               	movf	(??_LCD_Out+11+0)&0ffh,w
  2954+ 001EBE  EC3F  F013         	call	_LCD_Write	;wreg free
  2955+                          	line	92
  2956+                          ;lcd_portd.c: 92: DATA = -DATA;
  2957+ 001EC2  0101               	movlb	1	; () banked
  2958+ 001EC4  0101               	movlb	1	; () banked
  2959+ 001EC6  1F1D               	comf	((LCD_Out@DATA+3))&0ffh
  2960+ 001EC8  0101               	movlb	1	; () banked
  2961+ 001ECA  1F1C               	comf	((LCD_Out@DATA+2))&0ffh
  2962+ 001ECC  0101               	movlb	1	; () banked
  2963+ 001ECE  1F1B               	comf	((LCD_Out@DATA+1))&0ffh
  2964+ 001ED0  0101               	movlb	1	; () banked
  2965+ 001ED2  6D1A               	negf	((LCD_Out@DATA))&0ffh
  2966+ 001ED4  0E00               	movlw	0
  2967+ 001ED6  0101               	movlb	1	; () banked
  2968+ 001ED8  231B               	addwfc	((LCD_Out@DATA+1))&0ffh
  2969+ 001EDA  0101               	movlb	1	; () banked
  2970+ 001EDC  231C               	addwfc	((LCD_Out@DATA+2))&0ffh
  2971+ 001EDE  0101               	movlb	1	; () banked
  2972+ 001EE0  231D               	addwfc	((LCD_Out@DATA+3))&0ffh
  2973+                          	line	93
  2974+                          ;lcd_portd.c: 93: }
  2975+ 001EE2  D00A               	goto	l132
  2976+                          	line	94
  2977+                          	
  2978+ 001EE4                     l131:		; BSR set to: ?
  2979+                          
  2980+                          ;lcd_portd.c: 94: else LCD_Write(' ');
  2981+ 001EE4  0101               	movlb	1	; () banked
  2982+ 001EE6  6F2B               	movwf	(??_LCD_Out+11+0)&0ffh
  2983+ 001EE8  0E20               	movlw	low(020h)
  2984+ 001EEA  0101               	movlb	1	; () banked
  2985+ 001EEC  0101               	movlb	1	; () banked
  2986+ 001EEE  6F2C               	movwf	((?_LCD_Write))&0ffh
  2987+ 001EF0  0101               	movlb	1	; () banked
  2988+ 001EF2  512B               	movf	(??_LCD_Out+11+0)&0ffh,w
  2989+ 001EF4  EC3F  F013         	call	_LCD_Write	;wreg free
  2990+                          	
  2991+ 001EF8                     l132:		; BSR set to: ?
  2992+                          
  2993+                          	line	95
  2994+                          ;lcd_portd.c: 95: for (i=0; i<10; i++) {
  2995+ 001EF8  0101               	movlb	1	; () banked
  2996+ 001EFA  6F2B               	movwf	(??_LCD_Out+11+0)&0ffh
  2997+ 001EFC  0E00               	movlw	low(0)
  2998+ 001EFE  0101               	movlb	1	; () banked
  2999+ 001F00  0101               	movlb	1	; () banked
  3000+ 001F02  6F20               	movwf	((LCD_Out@i))&0ffh
  3001+ 001F04  0101               	movlb	1	; () banked
  3002+ 001F06  512B               	movf	(??_LCD_Out+11+0)&0ffh,w
  3003+ 001F08  0E09               	movlw	(0Ah-1)
  3004+ 001F0A  0101               	movlb	1	; () banked
  3005+ 001F0C  0101               	movlb	1	; () banked
  3006+ 001F0E  6520               	cpfsgt	((LCD_Out@i))&0ffh
  3007+ 001F10  D001               	goto	u3241
  3008+ 001F12  D001               	goto	u3240
  3009+ 001F14                     u3241:
  3010+ 001F14  D001               	goto	l133
  3011+ 001F16                     u3240:
  3012+ 001F16  D04E               	goto	l134
  3013+                          	
  3014+ 001F18                     l133:		; BSR set to: ?
  3015+                          
  3016+                          	line	96
  3017+                          ;lcd_portd.c: 96: A[i] = DATA % 10;
  3018+ 001F18  0101               	movlb	1	; () banked
  3019+ 001F1A  0E21               	movlw	low(LCD_Out@A)
  3020+ 001F1C  0101               	movlb	1	; () banked
  3021+ 001F1E  0101               	movlb	1	; () banked
  3022+ 001F20  2520               	addwf	((LCD_Out@i))&0ffh,w
  3023+ 001F22  6EE9               	movwf	c:fsr0l
  3024+ 001F24  6AEA               	clrf	1+c:fsr0l
  3025+ 001F26  0101               	movlb	1	; () banked
  3026+ 001F28  0E01               	movlw	high(LCD_Out@A)
  3027+ 001F2A  22EA               	addwfc	1+c:fsr0l
  3028+ 001F2C  0E0A               	movlw	low(0Ah)
  3029+ 001F2E  0101               	movlb	1	; () banked
  3030+ 001F30  0101               	movlb	1	; () banked
  3031+ 001F32  6F30               	movwf	(0+(?___almod+04h))&0ffh
  3032+ 001F34  0E00               	movlw	high(0Ah)
  3033+ 001F36  0101               	movlb	1	; () banked
  3034+ 001F38  6F31               	movwf	(1+(?___almod+04h))&0ffh
  3035+ 001F3A  0E00               	movlw	low highword(0Ah)
  3036+ 001F3C  0101               	movlb	1	; () banked
  3037+ 001F3E  6F32               	movwf	(2+(?___almod+04h))&0ffh
  3038+ 001F40  0E00               	movlw	high highword(0Ah)
  3039+ 001F42  0101               	movlb	1	; () banked
  3040+ 001F44  6F33               	movwf	(3+(?___almod+04h))&0ffh
  3041+ 001F46  C11A  F12C         	movff	(LCD_Out@DATA),(?___almod)
  3042+ 001F4A  C11B  F12D         	movff	(LCD_Out@DATA+1),(?___almod+1)
  3043+ 001F4E  C11C  F12E         	movff	(LCD_Out@DATA+2),(?___almod+2)
  3044+ 001F52  C11D  F12F         	movff	(LCD_Out@DATA+3),(?___almod+3)
  3045+ 001F56  EC8D  F00E         	call	___almod	;wreg free
  3046+ 001F5A  0101               	movlb	1	; () banked
  3047+ 001F5C  0101               	movlb	1	; () banked
  3048+ 001F5E  512C               	movf	(0+?___almod)&0ffh,w
  3049+ 001F60  6EEF               	movwf	indf0
  3050+                          
  3051+                          	line	97
  3052+                          ;lcd_portd.c: 97: DATA = DATA / 10;
  3053+ 001F62  0E0A               	movlw	low(0Ah)
  3054+ 001F64  0101               	movlb	1	; () banked
  3055+ 001F66  0101               	movlb	1	; () banked
  3056+ 001F68  6F30               	movwf	(0+(?___aldiv+04h))&0ffh
  3057+ 001F6A  0E00               	movlw	high(0Ah)
  3058+ 001F6C  0101               	movlb	1	; () banked
  3059+ 001F6E  6F31               	movwf	(1+(?___aldiv+04h))&0ffh
  3060+ 001F70  0E00               	movlw	low highword(0Ah)
  3061+ 001F72  0101               	movlb	1	; () banked
  3062+ 001F74  6F32               	movwf	(2+(?___aldiv+04h))&0ffh
  3063+ 001F76  0E00               	movlw	high highword(0Ah)
  3064+ 001F78  0101               	movlb	1	; () banked
  3065+ 001F7A  6F33               	movwf	(3+(?___aldiv+04h))&0ffh
  3066+ 001F7C  C11A  F12C         	movff	(LCD_Out@DATA),(?___aldiv)
  3067+ 001F80  C11B  F12D         	movff	(LCD_Out@DATA+1),(?___aldiv+1)
  3068+ 001F84  C11C  F12E         	movff	(LCD_Out@DATA+2),(?___aldiv+2)
  3069+ 001F88  C11D  F12F         	movff	(LCD_Out@DATA+3),(?___aldiv+3)
  3070+ 001F8C  ECE7  F00C         	call	___aldiv	;wreg free
  3071+ 001F90  C12C  F11A         	movff	0+?___aldiv,(LCD_Out@DATA)
  3072+ 001F94  C12D  F11B         	movff	1+?___aldiv,(LCD_Out@DATA+1)
  3073+ 001F98  C12E  F11C         	movff	2+?___aldiv,(LCD_Out@DATA+2)
  3074+ 001F9C  C12F  F11D         	movff	3+?___aldiv,(LCD_Out@DATA+3)
  3075+                          	line	95
  3076+ 001FA0  0101               	movlb	1	; () banked
  3077+ 001FA2  0101               	movlb	1	; () banked
  3078+ 001FA4  2B20               	incf	((LCD_Out@i))&0ffh
  3079+ 001FA6  0E09               	movlw	(0Ah-1)
  3080+ 001FA8  0101               	movlb	1	; () banked
  3081+ 001FAA  0101               	movlb	1	; () banked
  3082+ 001FAC  6520               	cpfsgt	((LCD_Out@i))&0ffh
  3083+ 001FAE  D001               	goto	u3251
  3084+ 001FB0  D001               	goto	u3250
  3085+ 001FB2                     u3251:
  3086+ 001FB2  D7B2               	goto	l133
  3087  001FB4                     u3250:
  3088                           	
  3089  001FB4                     l134:		; BSR set to: ?
  3090                           
  3091                           	line	99
  3092                           ;lcd_portd.c: 98: }
  3093                           ;lcd_portd.c: 99: for (i=D; i>0; i--) {
  3094  001FB4  C11E  F120         	movff	(LCD_Out@D),(LCD_Out@i)
  3095  001FB8  0101               	movlb	1	; () banked
  3096  001FBA  0101               	movlb	1	; () banked
  3097  001FBC  6720               	tstfsz	((LCD_Out@i))&0ffh
  3098  001FBE  D001               	goto	u3261
  3099  001FC0  D001               	goto	u3260
  3100  001FC2                     u3261:
  3101  001FC2  D001               	goto	l136
  3102  001FC4                     u3260:
  3103  001FC4  D031               	goto	l137
  3104                           	
  3105  001FC6                     l136:		; BSR set to: ?
  3106                           
  3107                           	line	100
  3108                           ;lcd_portd.c: 100: if (i == N) LCD_Write('.');
  3109  001FC6  0101               	movlb	1	; () banked
  3110  001FC8  0101               	movlb	1	; () banked
  3111  001FCA  511F               	movf	((LCD_Out@N))&0ffh,w
  3112  001FCC  0101               	movlb	1	; () banked
  3113  001FCE  0101               	movlb	1	; () banked
  3114  001FD0  6320               	cpfseq	((LCD_Out@i))&0ffh
  3115  001FD2  D001               	goto	u3271
  3116  001FD4  D001               	goto	u3270
  3117  001FD6                     u3271:
  3118  001FD6  D00A               	goto	l139
  3119  001FD8                     u3270:
  3120  001FD8  0101               	movlb	1	; () banked
  3121  001FDA  6F2B               	movwf	(??_LCD_Out+11+0)&0ffh
  3122  001FDC  0E2E               	movlw	low(02Eh)
  3123  001FDE  0101               	movlb	1	; () banked
  3124  001FE0  0101               	movlb	1	; () banked
  3125  001FE2  6F2C               	movwf	((?_LCD_Write))&0ffh
  3126  001FE4  0101               	movlb	1	; () banked
  3127  001FE6  512B               	movf	(??_LCD_Out+11+0)&0ffh,w
  3128  001FE8  EC3F  F013         	call	_LCD_Write	;wreg free
  3129                           	
  3130  001FEC                     l139:		; BSR set to: ?
  3131                           
  3132                           	line	101
  3133                           ;lcd_portd.c: 101: LCD_Write(A[i-1] + '0');
  3134  001FEC  C120  F12B         	movff	(LCD_Out@i),??_LCD_Out+11+0
  3135  001FF0  0EFF               	movlw	-1
  3136  001FF2  0101               	movlb	1	; () banked
  3137  001FF4  272B               	addwf	(??_LCD_Out+11+0)&0ffh
  3138  001FF6  0101               	movlb	1	; () banked
  3139  001FF8  0E21               	movlw	low(LCD_Out@A)
  3140  001FFA  0101               	movlb	1	; () banked
  3141  001FFC  252B               	addwf	(??_LCD_Out+11+0)&0ffh,w
  3142  001FFE  6EE9               	movwf	c:fsr0l
  3143  002000  6AEA               	clrf	1+c:fsr0l
  3144  002002  0101               	movlb	1	; () banked
  3145  002004  0E01               	movlw	high(LCD_Out@A)
  3146  002006  22EA               	addwfc	1+c:fsr0l
  3147  002008  50EF               	movf	indf0,w
  3148  00200A  0F30               	addlw	low(030h)
  3149  00200C  0101               	movlb	1	; () banked
  3150  00200E  0101               	movlb	1	; () banked
  3151  002010  6F2C               	movwf	((?_LCD_Write))&0ffh
  3152  002012  EC3F  F013         	call	_LCD_Write	;wreg free
  3153                           	line	99
  3154  002016  0101               	movlb	1	; () banked
  3155  002018  0101               	movlb	1	; () banked
  3156  00201A  0720               	decf	((LCD_Out@i))&0ffh
  3157  00201C  0101               	movlb	1	; () banked
  3158  00201E  0101               	movlb	1	; () banked
  3159  002020  6720               	tstfsz	((LCD_Out@i))&0ffh
  3160  002022  D001               	goto	u3281
  3161  002024  D001               	goto	u3280
  3162  002026                     u3281:
  3163  002026  D7CF               	goto	l136
  3164  002028                     u3280:
  3165                           	
  3166  002028                     l137:		; BSR set to: ?
  3167                           
  3168                           	line	103
  3169                           ;lcd_portd.c: 102: }
  3170                           ;lcd_portd.c: 103: }
  3171  002028                     l130:
  3172                           			; BSR set to: ?
  3173                           
  3174  002028  0012               	return
  3175                           	opt stack 0
  3176                           GLOBAL __end_of_LCD_Out
  3177  00202A                     	__end_of_LCD_Out:
  3178                           	FNSIZE	_LCD_Out,12,6
  3179                           ; =============== function _LCD_Out ends =======
                                 =====
  3180                           
  3181                           	signat	_LCD_Out,12408
  3182                           	global	_LCD_Move
  3183                           	global	??_LCD_Move
  3184                           	global	?_LCD_Move
  3185                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  3186                           
  3187                           	opt lm
  3188                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  3189                           	line	54
  3190  000000                     	__size_of_LCD_Move	equ	__end_of_LCD_Move-_LCD_M
                                 ove
  3191                           ;lcd_portd.c: 53: void LCD_Move(unsigned char Ro
                                 w, unsigned char Col)
  3192                           ;lcd_portd.c: 54: {
  3193                           	
  3194  00243E                     _LCD_Move:		; BSR set to: ?
  3195                           
  3196                           	opt stack 27
  3197                           	line	55
  3198                           ;lcd_portd.c: 55: if (Row == 0) LCD_Inst(0x80 + 
                                 Col);
  3199  00243E  0101               	movlb	1	; () banked
  3200  002440  0101               	movlb	1	; () banked
  3201  002442  671A               	tstfsz	((LCD_Move@Row))&0ffh
  3202  002444  D001               	goto	u3291
  3203  002446  D001               	goto	u3290
  3204  002448                     u3291:
  3205  002448  D009               	goto	l124
  3206  00244A                     u3290:
  3207  00244A  0101               	movlb	1	; () banked
  3208  00244C  0101               	movlb	1	; () banked
  3209  00244E  511B               	movf	((LCD_Move@Col))&0ffh,w
  3210  002450  0F80               	addlw	low(080h)
  3211  002452  0101               	movlb	1	; () banked
  3212  002454  0101               	movlb	1	; () banked
  3213  002456  6F1C               	movwf	((?_LCD_Inst))&0ffh
  3214  002458  ECD3  F012         	call	_LCD_Inst	;wreg free
  3215                           	
  3216  00245C                     l124:		; BSR set to: ?
  3217                           
  3218                           	line	56
  3219                           ;lcd_portd.c: 56: if (Row == 1) LCD_Inst(0xC0 + 
                                 Col);
  3220  00245C  0101               	movlb	1	; () banked
  3221  00245E  0101               	movlb	1	; () banked
  3222  002460  051A               	decf	((LCD_Move@Row))&0ffh,w
  3223                           
  3224  002462  A4D8               	btfss	status,2
  3225  002464  D001               	goto	u3301
  3226  002466  D001               	goto	u3300
  3227  002468                     u3301:
  3228  002468  D009               	goto	l125
  3229  00246A                     u3300:
  3230  00246A  0101               	movlb	1	; () banked
  3231  00246C  0101               	movlb	1	; () banked
  3232  00246E  511B               	movf	((LCD_Move@Col))&0ffh,w
  3233  002470  0FC0               	addlw	low(0C0h)
  3234  002472  0101               	movlb	1	; () banked
  3235  002474  0101               	movlb	1	; () banked
  3236  002476  6F1C               	movwf	((?_LCD_Inst))&0ffh
  3237  002478  ECD3  F012         	call	_LCD_Inst	;wreg free
  3238                           	
  3239  00247C                     l125:		; BSR set to: ?
  3240                           
  3241                           	line	57
  3242                           ;lcd_portd.c: 57: if (Row == 2) LCD_Inst(0x94 + 
                                 Col);
  3243  00247C  0101               	movlb	1	; () banked
  3244  00247E  0101               	movlb	1	; () banked
  3245  002480  511A               	movf	((LCD_Move@Row))&0ffh,w
  3246  002482  0A02               	xorlw	2
  3247                           
  3248  002484  A4D8               	btfss	status,2
  3249  002486  D001               	goto	u3311
  3250  002488  D001               	goto	u3310
  3251  00248A                     u3311:
  3252  00248A  D009               	goto	l126
  3253  00248C                     u3310:
  3254  00248C  0101               	movlb	1	; () banked
  3255  00248E  0101               	movlb	1	; () banked
  3256  002490  511B               	movf	((LCD_Move@Col))&0ffh,w
  3257  002492  0F94               	addlw	low(094h)
  3258  002494  0101               	movlb	1	; () banked
  3259  002496  0101               	movlb	1	; () banked
  3260  002498  6F1C               	movwf	((?_LCD_Inst))&0ffh
  3261  00249A  ECD3  F012         	call	_LCD_Inst	;wreg free
  3262                           	
  3263  00249E                     l126:		; BSR set to: ?
  3264                           
  3265                           	line	58
  3266                           ;lcd_portd.c: 58: if (Row == 3) LCD_Inst(0xD4 + 
                                 Col);
  3267  00249E  0101               	movlb	1	; () banked
  3268  0024A0  0101               	movlb	1	; () banked
  3269  0024A2  511A               	movf	((LCD_Move@Row))&0ffh,w
  3270  0024A4  0A03               	xorlw	3
  3271                           
  3272  0024A6  A4D8               	btfss	status,2
  3273  0024A8  D001               	goto	u3321
  3274  0024AA  D001               	goto	u3320
  3275  0024AC                     u3321:
  3276  0024AC  D009               	goto	l127
  3277  0024AE                     u3320:
  3278  0024AE  0101               	movlb	1	; () banked
  3279  0024B0  0101               	movlb	1	; () banked
  3280  0024B2  511B               	movf	((LCD_Move@Col))&0ffh,w
  3281  0024B4  0FD4               	addlw	low(0D4h)
  3282  0024B6  0101               	movlb	1	; () banked
  3283  0024B8  0101               	movlb	1	; () banked
  3284  0024BA  6F1C               	movwf	((?_LCD_Inst))&0ffh
  3285  0024BC  ECD3  F012         	call	_LCD_Inst	;wreg free
  3286                           	
  3287  0024C0                     l127:		; BSR set to: ?
  3288                           
  3289                           	line	59
  3290                           ;lcd_portd.c: 59: }
  3291  0024C0                     l123:
  3292                           			; BSR set to: ?
  3293                           
  3294  0024C0  0012               	return
  3295                           	opt stack 0
  3296                           GLOBAL __end_of_LCD_Move
  3297  0024C2                     	__end_of_LCD_Move:
  3298                           	FNSIZE	_LCD_Move,0,2
  3299                           ; =============== function _LCD_Move ends ======
                                 ======
  3300                           
  3301                           	signat	_LCD_Move,8312
  3302                           	global	___almod
  3303                           	global	??___almod
  3304                           	global	?___almod
  3305                                   psect   text12,class=CODE,space=0,reloc=
                                 2
  3306                           
  3307                           	opt lm
  3308                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\almod.c"
  3309                           	line	5
  3310  000000                     	__size_of___almod	equ	__end_of___almod-___almod
  3311                           	
  3312  001D1A                     ___almod:		; BSR set to: ?
  3313                           
  3314                           	opt stack 26
  3315                           	line	8
  3316  001D1A  0101               	movlb	1	; () banked
  3317  001D1C  6F36               	movwf	(??___almod+2+0)&0ffh
  3318  001D1E  0E00               	movlw	low(0)
  3319  001D20  0101               	movlb	1	; () banked
  3320  001D22  0101               	movlb	1	; () banked
  3321  001D24  6F34               	movwf	((___almod@sign))&0ffh
  3322  001D26  0101               	movlb	1	; () banked
  3323  001D28  5136               	movf	(??___almod+2+0)&0ffh,w
  3324                           	line	9
  3325  001D2A  0101               	movlb	1	; () banked
  3326  001D2C  0101               	movlb	1	; () banked
  3327  001D2E  AF2F               	btfss	((___almod@dividend+3))&0ffh,7
  3328  001D30  D001               	goto	u3371
  3329  001D32  D001               	goto	u3370
  3330  001D34                     u3371:
  3331  001D34  D018               	goto	l285
  3332  001D36                     u3370:
  3333                           	line	10
  3334  001D36  0101               	movlb	1	; () banked
  3335  001D38  0101               	movlb	1	; () banked
  3336  001D3A  1F2F               	comf	((___almod@dividend+3))&0ffh
  3337  001D3C  0101               	movlb	1	; () banked
  3338  001D3E  1F2E               	comf	((___almod@dividend+2))&0ffh
  3339  001D40  0101               	movlb	1	; () banked
  3340  001D42  1F2D               	comf	((___almod@dividend+1))&0ffh
  3341  001D44  0101               	movlb	1	; () banked
  3342  001D46  6D2C               	negf	((___almod@dividend))&0ffh
  3343  001D48  0E00               	movlw	0
  3344  001D4A  0101               	movlb	1	; () banked
  3345  001D4C  232D               	addwfc	((___almod@dividend+1))&0ffh
  3346  001D4E  0101               	movlb	1	; () banked
  3347  001D50  232E               	addwfc	((___almod@dividend+2))&0ffh
  3348  001D52  0101               	movlb	1	; () banked
  3349  001D54  232F               	addwfc	((___almod@dividend+3))&0ffh
  3350                           	line	11
  3351  001D56  0101               	movlb	1	; () banked
  3352  001D58  6F36               	movwf	(??___almod+2+0)&0ffh
  3353  001D5A  0E01               	movlw	low(01h)
  3354  001D5C  0101               	movlb	1	; () banked
  3355  001D5E  0101               	movlb	1	; () banked
  3356  001D60  6F34               	movwf	((___almod@sign))&0ffh
  3357  001D62  0101               	movlb	1	; () banked
  3358  001D64  5136               	movf	(??___almod+2+0)&0ffh,w
  3359                           	line	12
  3360                           	
  3361  001D66                     l285:		; BSR set to: ?
  3362                           
  3363                           	line	13
  3364  001D66  0101               	movlb	1	; () banked
  3365  001D68  0101               	movlb	1	; () banked
  3366  001D6A  AF33               	btfss	((___almod@divisor+3))&0ffh,7
  3367  001D6C  D001               	goto	u3381
  3368  001D6E  D001               	goto	u3380
  3369  001D70                     u3381:
  3370  001D70  D010               	goto	l286
  3371  001D72                     u3380:
  3372                           	line	14
  3373  001D72  0101               	movlb	1	; () banked
  3374  001D74  0101               	movlb	1	; () banked
  3375  001D76  1F33               	comf	((___almod@divisor+3))&0ffh
  3376  001D78  0101               	movlb	1	; () banked
  3377  001D7A  1F32               	comf	((___almod@divisor+2))&0ffh
  3378  001D7C  0101               	movlb	1	; () banked
  3379  001D7E  1F31               	comf	((___almod@divisor+1))&0ffh
  3380  001D80  0101               	movlb	1	; () banked
  3381  001D82  6D30               	negf	((___almod@divisor))&0ffh
  3382  001D84  0E00               	movlw	0
  3383  001D86  0101               	movlb	1	; () banked
  3384  001D88  2331               	addwfc	((___almod@divisor+1))&0ffh
  3385  001D8A  0101               	movlb	1	; () banked
  3386  001D8C  2332               	addwfc	((___almod@divisor+2))&0ffh
  3387  001D8E  0101               	movlb	1	; () banked
  3388  001D90  2333               	addwfc	((___almod@divisor+3))&0ffh
  3389                           	
  3390  001D92                     l286:		; BSR set to: ?
  3391                           
  3392                           	line	15
  3393  001D92  0101               	movlb	1	; () banked
  3394  001D94  5133               	movf	((___almod@divisor+3))&0ffh,w
  3395  001D96  1130               	iorwf ((___almod@divisor))&0ffh,w
  3396  001D98  1131               	iorwf ((___almod@divisor+1))&0ffh,w
  3397  001D9A  1132               	iorwf ((___almod@divisor+2))&0ffh,w
  3398                           
  3399  001D9C  B4D8               	btfsc	status,2
  3400  001D9E  D001               	goto	u3391
  3401  001DA0  D001               	goto	u3390
  3402  001DA2                     u3391:
  3403  001DA2  D05E               	goto	l287
  3404  001DA4                     u3390:
  3405                           	line	16
  3406  001DA4  0101               	movlb	1	; () banked
  3407  001DA6  6F36               	movwf	(??___almod+2+0)&0ffh
  3408  001DA8  0E01               	movlw	low(01h)
  3409  001DAA  0101               	movlb	1	; () banked
  3410  001DAC  0101               	movlb	1	; () banked
  3411  001DAE  6F35               	movwf	((___almod@counter))&0ffh
  3412  001DB0  0101               	movlb	1	; () banked
  3413  001DB2  5136               	movf	(??___almod+2+0)&0ffh,w
  3414                           	line	17
  3415  001DB4  D00D               	goto	l288
  3416                           	
  3417  001DB6                     l289:		; BSR set to: ?
  3418                           
  3419                           	line	18
  3420  001DB6  0101               	movlb	1	; () banked
  3421  001DB8  90D8               	bcf	status,0
  3422  001DBA  0101               	movlb	1	; () banked
  3423  001DBC  3730               	rlcf	((___almod@divisor))&0ffh
  3424  001DBE  0101               	movlb	1	; () banked
  3425  001DC0  3731               	rlcf	((___almod@divisor+1))&0ffh
  3426  001DC2  0101               	movlb	1	; () banked
  3427  001DC4  3732               	rlcf	((___almod@divisor+2))&0ffh
  3428  001DC6  0101               	movlb	1	; () banked
  3429  001DC8  3733               	rlcf	((___almod@divisor+3))&0ffh
  3430                           	line	19
  3431  001DCA  0101               	movlb	1	; () banked
  3432  001DCC  0101               	movlb	1	; () banked
  3433  001DCE  2B35               	incf	((___almod@counter))&0ffh
  3434                           	line	20
  3435                           	
  3436  001DD0                     l288:		; BSR set to: ?
  3437                           
  3438                           	line	17
  3439  001DD0  0101               	movlb	1	; () banked
  3440                           	
  3441  001DD2  0101               	movlb	1	; () banked
  3442  001DD4  AF33               	btfss	((___almod@divisor+3))&0ffh,(31)&7
  3443  001DD6  D001               	goto	u3401
  3444  001DD8  D001               	goto	u3400
  3445  001DDA                     u3401:
  3446  001DDA  D7ED               	goto	l289
  3447  001DDC                     u3400:
  3448                           	
  3449  001DDC                     l290:		; BSR set to: ?
  3450                           
  3451                           	line	21
  3452                           	
  3453  001DDC                     l293:		; BSR set to: ?
  3454                           
  3455                           	line	22
  3456  001DDC  0101               	movlb	1	; () banked
  3457  001DDE  0101               	movlb	1	; () banked
  3458  001DE0  5130               	movf	((___almod@divisor))&0ffh,w
  3459  001DE2  0101               	movlb	1	; () banked
  3460  001DE4  0101               	movlb	1	; () banked
  3461  001DE6  5D2C               	subwf	((___almod@dividend))&0ffh,w
  3462  001DE8  0101               	movlb	1	; () banked
  3463  001DEA  0101               	movlb	1	; () banked
  3464  001DEC  5131               	movf	((___almod@divisor+1))&0ffh,w
  3465  001DEE  0101               	movlb	1	; () banked
  3466  001DF0  0101               	movlb	1	; () banked
  3467  001DF2  592D               	subwfb	((___almod@dividend+1))&0ffh,w
  3468  001DF4  0101               	movlb	1	; () banked
  3469  001DF6  0101               	movlb	1	; () banked
  3470  001DF8  5132               	movf	((___almod@divisor+2))&0ffh,w
  3471  001DFA  0101               	movlb	1	; () banked
  3472  001DFC  0101               	movlb	1	; () banked
  3473  001DFE  592E               	subwfb	((___almod@dividend+2))&0ffh,w
  3474  001E00  0101               	movlb	1	; () banked
  3475  001E02  0101               	movlb	1	; () banked
  3476  001E04  5133               	movf	((___almod@divisor+3))&0ffh,w
  3477  001E06  0101               	movlb	1	; () banked
  3478  001E08  0101               	movlb	1	; () banked
  3479  001E0A  592F               	subwfb	((___almod@dividend+3))&0ffh,w
  3480  001E0C  A0D8               	btfss	status,0
  3481  001E0E  D001               	goto	u3411
  3482  001E10  D001               	goto	u3410
  3483  001E12                     u3411:
  3484  001E12  D018               	goto	l294
  3485  001E14                     u3410:
  3486                           	line	23
  3487  001E14  0101               	movlb	1	; () banked
  3488  001E16  0101               	movlb	1	; () banked
  3489  001E18  5130               	movf	((___almod@divisor))&0ffh,w
  3490  001E1A  0101               	movlb	1	; () banked
  3491  001E1C  0101               	movlb	1	; () banked
  3492  001E1E  5F2C               	subwf	((___almod@dividend))&0ffh
  3493  001E20  0101               	movlb	1	; () banked
  3494  001E22  0101               	movlb	1	; () banked
  3495  001E24  5131               	movf	((___almod@divisor+1))&0ffh,w
  3496  001E26  0101               	movlb	1	; () banked
  3497  001E28  0101               	movlb	1	; () banked
  3498  001E2A  5B2D               	subwfb	((___almod@dividend+1))&0ffh
  3499  001E2C  0101               	movlb	1	; () banked
  3500  001E2E  0101               	movlb	1	; () banked
  3501  001E30  5132               	movf	((___almod@divisor+2))&0ffh,w
  3502  001E32  0101               	movlb	1	; () banked
  3503  001E34  0101               	movlb	1	; () banked
  3504  001E36  5B2E               	subwfb	((___almod@dividend+2))&0ffh
  3505  001E38  0101               	movlb	1	; () banked
  3506  001E3A  0101               	movlb	1	; () banked
  3507  001E3C  5133               	movf	((___almod@divisor+3))&0ffh,w
  3508  001E3E  0101               	movlb	1	; () banked
  3509  001E40  0101               	movlb	1	; () banked
  3510  001E42  5B2F               	subwfb	((___almod@dividend+3))&0ffh
  3511                           	
  3512  001E44                     l294:		; BSR set to: ?
  3513                           
  3514                           	line	24
  3515  001E44  0101               	movlb	1	; () banked
  3516  001E46  90D8               	bcf	status,0
  3517  001E48  0101               	movlb	1	; () banked
  3518  001E4A  3333               	rrcf	((___almod@divisor+3))&0ffh
  3519  001E4C  0101               	movlb	1	; () banked
  3520  001E4E  3332               	rrcf	((___almod@divisor+2))&0ffh
  3521  001E50  0101               	movlb	1	; () banked
  3522  001E52  3331               	rrcf	((___almod@divisor+1))&0ffh
  3523  001E54  0101               	movlb	1	; () banked
  3524  001E56  3330               	rrcf	((___almod@divisor))&0ffh
  3525                           	line	25
  3526  001E58  0101               	movlb	1	; () banked
  3527  001E5A  0101               	movlb	1	; () banked
  3528  001E5C  2F35               	decfsz	((___almod@counter))&0ffh
  3529                           	
  3530  001E5E  D7BE               	goto	l293
  3531                           	
  3532  001E60                     l292:		; BSR set to: ?
  3533                           
  3534                           	line	26
  3535                           	
  3536  001E60                     l287:		; BSR set to: ?
  3537                           
  3538                           	line	27
  3539  001E60  0101               	movlb	1	; () banked
  3540  001E62  0101               	movlb	1	; () banked
  3541  001E64  5134               	movf	((___almod@sign))&0ffh,w
  3542  001E66  B4D8               	btfsc	status,2
  3543  001E68  D001               	goto	u3421
  3544  001E6A  D001               	goto	u3420
  3545  001E6C                     u3421:
  3546  001E6C  D010               	goto	l295
  3547  001E6E                     u3420:
  3548                           	line	28
  3549  001E6E  0101               	movlb	1	; () banked
  3550  001E70  0101               	movlb	1	; () banked
  3551  001E72  1F2F               	comf	((___almod@dividend+3))&0ffh
  3552  001E74  0101               	movlb	1	; () banked
  3553  001E76  1F2E               	comf	((___almod@dividend+2))&0ffh
  3554  001E78  0101               	movlb	1	; () banked
  3555  001E7A  1F2D               	comf	((___almod@dividend+1))&0ffh
  3556  001E7C  0101               	movlb	1	; () banked
  3557  001E7E  6D2C               	negf	((___almod@dividend))&0ffh
  3558  001E80  0E00               	movlw	0
  3559  001E82  0101               	movlb	1	; () banked
  3560  001E84  232D               	addwfc	((___almod@dividend+1))&0ffh
  3561  001E86  0101               	movlb	1	; () banked
  3562  001E88  232E               	addwfc	((___almod@dividend+2))&0ffh
  3563  001E8A  0101               	movlb	1	; () banked
  3564  001E8C  232F               	addwfc	((___almod@dividend+3))&0ffh
  3565                           	
  3566  001E8E                     l295:		; BSR set to: ?
  3567                           
  3568                           	line	29
  3569  001E8E  C12C  F12C         	movff	(___almod@dividend),(?___almod)
  3570  001E92  C12D  F12D         	movff	(___almod@dividend+1),(?___almod+1)
  3571  001E96  C12E  F12E         	movff	(___almod@dividend+2),(?___almod+2)
  3572  001E9A  C12F  F12F         	movff	(___almod@dividend+3),(?___almod+3)
  3573  001E9E  D000               	goto	l284
  3574                           	line	30
  3575  001EA0                     l284:
  3576                           			; BSR set to: ?
  3577                           
  3578  001EA0  0012               	return
  3579                           	opt stack 0
  3580                           GLOBAL __end_of___almod
  3581  001EA2                     	__end_of___almod:
  3582                           	FNSIZE	___almod,3,8
  3583                           ; =============== function ___almod ends =======
                                 =====
  3584                           
  3585                           	signat	___almod,8316
  3586                           	global	___aldiv
  3587                           	global	??___aldiv
  3588                           	global	?___aldiv
  3589                                   psect   text13,class=CODE,space=0,reloc=
                                 2
  3590                           
  3591                           	opt lm
  3592                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\aldiv.c"
  3593                           	line	5
  3594  000000                     	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  3595                           	
  3596  0019CE                     ___aldiv:		; BSR set to: ?
  3597                           
  3598                           	opt stack 26
  3599                           	line	9
  3600  0019CE  0101               	movlb	1	; () banked
  3601  0019D0  6F3A               	movwf	(??___aldiv+6+0)&0ffh
  3602  0019D2  0E00               	movlw	low(0)
  3603  0019D4  0101               	movlb	1	; () banked
  3604  0019D6  0101               	movlb	1	; () banked
  3605  0019D8  6F35               	movwf	((___aldiv@sign))&0ffh
  3606  0019DA  0101               	movlb	1	; () banked
  3607  0019DC  513A               	movf	(??___aldiv+6+0)&0ffh,w
  3608                           	line	10
  3609  0019DE  0101               	movlb	1	; () banked
  3610  0019E0  0101               	movlb	1	; () banked
  3611  0019E2  AF33               	btfss	((___aldiv@divisor+3))&0ffh,7
  3612  0019E4  D001               	goto	u3431
  3613  0019E6  D001               	goto	u3430
  3614  0019E8                     u3431:
  3615  0019E8  D018               	goto	l273
  3616  0019EA                     u3430:
  3617                           	line	11
  3618  0019EA  0101               	movlb	1	; () banked
  3619  0019EC  0101               	movlb	1	; () banked
  3620  0019EE  1F33               	comf	((___aldiv@divisor+3))&0ffh
  3621  0019F0  0101               	movlb	1	; () banked
  3622  0019F2  1F32               	comf	((___aldiv@divisor+2))&0ffh
  3623  0019F4  0101               	movlb	1	; () banked
  3624  0019F6  1F31               	comf	((___aldiv@divisor+1))&0ffh
  3625  0019F8  0101               	movlb	1	; () banked
  3626  0019FA  6D30               	negf	((___aldiv@divisor))&0ffh
  3627  0019FC  0E00               	movlw	0
  3628  0019FE  0101               	movlb	1	; () banked
  3629  001A00  2331               	addwfc	((___aldiv@divisor+1))&0ffh
  3630  001A02  0101               	movlb	1	; () banked
  3631  001A04  2332               	addwfc	((___aldiv@divisor+2))&0ffh
  3632  001A06  0101               	movlb	1	; () banked
  3633  001A08  2333               	addwfc	((___aldiv@divisor+3))&0ffh
  3634                           	line	12
  3635  001A0A  0101               	movlb	1	; () banked
  3636  001A0C  6F3A               	movwf	(??___aldiv+6+0)&0ffh
  3637  001A0E  0E01               	movlw	low(01h)
  3638  001A10  0101               	movlb	1	; () banked
  3639  001A12  0101               	movlb	1	; () banked
  3640  001A14  6F35               	movwf	((___aldiv@sign))&0ffh
  3641  001A16  0101               	movlb	1	; () banked
  3642  001A18  513A               	movf	(??___aldiv+6+0)&0ffh,w
  3643                           	line	13
  3644                           	
  3645  001A1A                     l273:		; BSR set to: ?
  3646                           
  3647                           	line	14
  3648  001A1A  0101               	movlb	1	; () banked
  3649  001A1C  0101               	movlb	1	; () banked
  3650  001A1E  AF2F               	btfss	((___aldiv@dividend+3))&0ffh,7
  3651  001A20  D001               	goto	u3441
  3652  001A22  D001               	goto	u3440
  3653  001A24                     u3441:
  3654  001A24  D014               	goto	l274
  3655  001A26                     u3440:
  3656                           	line	15
  3657  001A26  0101               	movlb	1	; () banked
  3658  001A28  0101               	movlb	1	; () banked
  3659  001A2A  1F2F               	comf	((___aldiv@dividend+3))&0ffh
  3660  001A2C  0101               	movlb	1	; () banked
  3661  001A2E  1F2E               	comf	((___aldiv@dividend+2))&0ffh
  3662  001A30  0101               	movlb	1	; () banked
  3663  001A32  1F2D               	comf	((___aldiv@dividend+1))&0ffh
  3664  001A34  0101               	movlb	1	; () banked
  3665  001A36  6D2C               	negf	((___aldiv@dividend))&0ffh
  3666  001A38  0E00               	movlw	0
  3667  001A3A  0101               	movlb	1	; () banked
  3668  001A3C  232D               	addwfc	((___aldiv@dividend+1))&0ffh
  3669  001A3E  0101               	movlb	1	; () banked
  3670  001A40  232E               	addwfc	((___aldiv@dividend+2))&0ffh
  3671  001A42  0101               	movlb	1	; () banked
  3672  001A44  232F               	addwfc	((___aldiv@dividend+3))&0ffh
  3673                           	line	16
  3674  001A46  0E01               	movlw	(01h)&0ffh
  3675  001A48  0101               	movlb	1	; () banked
  3676  001A4A  0101               	movlb	1	; () banked
  3677  001A4C  1B35               	xorwf	((___aldiv@sign))&0ffh
  3678                           	line	17
  3679                           	
  3680  001A4E                     l274:		; BSR set to: ?
  3681                           
  3682                           	line	18
  3683  001A4E  0E00               	movlw	low(0)
  3684  001A50  0101               	movlb	1	; () banked
  3685  001A52  0101               	movlb	1	; () banked
  3686  001A54  6F36               	movwf	((___aldiv@quotient))&0ffh
  3687  001A56  0E00               	movlw	high(0)
  3688  001A58  0101               	movlb	1	; () banked
  3689  001A5A  6F37               	movwf	((___aldiv@quotient+1))&0ffh
  3690  001A5C  0E00               	movlw	low highword(0)
  3691  001A5E  0101               	movlb	1	; () banked
  3692  001A60  6F38               	movwf	((___aldiv@quotient+2))&0ffh
  3693  001A62  0E00               	movlw	high highword(0)
  3694  001A64  0101               	movlb	1	; () banked
  3695  001A66  6F39               	movwf	((___aldiv@quotient+3))&0ffh
  3696                           	line	19
  3697  001A68  0101               	movlb	1	; () banked
  3698  001A6A  5133               	movf	((___aldiv@divisor+3))&0ffh,w
  3699  001A6C  1130               	iorwf ((___aldiv@divisor))&0ffh,w
  3700  001A6E  1131               	iorwf ((___aldiv@divisor+1))&0ffh,w
  3701  001A70  1132               	iorwf ((___aldiv@divisor+2))&0ffh,w
  3702                           
  3703  001A72  B4D8               	btfsc	status,2
  3704  001A74  D001               	goto	u3451
  3705  001A76  D001               	goto	u3450
  3706  001A78                     u3451:
  3707  001A78  D06B               	goto	l275
  3708  001A7A                     u3450:
  3709                           	line	20
  3710  001A7A  0101               	movlb	1	; () banked
  3711  001A7C  6F3A               	movwf	(??___aldiv+6+0)&0ffh
  3712  001A7E  0E01               	movlw	low(01h)
  3713  001A80  0101               	movlb	1	; () banked
  3714  001A82  0101               	movlb	1	; () banked
  3715  001A84  6F34               	movwf	((___aldiv@counter))&0ffh
  3716  001A86  0101               	movlb	1	; () banked
  3717  001A88  513A               	movf	(??___aldiv+6+0)&0ffh,w
  3718                           	line	21
  3719  001A8A  D00D               	goto	l276
  3720                           	
  3721  001A8C                     l277:		; BSR set to: ?
  3722                           
  3723                           	line	22
  3724  001A8C  0101               	movlb	1	; () banked
  3725  001A8E  90D8               	bcf	status,0
  3726  001A90  0101               	movlb	1	; () banked
  3727  001A92  3730               	rlcf	((___aldiv@divisor))&0ffh
  3728  001A94  0101               	movlb	1	; () banked
  3729  001A96  3731               	rlcf	((___aldiv@divisor+1))&0ffh
  3730  001A98  0101               	movlb	1	; () banked
  3731  001A9A  3732               	rlcf	((___aldiv@divisor+2))&0ffh
  3732  001A9C  0101               	movlb	1	; () banked
  3733  001A9E  3733               	rlcf	((___aldiv@divisor+3))&0ffh
  3734                           	line	23
  3735  001AA0  0101               	movlb	1	; () banked
  3736  001AA2  0101               	movlb	1	; () banked
  3737  001AA4  2B34               	incf	((___aldiv@counter))&0ffh
  3738                           	line	24
  3739                           	
  3740  001AA6                     l276:		; BSR set to: ?
  3741                           
  3742                           	line	21
  3743  001AA6  0101               	movlb	1	; () banked
  3744                           	
  3745  001AA8  0101               	movlb	1	; () banked
  3746  001AAA  AF33               	btfss	((___aldiv@divisor+3))&0ffh,(31)&7
  3747  001AAC  D001               	goto	u3461
  3748  001AAE  D001               	goto	u3460
  3749  001AB0                     u3461:
  3750  001AB0  D7ED               	goto	l277
  3751  001AB2                     u3460:
  3752                           	
  3753  001AB2                     l278:		; BSR set to: ?
  3754                           
  3755                           	line	25
  3756                           	
  3757  001AB2                     l281:		; BSR set to: ?
  3758                           
  3759                           	line	26
  3760  001AB2  0101               	movlb	1	; () banked
  3761  001AB4  90D8               	bcf	status,0
  3762  001AB6  0101               	movlb	1	; () banked
  3763  001AB8  3736               	rlcf	((___aldiv@quotient))&0ffh
  3764  001ABA  0101               	movlb	1	; () banked
  3765  001ABC  3737               	rlcf	((___aldiv@quotient+1))&0ffh
  3766  001ABE  0101               	movlb	1	; () banked
  3767  001AC0  3738               	rlcf	((___aldiv@quotient+2))&0ffh
  3768  001AC2  0101               	movlb	1	; () banked
  3769  001AC4  3739               	rlcf	((___aldiv@quotient+3))&0ffh
  3770                           	line	27
  3771  001AC6  0101               	movlb	1	; () banked
  3772  001AC8  0101               	movlb	1	; () banked
  3773  001ACA  5130               	movf	((___aldiv@divisor))&0ffh,w
  3774  001ACC  0101               	movlb	1	; () banked
  3775  001ACE  0101               	movlb	1	; () banked
  3776  001AD0  5D2C               	subwf	((___aldiv@dividend))&0ffh,w
  3777  001AD2  0101               	movlb	1	; () banked
  3778  001AD4  0101               	movlb	1	; () banked
  3779  001AD6  5131               	movf	((___aldiv@divisor+1))&0ffh,w
  3780  001AD8  0101               	movlb	1	; () banked
  3781  001ADA  0101               	movlb	1	; () banked
  3782  001ADC  592D               	subwfb	((___aldiv@dividend+1))&0ffh,w
  3783  001ADE  0101               	movlb	1	; () banked
  3784  001AE0  0101               	movlb	1	; () banked
  3785  001AE2  5132               	movf	((___aldiv@divisor+2))&0ffh,w
  3786  001AE4  0101               	movlb	1	; () banked
  3787  001AE6  0101               	movlb	1	; () banked
  3788  001AE8  592E               	subwfb	((___aldiv@dividend+2))&0ffh,w
  3789  001AEA  0101               	movlb	1	; () banked
  3790  001AEC  0101               	movlb	1	; () banked
  3791  001AEE  5133               	movf	((___aldiv@divisor+3))&0ffh,w
  3792  001AF0  0101               	movlb	1	; () banked
  3793  001AF2  0101               	movlb	1	; () banked
  3794  001AF4  592F               	subwfb	((___aldiv@dividend+3))&0ffh,w
  3795  001AF6  A0D8               	btfss	status,0
  3796  001AF8  D001               	goto	u3471
  3797  001AFA  D001               	goto	u3470
  3798  001AFC                     u3471:
  3799  001AFC  D01B               	goto	l282
  3800  001AFE                     u3470:
  3801                           	line	28
  3802  001AFE  0101               	movlb	1	; () banked
  3803  001B00  0101               	movlb	1	; () banked
  3804  001B02  5130               	movf	((___aldiv@divisor))&0ffh,w
  3805  001B04  0101               	movlb	1	; () banked
  3806  001B06  0101               	movlb	1	; () banked
  3807  001B08  5F2C               	subwf	((___aldiv@dividend))&0ffh
  3808  001B0A  0101               	movlb	1	; () banked
  3809  001B0C  0101               	movlb	1	; () banked
  3810  001B0E  5131               	movf	((___aldiv@divisor+1))&0ffh,w
  3811  001B10  0101               	movlb	1	; () banked
  3812  001B12  0101               	movlb	1	; () banked
  3813  001B14  5B2D               	subwfb	((___aldiv@dividend+1))&0ffh
  3814  001B16  0101               	movlb	1	; () banked
  3815  001B18  0101               	movlb	1	; () banked
  3816  001B1A  5132               	movf	((___aldiv@divisor+2))&0ffh,w
  3817  001B1C  0101               	movlb	1	; () banked
  3818  001B1E  0101               	movlb	1	; () banked
  3819  001B20  5B2E               	subwfb	((___aldiv@dividend+2))&0ffh
  3820  001B22  0101               	movlb	1	; () banked
  3821  001B24  0101               	movlb	1	; () banked
  3822  001B26  5133               	movf	((___aldiv@divisor+3))&0ffh,w
  3823  001B28  0101               	movlb	1	; () banked
  3824  001B2A  0101               	movlb	1	; () banked
  3825  001B2C  5B2F               	subwfb	((___aldiv@dividend+3))&0ffh
  3826                           	line	29
  3827  001B2E  0101               	movlb	1	; () banked
  3828  001B30  0101               	movlb	1	; () banked
  3829  001B32  8136               	bsf	(0+(0/8)+(___aldiv@quotient))&0ffh,(0)&7
  3830                           	line	30
  3831                           	
  3832  001B34                     l282:		; BSR set to: ?
  3833                           
  3834                           	line	31
  3835  001B34  0101               	movlb	1	; () banked
  3836  001B36  90D8               	bcf	status,0
  3837  001B38  0101               	movlb	1	; () banked
  3838  001B3A  3333               	rrcf	((___aldiv@divisor+3))&0ffh
  3839  001B3C  0101               	movlb	1	; () banked
  3840  001B3E  3332               	rrcf	((___aldiv@divisor+2))&0ffh
  3841  001B40  0101               	movlb	1	; () banked
  3842  001B42  3331               	rrcf	((___aldiv@divisor+1))&0ffh
  3843  001B44  0101               	movlb	1	; () banked
  3844  001B46  3330               	rrcf	((___aldiv@divisor))&0ffh
  3845                           	line	32
  3846  001B48  0101               	movlb	1	; () banked
  3847  001B4A  0101               	movlb	1	; () banked
  3848  001B4C  2F34               	decfsz	((___aldiv@counter))&0ffh
  3849                           	
  3850  001B4E  D7B1               	goto	l281
  3851                           	
  3852  001B50                     l280:		; BSR set to: ?
  3853                           
  3854                           	line	33
  3855                           	
  3856  001B50                     l275:		; BSR set to: ?
  3857                           
  3858                           	line	34
  3859  001B50  0101               	movlb	1	; () banked
  3860  001B52  0101               	movlb	1	; () banked
  3861  001B54  5135               	movf	((___aldiv@sign))&0ffh,w
  3862  001B56  B4D8               	btfsc	status,2
  3863  001B58  D001               	goto	u3481
  3864  001B5A  D001               	goto	u3480
  3865  001B5C                     u3481:
  3866  001B5C  D010               	goto	l283
  3867  001B5E                     u3480:
  3868                           	line	35
  3869  001B5E  0101               	movlb	1	; () banked
  3870  001B60  0101               	movlb	1	; () banked
  3871  001B62  1F39               	comf	((___aldiv@quotient+3))&0ffh
  3872  001B64  0101               	movlb	1	; () banked
  3873  001B66  1F38               	comf	((___aldiv@quotient+2))&0ffh
  3874  001B68  0101               	movlb	1	; () banked
  3875  001B6A  1F37               	comf	((___aldiv@quotient+1))&0ffh
  3876  001B6C  0101               	movlb	1	; () banked
  3877  001B6E  6D36               	negf	((___aldiv@quotient))&0ffh
  3878  001B70  0E00               	movlw	0
  3879  001B72  0101               	movlb	1	; () banked
  3880  001B74  2337               	addwfc	((___aldiv@quotient+1))&0ffh
  3881  001B76  0101               	movlb	1	; () banked
  3882  001B78  2338               	addwfc	((___aldiv@quotient+2))&0ffh
  3883  001B7A  0101               	movlb	1	; () banked
  3884  001B7C  2339               	addwfc	((___aldiv@quotient+3))&0ffh
  3885                           	
  3886  001B7E                     l283:		; BSR set to: ?
  3887                           
  3888                           	line	36
  3889  001B7E  C136  F12C         	movff	(___aldiv@quotient),(?___aldiv)
  3890  001B82  C137  F12D         	movff	(___aldiv@quotient+1),(?___aldiv+1)
  3891  001B86  C138  F12E         	movff	(___aldiv@quotient+2),(?___aldiv+2)
  3892  001B8A  C139  F12F         	movff	(___aldiv@quotient+3),(?___aldiv+3)
  3893  001B8E  D000               	goto	l272
  3894                           	line	37
  3895  001B90                     l272:
  3896                           			; BSR set to: ?
  3897                           
  3898  001B90  0012               	return
  3899                           	opt stack 0
  3900                           GLOBAL __end_of___aldiv
  3901  001B92                     	__end_of___aldiv:
  3902                           	FNSIZE	___aldiv,7,8
  3903                           ; =============== function ___aldiv ends =======
                                 =====
  3904                           
  3905                           	signat	___aldiv,8316
  3906                           	global	_LCD_Inst
  3907                           	global	??_LCD_Inst
  3908                           	global	?_LCD_Inst
  3909                                   psect   text14,class=CODE,space=0,reloc=
                                 2
  3910                           
  3911                           	opt lm
  3912                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  3913                           	line	44
  3914  000000                     	__size_of_LCD_Inst	equ	__end_of_LCD_Inst-_LCD_I
                                 nst
  3915                           ;lcd_portd.c: 43: void LCD_Inst(unsigned char c)
  3916                           ;lcd_portd.c: 44: {
  3917                           	
  3918  0025A6                     _LCD_Inst:		; BSR set to: ?
  3919                           
  3920                           	opt stack 26
  3921                           	line	45
  3922  0025A6  9483               	bcf	c:(31770/8),(31770)&7	;volatile
  3923                           	line	46
  3924                           ;lcd_portd.c: 46: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
  3925  0025A8  C11C  F11D         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  3926  0025AC  0EF0               	movlw	0F0h
  3927  0025AE  0101               	movlb	1	; () banked
  3928  0025B0  171D               	andwf	(??_LCD_Inst+0+0)&0ffh
  3929  0025B2  5083               	movf	((c:3971)),c,w	;volatile
  3930  0025B4  0B0F               	andlw	low(0Fh)
  3931  0025B6  0101               	movlb	1	; () banked
  3932  0025B8  111D               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  3933  0025BA  6E83               	movwf	((c:3971)),c	;volatile
  3934                           	line	47
  3935                           ;lcd_portd.c: 47: LCD_Strobe();
  3936  0025BC  EC78  F013         	call	_LCD_Strobe	;wreg free
  3937                           	line	48
  3938                           ;lcd_portd.c: 48: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
  3939  0025C0  C11C  F11D         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
  3940  0025C4  0101               	movlb	1	; () banked
  3941  0025C6  3B1D               	swapf	(??_LCD_Inst+0+0)&0ffh
  3942  0025C8  0EF0               	movlw	(0ffh shl 4) & 0ffh
  3943  0025CA  171D               	andwf	(??_LCD_Inst+0+0)&0ffh
  3944  0025CC  0EF0               	movlw	0F0h
  3945  0025CE  0101               	movlb	1	; () banked
  3946  0025D0  171D               	andwf	(??_LCD_Inst+0+0)&0ffh
  3947  0025D2  5083               	movf	((c:3971)),c,w	;volatile
  3948  0025D4  0B0F               	andlw	low(0Fh)
  3949  0025D6  0101               	movlb	1	; () banked
  3950  0025D8  111D               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
  3951  0025DA  6E83               	movwf	((c:3971)),c	;volatile
  3952                           	line	49
  3953                           ;lcd_portd.c: 49: LCD_Strobe();
  3954  0025DC  EC78  F013         	call	_LCD_Strobe	;wreg free
  3955                           	line	50
  3956                           ;lcd_portd.c: 50: Wait_ms(10);
  3957  0025E0  0E0A               	movlw	low(0Ah)
  3958  0025E2  0101               	movlb	1	; () banked
  3959  0025E4  0101               	movlb	1	; () banked
  3960  0025E6  6F1E               	movwf	((?_Wait_ms))&0ffh
  3961  0025E8  0E00               	movlw	high(0Ah)
  3962  0025EA  0101               	movlb	1	; () banked
  3963  0025EC  6F1F               	movwf	((?_Wait_ms+1))&0ffh
  3964  0025EE  EC61  F012         	call	_Wait_ms	;wreg free
  3965                           	line	51
  3966                           ;lcd_portd.c: 51: }
  3967  0025F2                     l122:
  3968                           			; BSR set to: ?
  3969                           
  3970  0025F2  0012               	return
  3971                           	opt stack 0
  3972                           GLOBAL __end_of_LCD_Inst
  3973  0025F4                     	__end_of_LCD_Inst:
  3974                           	FNSIZE	_LCD_Inst,1,1
  3975                           ; =============== function _LCD_Inst ends ======
                                 ======
  3976                           
  3977                           	signat	_LCD_Inst,4216
  3978                           	global	_LCD_Write
  3979                           	global	??_LCD_Write
  3980                           	global	?_LCD_Write
  3981                                   psect   text15,class=CODE,space=0,reloc=
                                 2
  3982                           
  3983                           	opt lm
  3984                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  3985                           	line	62
  3986  000000                     	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD
                                 _Write
  3987                           ;lcd_portd.c: 61: void LCD_Write(unsigned char c
                                 )
  3988                           ;lcd_portd.c: 62: {
  3989                           	
  3990  00267E                     _LCD_Write:		; BSR set to: ?
  3991                           
  3992                           	opt stack 26
  3993                           	line	63
  3994                           ;lcd_portd.c: 63: RD2 = 1;
  3995  00267E  8483               	bsf	c:(31770/8),(31770)&7	;volatile
  3996                           	line	64
  3997                           ;lcd_portd.c: 64: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
  3998  002680  C12C  F12D         	movff	(LCD_Write@c),??_LCD_Write+0+0
  3999  002684  0EF0               	movlw	0F0h
  4000  002686  0101               	movlb	1	; () banked
  4001  002688  172D               	andwf	(??_LCD_Write+0+0)&0ffh
  4002  00268A  5083               	movf	((c:3971)),c,w	;volatile
  4003  00268C  0B0F               	andlw	low(0Fh)
  4004  00268E  0101               	movlb	1	; () banked
  4005  002690  112D               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  4006  002692  6E83               	movwf	((c:3971)),c	;volatile
  4007                           	line	65
  4008                           ;lcd_portd.c: 65: LCD_Strobe();
  4009  002694  EC78  F013         	call	_LCD_Strobe	;wreg free
  4010                           	line	66
  4011                           ;lcd_portd.c: 66: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
  4012  002698  C12C  F12D         	movff	(LCD_Write@c),??_LCD_Write+0+0
  4013  00269C  0101               	movlb	1	; () banked
  4014  00269E  3B2D               	swapf	(??_LCD_Write+0+0)&0ffh
  4015  0026A0  0EF0               	movlw	(0ffh shl 4) & 0ffh
  4016  0026A2  172D               	andwf	(??_LCD_Write+0+0)&0ffh
  4017  0026A4  0EF0               	movlw	0F0h
  4018  0026A6  0101               	movlb	1	; () banked
  4019  0026A8  172D               	andwf	(??_LCD_Write+0+0)&0ffh
  4020  0026AA  5083               	movf	((c:3971)),c,w	;volatile
  4021  0026AC  0B0F               	andlw	low(0Fh)
  4022  0026AE  0101               	movlb	1	; () banked
  4023  0026B0  112D               	iorwf	(??_LCD_Write+0+0)&0ffh,w
  4024  0026B2  6E83               	movwf	((c:3971)),c	;volatile
  4025                           	line	67
  4026                           ;lcd_portd.c: 67: LCD_Strobe();
  4027  0026B4  EC78  F013         	call	_LCD_Strobe	;wreg free
  4028                           	line	69
  4029                           ;lcd_portd.c: 69: }
  4030  0026B8                     l128:
  4031                           			; BSR set to: ?
  4032                           
  4033  0026B8  0012               	return
  4034                           	opt stack 0
  4035                           GLOBAL __end_of_LCD_Write
  4036  0026BA                     	__end_of_LCD_Write:
  4037                           	FNSIZE	_LCD_Write,1,1
  4038                           ; =============== function _LCD_Write ends =====
                                 =======
  4039                           
  4040                           	signat	_LCD_Write,4216
  4041                           	global	_LCD_Strobe
  4042                           	global	??_LCD_Strobe
  4043                           	global	?_LCD_Strobe
  4044                                   psect   text16,class=CODE,space=0,reloc=
                                 2
  4045                           
  4046                           	opt lm
  4047                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  4048                           	line	32
  4049  000000                     	__size_of_LCD_Strobe	equ	__end_of_LCD_Strobe-_L
                                 CD_Strobe
  4050                           ;lcd_portd.c: 31: void LCD_Strobe(void)
  4051                           ;lcd_portd.c: 32: {
  4052                           	
  4053  0026F0                     _LCD_Strobe:		; BSR set to: ?
  4054                           
  4055                           	opt stack 25
  4056                           	line	33
  4057                           ;lcd_portd.c: 33: RD3 = 0;
  4058  0026F0  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  4059                           	line	34
  4060                           ;lcd_portd.c: 34: LCD_Pause();
  4061  0026F2  EC5D  F013         	call	_LCD_Pause	;wreg free
  4062                           	line	35
  4063                           ;lcd_portd.c: 35: RD3 = 1;
  4064  0026F6  8683               	bsf	c:(31771/8),(31771)&7	;volatile
  4065                           	line	36
  4066                           ;lcd_portd.c: 36: LCD_Pause();
  4067  0026F8  EC5D  F013         	call	_LCD_Pause	;wreg free
  4068                           	line	37
  4069                           ;lcd_portd.c: 37: RD3 = 0;
  4070  0026FC  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  4071                           	line	38
  4072                           ;lcd_portd.c: 38: LCD_Pause();
  4073  0026FE  EC5D  F013         	call	_LCD_Pause	;wreg free
  4074                           	line	39
  4075                           ;lcd_portd.c: 39: }
  4076  002702                     l121:
  4077                           			; BSR set to: ?
  4078                           
  4079  002702  0012               	return
  4080                           	opt stack 0
  4081                           GLOBAL __end_of_LCD_Strobe
  4082  002704                     	__end_of_LCD_Strobe:
  4083                           	FNSIZE	_LCD_Strobe,0,0
  4084                           ; =============== function _LCD_Strobe ends ====
                                 ========
  4085                           
  4086                           	signat	_LCD_Strobe,88
  4087                           	global	_Wait_ms
  4088                           	global	??_Wait_ms
  4089                           	global	?_Wait_ms
  4090                                   psect   text17,class=CODE,space=0,reloc=
                                 2
  4091                           
  4092                           	opt lm
  4093                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  4094                           	line	16
  4095  000000                     	__size_of_Wait_ms	equ	__end_of_Wait_ms-_Wait_ms
  4096                           ;lcd_portd.c: 15: void Wait_ms(unsigned int X)
  4097                           ;lcd_portd.c: 16: {
  4098                           	
  4099  0024C2                     _Wait_ms:		; BSR set to: ?
  4100                           
  4101                           	opt stack 25
  4102                           	line	19
  4103                           ;lcd_portd.c: 17: unsigned int i, j;
  4104                           ;lcd_portd.c: 19: for (i=0; i<X; i++)
  4105  0024C2  0E00               	movlw	low(0)
  4106  0024C4  0101               	movlb	1	; () banked
  4107  0024C6  0101               	movlb	1	; () banked
  4108  0024C8  6F20               	movwf	((Wait_ms@i))&0ffh
  4109  0024CA  0E00               	movlw	high(0)
  4110  0024CC  0101               	movlb	1	; () banked
  4111  0024CE  6F21               	movwf	((Wait_ms@i+1))&0ffh
  4112  0024D0  D026               	goto	l113
  4113                           	line	20
  4114                           	
  4115  0024D2                     l110:		; BSR set to: ?
  4116                           
  4117                           ;lcd_portd.c: 20: for (j=0; j<617; j++);
  4118  0024D2  0E00               	movlw	low(0)
  4119  0024D4  0101               	movlb	1	; () banked
  4120  0024D6  0101               	movlb	1	; () banked
  4121  0024D8  6F22               	movwf	((Wait_ms@j))&0ffh
  4122  0024DA  0E00               	movlw	high(0)
  4123  0024DC  0101               	movlb	1	; () banked
  4124  0024DE  6F23               	movwf	((Wait_ms@j+1))&0ffh
  4125  0024E0  0E69               	movlw	069h
  4126  0024E2  0101               	movlb	1	; () banked
  4127  0024E4  0101               	movlb	1	; () banked
  4128  0024E6  5D22               	subwf	((Wait_ms@j))&0ffh,w
  4129  0024E8  0E02               	movlw	02h
  4130  0024EA  0101               	movlb	1	; () banked
  4131  0024EC  5923               	subwfb	((Wait_ms@j+1))&0ffh,w
  4132  0024EE  A0D8               	btfss	status,0
  4133  0024F0  D001               	goto	u3491
  4134  0024F2  D001               	goto	u3490
  4135  0024F4                     u3491:
  4136  0024F4  D001               	goto	l114
  4137  0024F6                     u3490:
  4138  0024F6  D00F               	goto	l115
  4139                           	
  4140  0024F8                     l114:		; BSR set to: ?
  4141                           
  4142  0024F8  0101               	movlb	1	; () banked
  4143  0024FA  0101               	movlb	1	; () banked
  4144  0024FC  4B22               	infsnz	((Wait_ms@j))&0ffh
  4145  0024FE  2B23               	incf	((Wait_ms@j+1))&0ffh
  4146  002500  0E69               	movlw	069h
  4147  002502  0101               	movlb	1	; () banked
  4148  002504  0101               	movlb	1	; () banked
  4149  002506  5D22               	subwf	((Wait_ms@j))&0ffh,w
  4150  002508  0E02               	movlw	02h
  4151  00250A  0101               	movlb	1	; () banked
  4152  00250C  5923               	subwfb	((Wait_ms@j+1))&0ffh,w
  4153  00250E  A0D8               	btfss	status,0
  4154  002510  D001               	goto	u3501
  4155  002512  D001               	goto	u3500
  4156  002514                     u3501:
  4157  002514  D7F1               	goto	l114
  4158  002516                     u3500:
  4159                           	
  4160  002516                     l115:		; BSR set to: ?
  4161                           
  4162                           	line	19
  4163  002516  0101               	movlb	1	; () banked
  4164  002518  0101               	movlb	1	; () banked
  4165  00251A  4B20               	infsnz	((Wait_ms@i))&0ffh
  4166  00251C  2B21               	incf	((Wait_ms@i+1))&0ffh
  4167                           	
  4168  00251E                     l113:		; BSR set to: ?
  4169                           
  4170  00251E  0101               	movlb	1	; () banked
  4171  002520  0101               	movlb	1	; () banked
  4172  002522  511E               	movf	((Wait_ms@X))&0ffh,w
  4173  002524  0101               	movlb	1	; () banked
  4174  002526  0101               	movlb	1	; () banked
  4175  002528  5D20               	subwf	((Wait_ms@i))&0ffh,w
  4176  00252A  0101               	movlb	1	; () banked
  4177  00252C  0101               	movlb	1	; () banked
  4178  00252E  511F               	movf	((Wait_ms@X+1))&0ffh,w
  4179  002530  0101               	movlb	1	; () banked
  4180  002532  0101               	movlb	1	; () banked
  4181  002534  5921               	subwfb	((Wait_ms@i+1))&0ffh,w
  4182  002536  A0D8               	btfss	status,0
  4183  002538  D001               	goto	u3511
  4184  00253A  D001               	goto	u3510
  4185  00253C                     u3511:
  4186  00253C  D7CA               	goto	l110
  4187  00253E                     u3510:
  4188                           	
  4189  00253E                     l111:		; BSR set to: ?
  4190                           
  4191                           	line	21
  4192                           ;lcd_portd.c: 21: }
  4193  00253E                     l109:
  4194                           			; BSR set to: ?
  4195                           
  4196  00253E  0012               	return
  4197                           	opt stack 0
  4198                           GLOBAL __end_of_Wait_ms
  4199  002540                     	__end_of_Wait_ms:
  4200                           	FNSIZE	_Wait_ms,4,2
  4201                           ; =============== function _Wait_ms ends =======
                                 =====
  4202                           
  4203                           	signat	_Wait_ms,4216
  4204                           	global	_LCD_Pause
  4205                           	global	??_LCD_Pause
  4206                           	global	?_LCD_Pause
  4207                                   psect   text18,class=CODE,space=0,reloc=
                                 2
  4208                           
  4209                           	opt lm
  4210                           	file	"C:\Users\stulujr.local\Documents\MiniProj
                                 ect\CFiles\MyProject\lcd_portd.c"
  4211                           	line	25
  4212  000000                     	__size_of_LCD_Pause	equ	__end_of_LCD_Pause-_LCD
                                 _Pause
  4213                           ;lcd_portd.c: 24: void LCD_Pause(void)
  4214                           ;lcd_portd.c: 25: {
  4215                           	
  4216  0026BA                     _LCD_Pause:		; BSR set to: ?
  4217                           
  4218                           	opt stack 24
  4219                           	line	27
  4220                           ;lcd_portd.c: 26: unsigned char x;
  4221                           ;lcd_portd.c: 27: for (x=0; x<20; x++);
  4222  0026BA  0101               	movlb	1	; () banked
  4223  0026BC  6F2F               	movwf	(??_LCD_Pause+1+0)&0ffh
  4224  0026BE  0E00               	movlw	low(0)
  4225  0026C0  0101               	movlb	1	; () banked
  4226  0026C2  0101               	movlb	1	; () banked
  4227  0026C4  6F2E               	movwf	((LCD_Pause@x))&0ffh
  4228  0026C6  0101               	movlb	1	; () banked
  4229  0026C8  512F               	movf	(??_LCD_Pause+1+0)&0ffh,w
  4230  0026CA  0E13               	movlw	(014h-1)
  4231  0026CC  0101               	movlb	1	; () banked
  4232  0026CE  0101               	movlb	1	; () banked
  4233  0026D0  652E               	cpfsgt	((LCD_Pause@x))&0ffh
  4234  0026D2  D001               	goto	u3541
  4235  0026D4  D001               	goto	u3540
  4236  0026D6                     u3541:
  4237  0026D6  D001               	goto	l118
  4238  0026D8                     u3540:
  4239  0026D8  D00A               	goto	l119
  4240                           	
  4241  0026DA                     l118:		; BSR set to: ?
  4242                           
  4243  0026DA  0101               	movlb	1	; () banked
  4244  0026DC  0101               	movlb	1	; () banked
  4245  0026DE  2B2E               	incf	((LCD_Pause@x))&0ffh
  4246  0026E0  0E13               	movlw	(014h-1)
  4247  0026E2  0101               	movlb	1	; () banked
  4248  0026E4  0101               	movlb	1	; () banked
  4249  0026E6  652E               	cpfsgt	((LCD_Pause@x))&0ffh
  4250  0026E8  D001               	goto	u3551
  4251  0026EA  D001               	goto	u3550
  4252  0026EC                     u3551:
  4253+ 0026EC  D7F6               	goto	l118
  4254+ 0026EE                     u3550:
  4255+                          	
  4256+ 0026EE                     l119:		; BSR set to: ?
  4257+                          
  4258+                          	line	28
  4259+                          ;lcd_portd.c: 28: }
  4260+ 0026EE                     l117:
  4261+                          			; BSR set to: ?
  4262+                          
  4263+ 0026EE  0012               	return
  4264+                          	opt stack 0
  4265+                          GLOBAL __end_of_LCD_Pause
  4266+ 0026F0                     	__end_of_LCD_Pause:
  4267+                          	FNSIZE	_LCD_Pause,2,0
  4268+                          ; =============== function _LCD_Pause ends =====
      +                          =======
  4269+                          
  4270+                          	signat	_LCD_Pause,88
  4271+                          	global	_IntServe
  4272+                          	global	??_IntServe
  4273+                          	global	?_IntServe
  4274+                                  psect   text19,class=CODE,space=0,reloc=
      +                          2
  4275+                          
  4276+                          	opt lm
  4277+                          	file	"C:\Users\stulujr.local\Documents\MiniProj
      +                          ect\CFiles\MyProject\Lock.C"
  4278+                          	line	28
  4279+ 000000                     	__size_of_IntServe	equ	__end_of_IntServe-_IntSe
      +                          rve
  4280+                          ;Lock.C: 27: void interrupt IntServe(void)
  4281+                          ;Lock.C: 28: {
  4282+                          	
  4283+ 0022BA                     _IntServe:		; BSR set to: ?
  4284+                          
  4285+ 0022BA  0006               	pop	; remove dummy address from shadow register
      +                           refresh
  4286+                          
  4287+                          	opt stack 31
  4288+                                  psect   intcode,class=CODE,space=0,reloc
      +                          =2
  4289+                          	global	int_func
  4290+ 000808                     int_func:
  4291+                                  psect   intcode
  4292+ 000808  CFFA F13D          	movff	pclat+0,??_IntServe+2
  4293+ 00080C  CFFB F13E          	movff	pclat+1,??_IntServe+3
  4294+ 000810  CFE9 F13F          	movff	fsr0l+0,??_IntServe+4
  4295+ 000814  ED5D  F011         	call	_IntServe,f	;refresh shadow registers
  4296+                                  psect   text19
  4297+ 0022BC  CFEA F140          	movff	fsr0h+0,??_IntServe+5
  4298+ 0022C0  CFE1 F141          	movff	fsr1l+0,??_IntServe+6
  4299+ 0022C4  CFE2 F142          	movff	fsr1h+0,??_IntServe+7
  4300+ 0022C8  CFD9 F143          	movff	fsr2l+0,??_IntServe+8
  4301+ 0022CC  CFDA F144          	movff	fsr2h+0,??_IntServe+9
  4302+ 0022D0  CFF3 F145          	movff	prodl+0,??_IntServe+10
  4303+ 0022D4  CFF4 F146          	movff	prodh+0,??_IntServe+11
  4304+ 0022D8  CFF6 F147          	movff	tblptrl+0,??_IntServe+12
  4305+ 0022DC  CFF7 F148          	movff	tblptrh+0,??_IntServe+13
  4306+ 0022E0  CFF8 F149          	movff	tblptru+0,??_IntServe+14
  4307+                          	line	29
  4308+                          ;Lock.C: 29: if (TMR0IF) {
  4309+ 0022E4  A4F2               	btfss	c:(32658/8),(32658)&7	;volatile
  4310+ 0022E6  D001               	goto	i2u2991
  4311+ 0022E8  D001               	goto	i2u2990
  4312+ 0022EA                     i2u2991:
  4313+ 0022EA  D015               	goto	i2l167
  4314+ 0022EC                     i2u2990:
  4315+                          	line	30
  4316+                          ;Lock.C: 30: TMR0 = -N0;
  4317+ 0022EC  C006 F13B          	movff	(c:6),??_IntServe+0+0
  4318+ 0022F0  C007 F13C          	movff	(c:6+1),??_IntServe+0+0+1
  4319+ 0022F4  0101               	movlb	1	; () banked
  4320+ 0022F6  1F3B               	comf	(??_IntServe+0+0)&0ffh
  4321+ 0022F8  1F3C               	comf	(??_IntServe+0+1)&0ffh
  4322+ 0022FA  4B3B               	infsnz	(??_IntServe+0+0)&0ffh
  4323+ 0022FC  2B3C               	incf	(??_IntServe+0+1)&0ffh
  4324+ 0022FE  C13B  FFD6         	movff	??_IntServe+0+0,(c:4054)	;volatile
  4325+ 002302  C13C  FFD7         	movff	??_IntServe+0+1,(c:4054+1)	;volatile
  4326+                          	line	31
  4327+                          ;Lock.C: 31: if (PLAY) RB0 = !RB0;
  4328+ 002306  5001               	movf	((c:0+1)),c,w
  4329+ 002308  1000               	iorwf ((c:0)),c,w
  4330+                          
  4331+ 00230A  B4D8               	btfsc	status,2
  4332+ 00230C  D001               	goto	i2u3001
  4333+ 00230E  D001               	goto	i2u3000
  4334+ 002310                     i2u3001:
  4335+ 002310  D001               	goto	i2l168
  4336+ 002312                     i2u3000:
  4337+ 002312  7081               	btg	c:(31752/8),(31752)&7	;volatile
  4338+                          	
  4339+ 002314                     i2l168:		; BSR set to: ?
  4340+                          
  4341+                          	line	32
  4342+                          ;Lock.C: 32: TMR0IF = 0;
  4343+ 002314  94F2               	bcf	c:(32658/8),(32658)&7	;volatile
  4344+                          	line	33
  4345+                          	
  4346+ 002316                     i2l167:		; BSR set to: ?
  4347+                          
  4348+                          	line	34
  4349+                          ;Lock.C: 33: }
  4350+                          ;Lock.C: 34: if (TMR1IF) {
  4351+ 002316  A09E               	btfss	c:(31984/8),(31984)&7	;volatile
  4352+ 002318  D001               	goto	i2u3011
  4353+ 00231A  D001               	goto	i2u3010
  4354+ 00231C                     i2u3011:
  4355+ 00231C  D014               	goto	i2l169
  4356+ 00231E                     i2u3010:
  4357+                          	line	35
  4358+                          ;Lock.C: 35: TMR1 = -N1;
  4359+ 00231E  C008 F13B          	movff	(c:8),??_IntServe+0+0
  4360+ 002322  C009 F13C          	movff	(c:8+1),??_IntServe+0+0+1
  4361+ 002326  0101               	movlb	1	; () banked
  4362+ 002328  1F3B               	comf	(??_IntServe+0+0)&0ffh
  4363+ 00232A  1F3C               	comf	(??_IntServe+0+1)&0ffh
  4364+ 00232C  4B3B               	infsnz	(??_IntServe+0+0)&0ffh
  4365+ 00232E  2B3C               	incf	(??_IntServe+0+1)&0ffh
  4366+ 002330  C13B  FFCE         	movff	??_IntServe+0+0,(c:4046)	;volatile
  4367+ 002334  C13C  FFCF         	movff	??_IntServe+0+1,(c:4046+1)	;volatile
  4368+                          	line	36
  4369+                          ;Lock.C: 36: if (PORTB) RB1 = !RB1;
  4370+ 002338  5081               	movf	((c:3969)),c,w	;volatile
  4371+ 00233A  B4D8               	btfsc	status,2
  4372+ 00233C  D001               	goto	i2u3021
  4373+ 00233E  D001               	goto	i2u3020
  4374+ 002340                     i2u3021:
  4375+ 002340  D001               	goto	i2l170
  4376+ 002342                     i2u3020:
  4377+ 002342  7281               	btg	c:(31753/8),(31753)&7	;volatile
  4378+                          	
  4379+ 002344                     i2l170:		; BSR set to: ?
  4380+                          
  4381+                          	line	37
  4382+                          ;Lock.C: 37: TMR1IF = 0;
  4383+ 002344  909E               	bcf	c:(31984/8),(31984)&7	;volatile
  4384+                          	line	38
  4385+                          	
  4386+ 002346                     i2l169:		; BSR set to: ?
  4387+                          
  4388+                          	line	39
  4389+                          ;Lock.C: 38: }
  4390+                          ;Lock.C: 39: if (TMR3IF) {
  4391+ 002346  A2A1               	btfss	c:(32009/8),(32009)&7	;volatile
  4392+ 002348  D001               	goto	i2u3031
  4393+ 00234A  D001               	goto	i2u3030
  4394+ 00234C                     i2u3031:
  4395+ 00234C  D014               	goto	i2l171
  4396+ 00234E                     i2u3030:
  4397+                          	line	40
  4398+                          ;Lock.C: 40: TMR3 = -N2;
  4399+ 00234E  C004 F13B          	movff	(c:4),??_IntServe+0+0
  4400+ 002352  C005 F13C          	movff	(c:4+1),??_IntServe+0+0+1
  4401+ 002356  0101               	movlb	1	; () banked
  4402+ 002358  1F3B               	comf	(??_IntServe+0+0)&0ffh
  4403+ 00235A  1F3C               	comf	(??_IntServe+0+1)&0ffh
  4404+ 00235C  4B3B               	infsnz	(??_IntServe+0+0)&0ffh
  4405+ 00235E  2B3C               	incf	(??_IntServe+0+1)&0ffh
  4406+ 002360  C13B  FFB2         	movff	??_IntServe+0+0,(c:4018)	;volatile
  4407+ 002364  C13C  FFB3         	movff	??_IntServe+0+1,(c:4018+1)	;volatile
  4408+                          	line	41
  4409+                          ;Lock.C: 41: if (PORTB) RB2 = !RB2;
  4410+ 002368  5081               	movf	((c:3969)),c,w	;volatile
  4411+ 00236A  B4D8               	btfsc	status,2
  4412+ 00236C  D001               	goto	i2u3041
  4413+ 00236E  D001               	goto	i2u3040
  4414+ 002370                     i2u3041:
  4415+ 002370  D001               	goto	i2l172
  4416+ 002372                     i2u3040:
  4417+ 002372  7481               	btg	c:(31754/8),(31754)&7	;volatile
  4418+                          	
  4419+ 002374                     i2l172:		; BSR set to: ?
  4420+                          
  4421+                          	line	42
  4422+                          ;Lock.C: 42: TMR3IF = 0;
  4423+ 002374  92A1               	bcf	c:(32009/8),(32009)&7	;volatile
  4424+                          	line	43
  4425+                          	
  4426+ 002376                     i2l171:		; BSR set to: ?
  4427+                          
  4428+                          	line	45
  4429+                          ;Lock.C: 43: }
  4430+                          ;Lock.C: 45: }
  4431+ 002376                     i2l166:
  4432+                          			; BSR set to: ?
  4433+                          
  4434+ 002376  C149  FFF8         	movff	??_IntServe+14,tblptru+0
  4435+ 00237A  C148  FFF7         	movff	??_IntServe+13,tblptrh+0
  4436+ 00237E  C147  FFF6         	movff	??_IntServe+12,tblptrl+0
  4437+ 002382  C146  FFF4         	movff	??_IntServe+11,prodh+0
  4438+ 002386  C145  FFF3         	movff	??_IntServe+10,prodl+0
  4439+ 00238A  C144  FFDA         	movff	??_IntServe+9,fsr2h+0
  4440+ 00238E  C143  FFD9         	movff	??_IntServe+8,fsr2l+0
  4441+ 002392  C142  FFE2         	movff	??_IntServe+7,fsr1h+0
  4442+ 002396  C141  FFE1         	movff	??_IntServe+6,fsr1l+0
  4443+ 00239A  C140  FFEA         	movff	??_IntServe+5,fsr0h+0
  4444+ 00239E  C13F  FFE9         	movff	??_IntServe+4,fsr0l+0
  4445+ 0023A2  C13E  FFFB         	movff	??_IntServe+3,pclat+1
  4446+ 0023A6  C13D  FFFA         	movff	??_IntServe+2,pclat+0
  4447+ 0023AA  0011               	retfie f
  4448+                          	opt stack 0
  4449+                          GLOBAL __end_of_IntServe
  4450+ 0023AC                     	__end_of_IntServe:
  4451+                          	FNSIZE	_IntServe,15,0
  4452+                          ; =============== function _IntServe ends ======
      +                          ======
  4453+                          
  4454+                          	signat	_IntServe,88
  4455+                          	FNCALL	_main,_LCD_Init
  4456+                          	FNCALL	_main,_LCD_Move
  4457+                          	FNCALL	_main,_LCD_Write
  4458+                          	FNCALL	_main,_Wait_ms
  4459+                          	FNCALL	_main,_LCD_Inst
  4460+                          	FNCALL	_main,_ReadKey
  4461+                          	FNCALL	_main,___wmul
  4462+                          	FNCALL	_main,_unlock
  4463+                          	FNCALL	_main,___awdiv
  4464+                          	FNCALL	_main,_LCD_Out
  4465+                          	FNCALL	_unlock,_LCD_Move
  4466+                          	FNCALL	_unlock,_LCD_Write
  4467+                          	FNCALL	_unlock,_Wait_ms
  4468+                          	FNCALL	_unlock,_screenClear
  4469+                          	FNCALL	_unlock,_move
  4470+                          	FNCALL	_unlock,_playNote
  4471+                          	FNCALL	_ReadKey,_GetKey
  4472+                          	FNCALL	_ReadKey,_Wait_ms
  4473+                          	FNCALL	_LCD_Init,_LCD_Inst
  4474+                          	FNCALL	_LCD_Init,_Wait_ms
  4475+                          	FNCALL	_playNote,_Wait_ms
  4476+                          	FNCALL	_move,_LCD_Move
  4477+                          	FNCALL	_move,_LCD_Out
  4478+                          	FNCALL	_move,_Wait_ms
  4479+                          	FNCALL	_screenClear,_LCD_Move
  4480+                          	FNCALL	_screenClear,_LCD_Write
  4481+                          	FNCALL	_LCD_Out,_LCD_Write
  4482+                          	FNCALL	_LCD_Out,___almod
  4483+                          	FNCALL	_LCD_Out,___aldiv
  4484+                          	FNCALL	_LCD_Move,_LCD_Inst
  4485+                          	FNCALL	_LCD_Inst,_LCD_Strobe
  4486+                          	FNCALL	_LCD_Inst,_Wait_ms
  4487+                          	FNCALL	_LCD_Write,_LCD_Strobe
  4488+                          	FNCALL	_LCD_Strobe,_LCD_Pause
  4489+                          	FNROOT	_main
  4490+                          	FNCALL	intlevel2,_IntServe
  4491+                          	global	intlevel2
  4492+                          	FNROOT	intlevel2
  4493+                          	global	_TABLE
  4494+                          	global	_TABLE
  4495+                                  psect   text20,class=CODE,space=0,reloc=
      +                          2
  4496+ 000000                     _TABLE  equ     10
  4497+                          
  4498+                          	opt lm
  4499+                          
  4500+                          	DABS	1,10,4	;_TABLE
  4501+                                  psect   idata,class=CODE,space=0
  4502+                          	line	18
  4503+                          
  4504+                          ;initializer for _TABLE
  4505+ 001082  01                 	db	low(01h)
  4506+ 001083  02                 	db	low(02h)
  4507+ 001084  04                 	db	low(04h)
  4508+ 001085  08                 	db	low(08h)
  4509+                                  psect   smallconst,class=SMALLCONST,spac
      +                          e=0,reloc=2
  4510+ 001000  00                 	db	0	;reserve
  4511+                          	global	_MSG0
  4512+                          	line	10
  4513+ 001001                     _MSG0:
  4514+ 001001  20                 	db	low(020h)
  4515+ 001002  57                 	db	low(057h)
  4516+ 001003  72                 	db	low(072h)
  4517+ 001004  6F                 	db	low(06Fh)
  4518+ 001005  6E                 	db	low(06Eh)
  4519+ 001006  67                 	db	low(067h)
  4520+ 001007  20                 	db	low(020h)
  4521+ 001008  63                 	db	low(063h)
  4522+ 001009  6F                 	db	low(06Fh)
  4523+ 00100A  64                 	db	low(064h)
  4524+ 00100B  65                 	db	low(065h)
  4525+ 00100C  20                 	db	low(020h)
  4526+ 00100D  20                 	db	low(020h)
  4527+ 00100E  20                 	db	low(020h)
  4528+ 00100F  20                 	db	low(020h)
  4529+ 001010  20                 	db	low(020h)
  4530+ 001011  00                 	db	low(0)
  4531+ 001012  00                 	db   0
  4532+ 001013  00                 	db   0
  4533+ 001014  00                 	db   0
  4534+ 001015  00                 	db   0
  4535+                          	global	_MSG00
  4536+                          	line	9
  4537+ 001016                     _MSG00:
  4538+ 001016  20                 	db	low(020h)
  4539+ 001017  48                 	db	low(048h)
  4540+ 001018  65                 	db	low(065h)
  4541+ 001019  6C                 	db	low(06Ch)
  4542+ 00101A  6C                 	db	low(06Ch)
  4543+ 00101B  6F                 	db	low(06Fh)
  4544+ 00101C  20                 	db	low(020h)
  4545+ 00101D  20                 	db	low(020h)
  4546+ 00101E  20                 	db	low(020h)
  4547+ 00101F  20                 	db	low(020h)
  4548+ 001020  20                 	db	low(020h)
  4549+ 001021  20                 	db	low(020h)
  4550+ 001022  20                 	db	low(020h)
  4551+ 001023  20                 	db	low(020h)
  4552+ 001024  20                 	db	low(020h)
  4553+ 001025  20                 	db	low(020h)
  4554+ 001026  00                 	db	low(0)
  4555+ 001027  00                 	db   0
  4556+ 001028  00                 	db   0
  4557+ 001029  00                 	db   0
  4558+ 00102A  00                 	db   0
  4559+                          	global	_MSG1
  4560+                          	line	11
  4561+ 00102B                     _MSG1:
  4562+ 00102B  20                 	db	low(020h)
  4563+ 00102C  54                 	db	low(054h)
  4564+ 00102D  72                 	db	low(072h)
  4565+ 00102E  79                 	db	low(079h)
  4566+ 00102F  20                 	db	low(020h)
  4567+ 001030  61                 	db	low(061h)
  4568+ 001031  67                 	db	low(067h)
  4569+ 001032  61                 	db	low(061h)
  4570+ 001033  69                 	db	low(069h)
  4571+ 001034  6E                 	db	low(06Eh)
  4572+ 001035  20                 	db	low(020h)
  4573+ 001036  20                 	db	low(020h)
  4574+ 001037  20                 	db	low(020h)
  4575+ 001038  20                 	db	low(020h)
  4576+ 001039  20                 	db	low(020h)
  4577+ 00103A  20                 	db	low(020h)
  4578+ 00103B  00                 	db	low(0)
  4579+ 00103C  00                 	db   0
  4580+ 00103D  00                 	db   0
  4581+ 00103E  00                 	db   0
  4582+ 00103F  00                 	db   0
  4583+                          	global	_MSG2
  4584+                          	line	12
  4585+ 001040                     _MSG2:
  4586+ 001040  20                 	db	low(020h)
  4587+ 001041  59                 	db	low(059h)
  4588+ 001042  61                 	db	low(061h)
  4589+ 001043  79                 	db	low(079h)
  4590+ 001044  20                 	db	low(020h)
  4591+ 001045  20                 	db	low(020h)
  4592+ 001046  20                 	db	low(020h)
  4593+ 001047  20                 	db	low(020h)
  4594+ 001048  20                 	db	low(020h)
  4595+ 001049  20                 	db	low(020h)
  4596+ 00104A  20                 	db	low(020h)
  4597+ 00104B  20                 	db	low(020h)
  4598+ 00104C  20                 	db	low(020h)
  4599+ 00104D  20                 	db	low(020h)
  4600+ 00104E  20                 	db	low(020h)
  4601+ 00104F  20                 	db	low(020h)
  4602+ 001050  00                 	db	low(0)
  4603+ 001051  00                 	db   0
  4604+ 001052  00                 	db   0
  4605+ 001053  00                 	db   0
  4606+ 001054  00                 	db   0
  4607+                          	global	_MSG3
  4608+                          	line	13
  4609+ 001055                     _MSG3:
  4610+ 001055  20                 	db	low(020h)
  4611+ 001056  55                 	db	low(055h)
  4612+ 001057  6E                 	db	low(06Eh)
  4613+ 001058  6C                 	db	low(06Ch)
  4614+ 001059  6F                 	db	low(06Fh)
  4615+ 00105A  63                 	db	low(063h)
  4616+ 00105B  6B                 	db	low(06Bh)
  4617+ 00105C  69                 	db	low(069h)
  4618+ 00105D  6E                 	db	low(06Eh)
  4619+ 00105E  67                 	db	low(067h)
  4620+ 00105F  20                 	db	low(020h)
  4621+ 001060  20                 	db	low(020h)
  4622+ 001061  20                 	db	low(020h)
  4623+ 001062  20                 	db	low(020h)
  4624+ 001063  20                 	db	low(020h)
  4625+ 001064  20                 	db	low(020h)
  4626+ 001065  00                 	db	low(0)
  4627+ 001066  00                 	db   0
  4628+ 001067  00                 	db   0
  4629+ 001068  00                 	db   0
  4630+ 001069  00                 	db   0
  4631+                          	global	_MSGclear
  4632+                          	line	14
  4633+ 00106A                     _MSGclear:
  4634+ 00106A  20                 	db	low(020h)
  4635+ 00106B  20                 	db	low(020h)
  4636+ 00106C  20                 	db	low(020h)
  4637+ 00106D  20                 	db	low(020h)
  4638+ 00106E  20                 	db	low(020h)
  4639+ 00106F  20                 	db	low(020h)
  4640+ 001070  20                 	db	low(020h)
  4641+ 001071  20                 	db	low(020h)
  4642+ 001072  20                 	db	low(020h)
  4643+ 001073  20                 	db	low(020h)
  4644+ 001074  20                 	db	low(020h)
  4645+ 001075  20                 	db	low(020h)
  4646+ 001076  20                 	db	low(020h)
  4647+ 001077  20                 	db	low(020h)
  4648+ 001078  20                 	db	low(020h)
  4649+ 001079  20                 	db	low(020h)
  4650+ 00107A  00                 	db	low(0)
  4651+ 00107B  00                 	db   0
  4652+ 00107C  00                 	db   0
  4653+ 00107D  00                 	db   0
  4654+ 00107E  00                 	db   0
  4655+                          	global	_lockCode
  4656+                          	line	16
  4657+ 00107F                     _lockCode:
  4658+ 00107F  04D2               	dw	(04D2h)&0ffffh
  4659+                          	global	_MSG0
  4660+                          	global	_MSG00
  4661+                          	global	_MSG1
  4662+                          	global	_MSG2
  4663+                          	global	_MSG3
  4664+                          	global	_MSGclear
  4665+                          	global	_lockCode
  4666+                          	global	_N0
  4667+                          	global	_N0
  4668+ 000000                     _N0  equ     6
  4669+                          
  4670+                          	DABS	1,6,2	;_N0
  4671+                          	global	_N1
  4672+                          	global	_N1
  4673+ 000000                     _N1  equ     8
  4674+                          
  4675+                          	DABS	1,8,2	;_N1
  4676+                          	global	_N2
  4677+                          	global	_N2
  4678+ 000000                     _N2  equ     4
  4679+                          
  4680+                          	DABS	1,4,2	;_N2
  4681+                          	global	_PLAY
  4682+                          	global	_PLAY
  4683+ 000000                     _PLAY  equ     0
  4684+                          
  4685+                          	DABS	1,0,2	;_PLAY
  4686+                          	global	_STEP
  4687+                          	global	_STEP
  4688+ 000000                     _STEP  equ     2
  4689+                          
  4690+                          	DABS	1,2,2	;_STEP
  4691+                          	global	_TMR0
  4692+ 000000                     _TMR0	equ	0xFD6
  4693+                          	global	_TMR1
  4694+ 000000                     _TMR1	equ	0xFCE
  4695+                          	global	_TMR3
  4696+ 000000                     _TMR3	equ	0xFB2
  4697+                          	global	_ADCON1
  4698+ 000000                     _ADCON1	equ	0xFC1
  4699+                          	global	_PORTA
  4700+ 000000                     _PORTA	equ	0xF80
  4701+                          	global	_PORTB
  4702+ 000000                     _PORTB	equ	0xF81
  4703+                          	global	_PORTC
  4704+ 000000                     _PORTC	equ	0xF82
  4705+                          	global	_PORTD
  4706+ 000000                     _PORTD	equ	0xF83
  4707+                          	global	_T0CON
  4708+ 000000                     _T0CON	equ	0xFD5
  4709+                          	global	_T1CON
  4710+ 000000                     _T1CON	equ	0xFCD
  4711+                          	global	_T3CON
  4712+ 000000                     _T3CON	equ	0xFB1
  4713+                          	global	_TRISA
  4714+ 000000                     _TRISA	equ	0xF92
  4715+                          	global	_TRISB
  4716+ 000000                     _TRISB	equ	0xF93
  4717+                          	global	_TRISC
  4718+ 000000                     _TRISC	equ	0xF94
  4719+                          	global	_TRISD
  4720+ 000000                     _TRISD	equ	0xF95
  4721+                          	global	_TRISE
  4722+ 000000                     _TRISE	equ	0xF96
  4723+                          	global	_TXREG
  4724+ 000000                     _TXREG	equ	0xFAD
  4725+                          	global	_GIE
  4726+ 000000                     _GIE	equ	0x7F97
  4727+                          	global	_PEIE
  4728+ 000000                     _PEIE	equ	0x7F96
  4729+                          	global	_RB0
  4730+ 000000                     _RB0	equ	0x7C08
  4731+                          	global	_RB1
  4732+ 000000                     _RB1	equ	0x7C09
  4733+                          	global	_RB2
  4734+ 000000                     _RB2	equ	0x7C0A
  4735+                          	global	_RB3
  4736+ 000000                     _RB3	equ	0x7C0B
  4737+                          	global	_RB4
  4738+ 000000                     _RB4	equ	0x7C0C
  4739+                          	global	_RC3
  4740+ 000000                     _RC3	equ	0x7C13
  4741+                          	global	_RC4
  4742+ 000000                     _RC4	equ	0x7C14
  4743+                          	global	_RC5
  4744+ 000000                     _RC5	equ	0x7C15
  4745+                          	global	_RC6
  4746+ 000000                     _RC6	equ	0x7C16
  4747+                          	global	_RD1
  4748+ 000000                     _RD1	equ	0x7C19
  4749+                          	global	_RD2
  4750+ 000000                     _RD2	equ	0x7C1A
  4751+                          	global	_RD3
  4752+ 000000                     _RD3	equ	0x7C1B
  4753+                          	global	_T0CS
  4754+ 000000                     _T0CS	equ	0x7EAD
  4755+                          	global	_TMR0IE
  4756+ 000000                     _TMR0IE	equ	0x7F95
  4757+                          	global	_TMR0IF
  4758+ 000000                     _TMR0IF	equ	0x7F92
  4759+                          	global	_TMR0IP
  4760+ 000000                     _TMR0IP	equ	0x7F8A
  4761+                          	global	_TMR0ON
  4762+ 000000                     _TMR0ON	equ	0x7EAF
  4763                           	global	_TMR1CS
  4764  000000                     _TMR1CS	equ	0x7E69
  4765                           	global	_TMR1IE
  4766  000000                     _TMR1IE	equ	0x7CE8
  4767                           	global	_TMR1IF
  4768  000000                     _TMR1IF	equ	0x7CF0
  4769                           	global	_TMR1IP
  4770  000000                     _TMR1IP	equ	0x7CF8
  4771                           	global	_TMR1ON
  4772  000000                     _TMR1ON	equ	0x7E68
  4773                           	global	_TMR3CS
  4774  000000                     _TMR3CS	equ	0x7D89
  4775                           	global	_TMR3IE
  4776  000000                     _TMR3IE	equ	0x7D01
  4777                           	global	_TMR3IF
  4778  000000                     _TMR3IF	equ	0x7D09
  4779                           	global	_TMR3IP
  4780  000000                     _TMR3IP	equ	0x7D11
  4781                           	global	_TMR3ON
  4782  000000                     _TMR3ON	equ	0x7D88
  4783                           	global	_TRMT
  4784  000000                     _TRMT	equ	0x7D61
  4785  001081  00                 	db 0	; dummy byte at the end
  4786                           	psect	intsave_regs,class=BIGRAM,space=1
  4787                           	PSECT	param1,class=BANK1,space=1
  4788                           	GLOBAL	__Lparam1
  4789                           	FNCONF	param1,??,?
  4790                           	GLOBAL	__Labsbss0
  4791  000000                     __Labsbss0	EQU	0
  4792                           	GLOBAL	__Habsbss0
  4793  000000                     __Habsbss0	EQU	10
  4794                           	GLOBAL	__Ldata0
  4795  000000                     __Ldata0	EQU	10
  4796                           	GLOBAL	__Hdata0
  4797  000000                     __Hdata0	EQU	14
  4798                           GLOBAL	__Lparam, __Hparam
  4799                           GLOBAL	__Lparam1, __Hparam1
  4800  000000                     __Lparam	EQU	__Lparam1
  4801  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Tue Dec 10 18:54:40 2024

                  _N0 000006                    _N1 000008  
                  _N2 000004          ___awdiv@sign 0113  
 ___wmul@multiplicand 0110           ?_LCD_Strobe 012E  
                 l110 24D2                   l111 253E  
                 l200 263E                   l113 251E  
                 l121 2702                   l114 24F8  
                 l122 25F2                   l130 2028  
                 l210 202A                   l202 260C  
                 l115 2516                   l123 24C0  
                 l131 1EE4                   l211 2186  
                 l203 25F4                   l124 245C  
                 l132 1EF8                   l220 1CA6  
                 l212 204E                   l117 26EE  
                 l109 253E                   l125 247C  
                 l133 1F18                   l213 2072  
                 l205 2624                   l118 26DA  
                 l126 249E                   l134 1FB4  
                 l214 208E                   l310 2292  
                 l206 260C                   l222 1738  
                 l230 16D8                   l119 26EE  
                 l127 24C0                   l215 1D18  
                 l207 267C                   l311 2228  
                 l231 15D6                   l223 158A  
                 l128 26B8                   l136 1FC6  
                 l216 1BDC                   l208 2188  
                 l312 2216                   l232 1618  
                 l224 1496                   l240 117C  
                 l137 2028                   l217 1C1C  
                 l209 2184                   l313 2234  
                 l129 243C                   l225 14D8  
                 l234 1664                   l242 1400  
                 l139 1FEC                   l219 1C66  
                 l307 22B8                   l315 2292  
                 l235 16A6                   l227 1524  
                 l243 124A                   l180 17F0  
                 l316 2234                   l308 21C4  
                 l228 1566                   l173 19CC  
                 l181 181C                   l317 227E  
                 l309 21E6                   l237 1736  
                 l245 12B4                   l182 183C  
                 l174 1770                   l318 22AE  
                 l246 12F8                   l191 1900  
                 l175 1790                   l247 132C  
                 l239 113C                   l272 1B90  
                 l280 1B50                   l192 1918  
                 l184 1854                   l281 1AB2  
                 l273 1A1A                   l193 1930  
                 l185 186C                   l177 17A8  
                 l282 1B34                   l274 1A4E  
                 l290 1DDC                   l194 1948  
                 l186 1884                   l178 17C0  
                 l283 1B7E                   l275 1B50  
                 l195 1960                   l187 189C  
                 l179 17D8                   l276 1AA6  
                 l284 1EA0                   l292 1E60  
                 l196 1978                   l188 18C8  
                 l277 1A8C                   l293 1DDC  
                 l285 1D66                   l197 1990  
                 l189 18E8                   l278 1AB2  
                 l294 1E44                   l286 1D92  
                 l198 19A8                   l295 1E8E  
                 l287 1E60                   l199 19C0  
                 l288 1DD0                   l289 1DB6  
                 l581 259A                   l582 254E  
                 l583 2572                   l579 25A4  
                 _GIE 007F97                   _RB0 007C08  
                 _RB1 007C09                   _RB2 007C0A  
                 _RB3 007C0B                   _RB4 007C0C  
                 _RD1 007C19                   _RC3 007C13  
                 _RD2 007C1A                   _RC4 007C14  
                 _RD3 007C1B                   _RC5 007C15  
                 _RC6 007C16       __end_of_LCD_Out 202A  
                _T0CS 007EAD                  u1100 176E  
                u1101 176C                  u1110 1790  
                u1111 178E                  u1200 1874  
                u1120 1798                  u1201 1872  
                u1121 1796                  u1210 188C  
                u1130 17B0                  u1211 188A  
                u1131 17AE                  u1300 1980  
                u1220 18C6                  u1140 17C8  
                u1301 197E                  u1221 18C4  
                u1141 17C6                  u1310 1998  
                u1230 18E8                  u1150 17E0  
                u1311 1996                  u1231 18E6  
                u1151 17DE                  u1320 19B0  
                u1240 18F0                  u1160 181A  
                u1321 19AE                  u1241 18EE  
                u1161 1818                  u1250 1908  
                u1170 183C                  u1251 1906  
                u1171 183A                  u1260 1920  
                u1180 1844                  u3100 14D8  
                u1261 191E                  u1181 1842  
                u3101 14D6                  u1270 1938  
                u1190 185C                  u3110 1522  
                u1271 1936                  u1191 185A  
                u3111 1520                  u1280 1950  
                u3120 1566                  u2400 259A  
                u3200 1278                  u1281 194E  
                u3121 1564                  u2401 2598  
                u3201 1276                  u1290 1968  
                u3050 2042                  u3130 15D4  
                u3210 12C6                  u1291 1966  
                u3051 2040                  u3131 15D2  
                u3211 12C4                  u3300 246A  
                u3060 2066                  u1700 21D0  
                u3140 1618                  u3220 130A  
                u3301 2468                  u3061 2064  
                u1701 21CE                  u3141 1616  
                u3221 1308                  u3310 248C  
                u3230 1EAE                  u3070 208C  
                u1710 2204                  u3150 1662  
                u3311 248A                  u3231 1EAC  
                u3071 208A                  u1711 2202  
                u3151 1660                  u3400 1DDC  
                u3320 24AE                  u3240 1F16  
                u1720 2234                  u3160 16A6  
                u3080 144A                  u3401 1DDA  
                u3321 24AC                  u3241 1F14  
                u1721 2232                  u3161 16A4  
                u3081 1448                  u3410 1E14  
                u3250 1FB4                  u3330 1BDA  
                u1730 2260                  u3170 170E  
                u3090 1494                  u3411 1E12  
                u3251 1FB2                  u3331 1BD8  
                u3075 2084                  u1731 225E  
                u3171 170C                  u3091 1492  
                u3500 2516                  u3420 1E6E  
                u3260 1FC4                  u3340 1C1C  
                u1740 22A0                  u3180 113A  
                u3501 2514                  u3421 1E6C  
                u3261 1FC2                  u3341 1C1A  
                u1741 229E                  u3085 1442  
                u3181 1138                  u3510 253E  
                u3430 19EA                  u3270 1FD8  
                u3350 1C64                  u2390 255A  
                u3190 117C                  u3511 253C  
                u3431 19E8                  u3271 1FD6  
                u3351 1C62                  u3175 1706  
                u2391 2558                  u3191 117A  
                u3440 1A26                  u3280 2028  
                u3360 1CA6                  u3520 260C  
                u3441 1A24                  u3281 2026  
                u3361 1CA4                  u3521 260A  
                u3450 1A7A                  u3370 1D36  
                u3290 244A                  u1690 21A6  
                u3530 2624                  u3451 1A78  
                u3371 1D34                  u3291 2448  
                u1691 21A4                  u3531 2622  
                u3540 26D8                  u3460 1AB2  
                u3380 1D72                  u3541 26D6  
                u3461 1AB0                  u3381 1D70  
                u3550 26EE                  u3470 1AFE  
                u3390 1DA4                  u3551 26EC  
                u3471 1AFC                  u3391 1DA2  
                u3480 1B5E                  u3481 1B5C  
                u3490 24F6                  _PEIE 007F96  
                u3491 24F4                  _MSG0 1001  
                _MSG1 102B                  _MSG2 1040  
                _MSG3 1055                  _PLAY 000000  
                _TMR0 000FD6                  _TMR1 000FCE  
                _TMR3 000FB2                  _STEP 000002  
                _TRMT 007D61                  _main 1086  
                _move 202A                  fsr0h 000FEA  
                fsr1h 000FE2                  indf0 000FEF  
                fsr0l 000FE9                  fsr2h 000FDA  
                fsr1l 000FE1                  fsr2l 000FD9  
                pclat 000FFA                  prodh 000FF4  
                prodl 000FF3                  start 0818  
     __end_of_ReadKey 2640           LCD_Out@DATA 011A  
         LCD_Move@Col 011B           LCD_Move@Row 011A  
    __end_of_LCD_Init 243E      __end_of_LCD_Inst 25F4  
    __end_of_LCD_Move 24C2       __end_of_Wait_ms 2540  
     __end_of___aldiv 1B92       __end_of___almod 1EA2  
               ?_main 0100       __end_of___awdiv 22BA  
               ?_move 0116                 _T0CON 000FD5  
     ___awdiv@divisor 0110                 _T1CON 000FCD  
               _T3CON 000FB1                 _MSG00 1016  
               i2l170 2344                 i2l171 2376  
               i2l172 2374                 i2l166 2376  
               i2l167 2316                 i2l168 2314  
               i2l169 2346                 _TABLE 00000A  
     ___awdiv@counter 0112                 _PORTA 000F80  
               _PORTB 000F81                 _PORTC 000F82  
               _PORTD 000F83                 _TRISA 000F92  
               _TRISB 000F93                 _TRISC 000F94  
               _TRISD 000F95                 _TRISE 000F96  
               _TXREG 000FAD                 main@T 0100  
               main@X 010A                 main@Y 0106  
               main@Z 0102                 main@i 0108  
               tablat 000FF5                 status 000FD8  
        __end_of_main 1406          __end_of_move 218A  
    __end_of_IntServe 23AC                ??_main 0100  
              ??_move 0118         __activetblptr 000003  
   __end_of_LCD_Pause 26F0             ??_LCD_Out 0120  
   __end_of_LCD_Write 26BA                _ADCON1 000FC1  
        ?_screenClear 0116      ___awdiv@dividend 010E  
              i2u3000 2312                i2u3001 2310  
              i2u3010 231E                i2u3011 231C  
              i2u3020 2342                i2u3021 2340  
              i2u3030 234E                i2u3031 234C  
              i2u3040 2372                i2u3041 2370  
              i2u2990 22EC                i2u2991 22EA  
              _TMR0IE 007F95                _TMR0IF 007F92  
              _TMR1IE 007CE8                _TMR1IF 007CF0  
              _TMR1CS 007E69                _TMR0IP 007F8A  
              _TMR3IE 007D01                _TMR3IF 007D09  
              _TMR3CS 007D89                _TMR1IP 007CF8  
              _TMR0ON 007EAF                _TMR3IP 007D11  
              _TMR1ON 007E68                _TMR3ON 007D88  
           ??_ReadKey 010E                _GetKey 173A  
              __Ldata 00000A             ??_Wait_ms 0120  
           ??___aldiv 0134             ??___almod 0134  
              ___wmul 2540             ??___awdiv 0112  
    ___awdiv@quotient 0114                _unlock 1406  
    __end_of_playNote 267E          __mediumconst 1082  
              tblptrh 000FF7                tblptrl 000FF6  
              tblptru 000FF8            __accesstop 0080  
           ?_LCD_Init 010E             ?_LCD_Inst 011C  
           ?_LCD_Move 011A             LCD_Inst@c 011C  
        ??_LCD_Strobe 012E             ?_IntServe 013B  
          ??_LCD_Init 010E            ??_LCD_Inst 011D  
          ??_LCD_Move 011C    __end_of_LCD_Strobe 2704  
             ?_GetKey 0110               ?___wmul 010E  
             ?_unlock 010E               _LCD_Out 1EA2  
             GetKey@i 0111            ??_IntServe 013B  
             _ReadKey 25F4               __Hdata0 00000E  
             __Ldata0 00000A             ?_playNote 0116  
             __Hparam 014A               __Lparam 0100  
             _Wait_ms 24C2               ___aldiv 19CE  
             ___almod 1D1A               ___awdiv 218A  
             __ramtop 1000      ___aldiv@dividend 012C  
           _LCD_Pause 26BA             _LCD_Write 267E  
       __Lmediumconst 1082               int_func 0808  
             move@REF 0116            ??_playNote 011C  
    ___aldiv@quotient 0136               unlock@i 0112  
          ?_LCD_Pause 012E            ?_LCD_Write 012C  
      __end_of_GetKey 19CE            LCD_Pause@x 012E  
      __end_of___wmul 25A6            LCD_Write@c 012C  
      __end_of_unlock 173A             __Habsbss0 00000A  
           __Labsbss0 000000              ??_GetKey 0110  
            ??___wmul 0112              ??_unlock 0110  
            ?_LCD_Out 011A              LCD_Out@A 0121  
            LCD_Out@D 011E              LCD_Out@N 011F  
            LCD_Out@i 0120           ??_LCD_Pause 012E  
         ??_LCD_Write 012D              ?_ReadKey 010E  
        GetKey@RESULT 0110              ?_Wait_ms 011E  
          playNote@f0 0116            playNote@f1 0118  
          playNote@f2 011A              ?___aldiv 012C  
            ?___almod 012C              ?___awdiv 010E  
    ___almod@dividend 012C           __smallconst 1000  
       ??_screenClear 0116       ___aldiv@divisor 0130  
     ___aldiv@counter 0134              _LCD_Init 23AC  
            _LCD_Inst 25A6              _LCD_Move 243E  
      ___wmul@product 0112              _MSGclear 106A  
   ___wmul@multiplier 010E              ReadKey@X 010F  
            ReadKey@Y 010E          screenClear@i 0116  
            _IntServe 22BA   __end_of_screenClear 1D1A  
            __Hparam1 014A              __Lparam1 0100  
            Wait_ms@X 011E              Wait_ms@i 0120  
            Wait_ms@j 0122          __Lsmallconst 1000  
          unlock@code 010E       ___almod@divisor 0130  
     ___almod@counter 0135              _lockCode 107F  
            _playNote 2640              main@TEMP 0104  
          _LCD_Strobe 26F0             unlock@REF 0110  
         _screenClear 1B92              intlevel2 2704  
        ___aldiv@sign 0135          ___almod@sign 0134  
